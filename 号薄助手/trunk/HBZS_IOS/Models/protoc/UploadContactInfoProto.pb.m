// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "UploadContactInfoProto.pb.h"

@implementation UploadContactInfoProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UploadContactInfoProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ContactProtoRoot registerAllExtensions:registry];
    [SyncUploadContactProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface UploadContactInfoRequest ()
@property (retain) NSMutableArray* mutableContactInfoList;
@property (retain) NSMutableArray* mutableGroupInfoList;
@property (retain) Contact* businessCard;
@end

@implementation UploadContactInfoRequest

@synthesize mutableContactInfoList;
@synthesize mutableGroupInfoList;
- (BOOL) hasBusinessCard {
  return !!hasBusinessCard_;
}
- (void) setHasBusinessCard:(BOOL) value {
  hasBusinessCard_ = !!value;
}
@synthesize businessCard;
- (void) dealloc {
  self.mutableContactInfoList = nil;
  self.mutableGroupInfoList = nil;
  self.businessCard = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.businessCard = [Contact defaultInstance];
  }
  return self;
}
static UploadContactInfoRequest* defaultUploadContactInfoRequestInstance = nil;
+ (void) initialize {
  if (self == [UploadContactInfoRequest class]) {
    defaultUploadContactInfoRequestInstance = [[UploadContactInfoRequest alloc] init];
  }
}
+ (UploadContactInfoRequest*) defaultInstance {
  return defaultUploadContactInfoRequestInstance;
}
- (UploadContactInfoRequest*) defaultInstance {
  return defaultUploadContactInfoRequestInstance;
}
- (NSArray*) contactInfoList {
  return mutableContactInfoList;
}
- (Contact*) contactInfoAtIndex:(int32_t) index {
  id value = [mutableContactInfoList objectAtIndex:index];
  return value;
}
- (NSArray*) groupInfoList {
  return mutableGroupInfoList;
}
- (Group*) groupInfoAtIndex:(int32_t) index {
  id value = [mutableGroupInfoList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Contact* element in self.contactInfoList) {
    [output writeMessage:1 value:element];
  }
  for (Group* element in self.groupInfoList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasBusinessCard) {
    [output writeMessage:3 value:self.businessCard];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Contact* element in self.contactInfoList) {
    size += computeMessageSize(1, element);
  }
  for (Group* element in self.groupInfoList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasBusinessCard) {
    size += computeMessageSize(3, self.businessCard);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UploadContactInfoRequest*) parseFromData:(NSData*) data {
  return (UploadContactInfoRequest*)[[[UploadContactInfoRequest builder] mergeFromData:data] build];
}
+ (UploadContactInfoRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadContactInfoRequest*)[[[UploadContactInfoRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UploadContactInfoRequest*) parseFromInputStream:(NSInputStream*) input {
  return (UploadContactInfoRequest*)[[[UploadContactInfoRequest builder] mergeFromInputStream:input] build];
}
+ (UploadContactInfoRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadContactInfoRequest*)[[[UploadContactInfoRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UploadContactInfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UploadContactInfoRequest*)[[[UploadContactInfoRequest builder] mergeFromCodedInputStream:input] build];
}
+ (UploadContactInfoRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadContactInfoRequest*)[[[UploadContactInfoRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UploadContactInfoRequest_Builder*) builder {
  return [[[UploadContactInfoRequest_Builder alloc] init] autorelease];
}
+ (UploadContactInfoRequest_Builder*) builderWithPrototype:(UploadContactInfoRequest*) prototype {
  return [[UploadContactInfoRequest builder] mergeFrom:prototype];
}
- (UploadContactInfoRequest_Builder*) builder {
  return [UploadContactInfoRequest builder];
}
@end

@interface UploadContactInfoRequest_Builder()
@property (retain) UploadContactInfoRequest* result;
@end

@implementation UploadContactInfoRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UploadContactInfoRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UploadContactInfoRequest_Builder*) clear {
  self.result = [[[UploadContactInfoRequest alloc] init] autorelease];
  return self;
}
- (UploadContactInfoRequest_Builder*) clone {
  return [UploadContactInfoRequest builderWithPrototype:result];
}
- (UploadContactInfoRequest*) defaultInstance {
  return [UploadContactInfoRequest defaultInstance];
}
- (UploadContactInfoRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UploadContactInfoRequest*) buildPartial {
  UploadContactInfoRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UploadContactInfoRequest_Builder*) mergeFrom:(UploadContactInfoRequest*) other {
  if (other == [UploadContactInfoRequest defaultInstance]) {
    return self;
  }
  if (other.mutableContactInfoList.count > 0) {
    if (result.mutableContactInfoList == nil) {
      result.mutableContactInfoList = [NSMutableArray array];
    }
    [result.mutableContactInfoList addObjectsFromArray:other.mutableContactInfoList];
  }
  if (other.mutableGroupInfoList.count > 0) {
    if (result.mutableGroupInfoList == nil) {
      result.mutableGroupInfoList = [NSMutableArray array];
    }
    [result.mutableGroupInfoList addObjectsFromArray:other.mutableGroupInfoList];
  }
  if (other.hasBusinessCard) {
    [self mergeBusinessCard:other.businessCard];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UploadContactInfoRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UploadContactInfoRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactInfo:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Group_Builder* subBuilder = [Group builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupInfo:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasBusinessCard) {
          [subBuilder mergeFrom:self.businessCard];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessCard:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) contactInfoList {
  if (result.mutableContactInfoList == nil) { return [NSArray array]; }
  return result.mutableContactInfoList;
}
- (Contact*) contactInfoAtIndex:(int32_t) index {
  return [result contactInfoAtIndex:index];
}
- (UploadContactInfoRequest_Builder*) replaceContactInfoAtIndex:(int32_t) index with:(Contact*) value {
  [result.mutableContactInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UploadContactInfoRequest_Builder*) addAllContactInfo:(NSArray*) values {
  if (result.mutableContactInfoList == nil) {
    result.mutableContactInfoList = [NSMutableArray array];
  }
  [result.mutableContactInfoList addObjectsFromArray:values];
  return self;
}
- (UploadContactInfoRequest_Builder*) clearContactInfoList {
  result.mutableContactInfoList = nil;
  return self;
}
- (UploadContactInfoRequest_Builder*) addContactInfo:(Contact*) value {
  if (result.mutableContactInfoList == nil) {
    result.mutableContactInfoList = [NSMutableArray array];
  }
  [result.mutableContactInfoList addObject:value];
  return self;
}
- (NSArray*) groupInfoList {
  if (result.mutableGroupInfoList == nil) { return [NSArray array]; }
  return result.mutableGroupInfoList;
}
- (Group*) groupInfoAtIndex:(int32_t) index {
  return [result groupInfoAtIndex:index];
}
- (UploadContactInfoRequest_Builder*) replaceGroupInfoAtIndex:(int32_t) index with:(Group*) value {
  [result.mutableGroupInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UploadContactInfoRequest_Builder*) addAllGroupInfo:(NSArray*) values {
  if (result.mutableGroupInfoList == nil) {
    result.mutableGroupInfoList = [NSMutableArray array];
  }
  [result.mutableGroupInfoList addObjectsFromArray:values];
  return self;
}
- (UploadContactInfoRequest_Builder*) clearGroupInfoList {
  result.mutableGroupInfoList = nil;
  return self;
}
- (UploadContactInfoRequest_Builder*) addGroupInfo:(Group*) value {
  if (result.mutableGroupInfoList == nil) {
    result.mutableGroupInfoList = [NSMutableArray array];
  }
  [result.mutableGroupInfoList addObject:value];
  return self;
}
- (BOOL) hasBusinessCard {
  return result.hasBusinessCard;
}
- (Contact*) businessCard {
  return result.businessCard;
}
- (UploadContactInfoRequest_Builder*) setBusinessCard:(Contact*) value {
  result.hasBusinessCard = YES;
  result.businessCard = value;
  return self;
}
- (UploadContactInfoRequest_Builder*) setBusinessCardBuilder:(Contact_Builder*) builderForValue {
  return [self setBusinessCard:[builderForValue build]];
}
- (UploadContactInfoRequest_Builder*) mergeBusinessCard:(Contact*) value {
  if (result.hasBusinessCard &&
      result.businessCard != [Contact defaultInstance]) {
    result.businessCard =
      [[[Contact builderWithPrototype:result.businessCard] mergeFrom:value] buildPartial];
  } else {
    result.businessCard = value;
  }
  result.hasBusinessCard = YES;
  return self;
}
- (UploadContactInfoRequest_Builder*) clearBusinessCard {
  result.hasBusinessCard = NO;
  result.businessCard = [Contact defaultInstance];
  return self;
}
@end

@interface UploadContactInfoResponse ()
@property (retain) NSString* sessionId;
@property int32_t contactListVersion;
@property (retain) NSMutableArray* mutableContactMappingInfoList;
@property (retain) NSMutableArray* mutableGroupMappingInfoList;
@property int32_t businessCardVersion;
@end

@implementation UploadContactInfoResponse

- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) value {
  hasSessionId_ = !!value;
}
@synthesize sessionId;
- (BOOL) hasContactListVersion {
  return !!hasContactListVersion_;
}
- (void) setHasContactListVersion:(BOOL) value {
  hasContactListVersion_ = !!value;
}
@synthesize contactListVersion;
@synthesize mutableContactMappingInfoList;
@synthesize mutableGroupMappingInfoList;
- (BOOL) hasBusinessCardVersion {
  return !!hasBusinessCardVersion_;
}
- (void) setHasBusinessCardVersion:(BOOL) value {
  hasBusinessCardVersion_ = !!value;
}
@synthesize businessCardVersion;
- (void) dealloc {
  self.sessionId = nil;
  self.mutableContactMappingInfoList = nil;
  self.mutableGroupMappingInfoList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sessionId = @"";
    self.contactListVersion = 0;
    self.businessCardVersion = 0;
  }
  return self;
}
static UploadContactInfoResponse* defaultUploadContactInfoResponseInstance = nil;
+ (void) initialize {
  if (self == [UploadContactInfoResponse class]) {
    defaultUploadContactInfoResponseInstance = [[UploadContactInfoResponse alloc] init];
  }
}
+ (UploadContactInfoResponse*) defaultInstance {
  return defaultUploadContactInfoResponseInstance;
}
- (UploadContactInfoResponse*) defaultInstance {
  return defaultUploadContactInfoResponseInstance;
}
- (NSArray*) contactMappingInfoList {
  return mutableContactMappingInfoList;
}
- (SyncMappingInfo*) contactMappingInfoAtIndex:(int32_t) index {
  id value = [mutableContactMappingInfoList objectAtIndex:index];
  return value;
}
- (NSArray*) groupMappingInfoList {
  return mutableGroupMappingInfoList;
}
- (SyncMappingInfo*) groupMappingInfoAtIndex:(int32_t) index {
  id value = [mutableGroupMappingInfoList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (SyncMappingInfo* element in self.contactMappingInfoList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (SyncMappingInfo* element in self.groupMappingInfoList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSessionId) {
    [output writeString:1 value:self.sessionId];
  }
  if (self.hasContactListVersion) {
    [output writeInt32:2 value:self.contactListVersion];
  }
  for (SyncMappingInfo* element in self.contactMappingInfoList) {
    [output writeMessage:3 value:element];
  }
  for (SyncMappingInfo* element in self.groupMappingInfoList) {
    [output writeMessage:4 value:element];
  }
  if (self.hasBusinessCardVersion) {
    [output writeInt32:5 value:self.businessCardVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSessionId) {
    size += computeStringSize(1, self.sessionId);
  }
  if (self.hasContactListVersion) {
    size += computeInt32Size(2, self.contactListVersion);
  }
  for (SyncMappingInfo* element in self.contactMappingInfoList) {
    size += computeMessageSize(3, element);
  }
  for (SyncMappingInfo* element in self.groupMappingInfoList) {
    size += computeMessageSize(4, element);
  }
  if (self.hasBusinessCardVersion) {
    size += computeInt32Size(5, self.businessCardVersion);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UploadContactInfoResponse*) parseFromData:(NSData*) data {
  return (UploadContactInfoResponse*)[[[UploadContactInfoResponse builder] mergeFromData:data] build];
}
+ (UploadContactInfoResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadContactInfoResponse*)[[[UploadContactInfoResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UploadContactInfoResponse*) parseFromInputStream:(NSInputStream*) input {
  return (UploadContactInfoResponse*)[[[UploadContactInfoResponse builder] mergeFromInputStream:input] build];
}
+ (UploadContactInfoResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadContactInfoResponse*)[[[UploadContactInfoResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UploadContactInfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UploadContactInfoResponse*)[[[UploadContactInfoResponse builder] mergeFromCodedInputStream:input] build];
}
+ (UploadContactInfoResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadContactInfoResponse*)[[[UploadContactInfoResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UploadContactInfoResponse_Builder*) builder {
  return [[[UploadContactInfoResponse_Builder alloc] init] autorelease];
}
+ (UploadContactInfoResponse_Builder*) builderWithPrototype:(UploadContactInfoResponse*) prototype {
  return [[UploadContactInfoResponse builder] mergeFrom:prototype];
}
- (UploadContactInfoResponse_Builder*) builder {
  return [UploadContactInfoResponse builder];
}
@end

@interface UploadContactInfoResponse_Builder()
@property (retain) UploadContactInfoResponse* result;
@end

@implementation UploadContactInfoResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UploadContactInfoResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UploadContactInfoResponse_Builder*) clear {
  self.result = [[[UploadContactInfoResponse alloc] init] autorelease];
  return self;
}
- (UploadContactInfoResponse_Builder*) clone {
  return [UploadContactInfoResponse builderWithPrototype:result];
}
- (UploadContactInfoResponse*) defaultInstance {
  return [UploadContactInfoResponse defaultInstance];
}
- (UploadContactInfoResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UploadContactInfoResponse*) buildPartial {
  UploadContactInfoResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UploadContactInfoResponse_Builder*) mergeFrom:(UploadContactInfoResponse*) other {
  if (other == [UploadContactInfoResponse defaultInstance]) {
    return self;
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  if (other.hasContactListVersion) {
    [self setContactListVersion:other.contactListVersion];
  }
  if (other.mutableContactMappingInfoList.count > 0) {
    if (result.mutableContactMappingInfoList == nil) {
      result.mutableContactMappingInfoList = [NSMutableArray array];
    }
    [result.mutableContactMappingInfoList addObjectsFromArray:other.mutableContactMappingInfoList];
  }
  if (other.mutableGroupMappingInfoList.count > 0) {
    if (result.mutableGroupMappingInfoList == nil) {
      result.mutableGroupMappingInfoList = [NSMutableArray array];
    }
    [result.mutableGroupMappingInfoList addObjectsFromArray:other.mutableGroupMappingInfoList];
  }
  if (other.hasBusinessCardVersion) {
    [self setBusinessCardVersion:other.businessCardVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UploadContactInfoResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UploadContactInfoResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setSessionId:[input readString]];
        break;
      }
      case 16: {
        [self setContactListVersion:[input readInt32]];
        break;
      }
      case 26: {
        SyncMappingInfo_Builder* subBuilder = [SyncMappingInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactMappingInfo:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        SyncMappingInfo_Builder* subBuilder = [SyncMappingInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMappingInfo:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setBusinessCardVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasSessionId {
  return result.hasSessionId;
}
- (NSString*) sessionId {
  return result.sessionId;
}
- (UploadContactInfoResponse_Builder*) setSessionId:(NSString*) value {
  result.hasSessionId = YES;
  result.sessionId = value;
  return self;
}
- (UploadContactInfoResponse_Builder*) clearSessionId {
  result.hasSessionId = NO;
  result.sessionId = @"";
  return self;
}
- (BOOL) hasContactListVersion {
  return result.hasContactListVersion;
}
- (int32_t) contactListVersion {
  return result.contactListVersion;
}
- (UploadContactInfoResponse_Builder*) setContactListVersion:(int32_t) value {
  result.hasContactListVersion = YES;
  result.contactListVersion = value;
  return self;
}
- (UploadContactInfoResponse_Builder*) clearContactListVersion {
  result.hasContactListVersion = NO;
  result.contactListVersion = 0;
  return self;
}
- (NSArray*) contactMappingInfoList {
  if (result.mutableContactMappingInfoList == nil) { return [NSArray array]; }
  return result.mutableContactMappingInfoList;
}
- (SyncMappingInfo*) contactMappingInfoAtIndex:(int32_t) index {
  return [result contactMappingInfoAtIndex:index];
}
- (UploadContactInfoResponse_Builder*) replaceContactMappingInfoAtIndex:(int32_t) index with:(SyncMappingInfo*) value {
  [result.mutableContactMappingInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UploadContactInfoResponse_Builder*) addAllContactMappingInfo:(NSArray*) values {
  if (result.mutableContactMappingInfoList == nil) {
    result.mutableContactMappingInfoList = [NSMutableArray array];
  }
  [result.mutableContactMappingInfoList addObjectsFromArray:values];
  return self;
}
- (UploadContactInfoResponse_Builder*) clearContactMappingInfoList {
  result.mutableContactMappingInfoList = nil;
  return self;
}
- (UploadContactInfoResponse_Builder*) addContactMappingInfo:(SyncMappingInfo*) value {
  if (result.mutableContactMappingInfoList == nil) {
    result.mutableContactMappingInfoList = [NSMutableArray array];
  }
  [result.mutableContactMappingInfoList addObject:value];
  return self;
}
- (NSArray*) groupMappingInfoList {
  if (result.mutableGroupMappingInfoList == nil) { return [NSArray array]; }
  return result.mutableGroupMappingInfoList;
}
- (SyncMappingInfo*) groupMappingInfoAtIndex:(int32_t) index {
  return [result groupMappingInfoAtIndex:index];
}
- (UploadContactInfoResponse_Builder*) replaceGroupMappingInfoAtIndex:(int32_t) index with:(SyncMappingInfo*) value {
  [result.mutableGroupMappingInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UploadContactInfoResponse_Builder*) addAllGroupMappingInfo:(NSArray*) values {
  if (result.mutableGroupMappingInfoList == nil) {
    result.mutableGroupMappingInfoList = [NSMutableArray array];
  }
  [result.mutableGroupMappingInfoList addObjectsFromArray:values];
  return self;
}
- (UploadContactInfoResponse_Builder*) clearGroupMappingInfoList {
  result.mutableGroupMappingInfoList = nil;
  return self;
}
- (UploadContactInfoResponse_Builder*) addGroupMappingInfo:(SyncMappingInfo*) value {
  if (result.mutableGroupMappingInfoList == nil) {
    result.mutableGroupMappingInfoList = [NSMutableArray array];
  }
  [result.mutableGroupMappingInfoList addObject:value];
  return self;
}
- (BOOL) hasBusinessCardVersion {
  return result.hasBusinessCardVersion;
}
- (int32_t) businessCardVersion {
  return result.businessCardVersion;
}
- (UploadContactInfoResponse_Builder*) setBusinessCardVersion:(int32_t) value {
  result.hasBusinessCardVersion = YES;
  result.businessCardVersion = value;
  return self;
}
- (UploadContactInfoResponse_Builder*) clearBusinessCardVersion {
  result.hasBusinessCardVersion = NO;
  result.businessCardVersion = 0;
  return self;
}
@end

