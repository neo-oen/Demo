// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SyncSmsProto.pb.h"

@implementation SyncSmsProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SyncSmsProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BaseTypeProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL SyncSmsRequestTypeIsValidValue(SyncSmsRequestType value) {
  switch (value) {
    case SyncSmsRequestTypeBackup:
    case SyncSmsRequestTypeRecover:
      return YES;
    default:
      return NO;
  }
}
@interface SyncSmsRequest ()
@property (retain) NSMutableArray* mutableSmsSummaryList;
@property SyncSmsRequestType type;
@end

@implementation SyncSmsRequest

@synthesize mutableSmsSummaryList;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (void) dealloc {
  self.mutableSmsSummaryList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = SyncSmsRequestTypeBackup;
  }
  return self;
}
static SyncSmsRequest* defaultSyncSmsRequestInstance = nil;
+ (void) initialize {
  if (self == [SyncSmsRequest class]) {
    defaultSyncSmsRequestInstance = [[SyncSmsRequest alloc] init];
  }
}
+ (SyncSmsRequest*) defaultInstance {
  return defaultSyncSmsRequestInstance;
}
- (SyncSmsRequest*) defaultInstance {
  return defaultSyncSmsRequestInstance;
}
- (NSArray*) smsSummaryList {
  return mutableSmsSummaryList;
}
- (SmsSummary*) smsSummaryAtIndex:(int32_t) index {
  id value = [mutableSmsSummaryList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (SmsSummary* element in self.smsSummaryList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (SmsSummary* element in self.smsSummaryList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasType) {
    size += computeEnumSize(2, self.type);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncSmsRequest*) parseFromData:(NSData*) data {
  return (SyncSmsRequest*)[[[SyncSmsRequest builder] mergeFromData:data] build];
}
+ (SyncSmsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSmsRequest*)[[[SyncSmsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncSmsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (SyncSmsRequest*)[[[SyncSmsRequest builder] mergeFromInputStream:input] build];
}
+ (SyncSmsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSmsRequest*)[[[SyncSmsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncSmsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncSmsRequest*)[[[SyncSmsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (SyncSmsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSmsRequest*)[[[SyncSmsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncSmsRequest_Builder*) builder {
  return [[[SyncSmsRequest_Builder alloc] init] autorelease];
}
+ (SyncSmsRequest_Builder*) builderWithPrototype:(SyncSmsRequest*) prototype {
  return [[SyncSmsRequest builder] mergeFrom:prototype];
}
- (SyncSmsRequest_Builder*) builder {
  return [SyncSmsRequest builder];
}
@end

@interface SyncSmsRequest_Builder()
@property (retain) SyncSmsRequest* result;
@end

@implementation SyncSmsRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncSmsRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncSmsRequest_Builder*) clear {
  self.result = [[[SyncSmsRequest alloc] init] autorelease];
  return self;
}
- (SyncSmsRequest_Builder*) clone {
  return [SyncSmsRequest builderWithPrototype:result];
}
- (SyncSmsRequest*) defaultInstance {
  return [SyncSmsRequest defaultInstance];
}
- (SyncSmsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncSmsRequest*) buildPartial {
  SyncSmsRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncSmsRequest_Builder*) mergeFrom:(SyncSmsRequest*) other {
  if (other == [SyncSmsRequest defaultInstance]) {
    return self;
  }
  if (other.mutableSmsSummaryList.count > 0) {
    if (result.mutableSmsSummaryList == nil) {
      result.mutableSmsSummaryList = [NSMutableArray array];
    }
    [result.mutableSmsSummaryList addObjectsFromArray:other.mutableSmsSummaryList];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncSmsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncSmsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        SmsSummary_Builder* subBuilder = [SmsSummary builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSmsSummary:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (SyncSmsRequestTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
    }
  }
}
- (NSArray*) smsSummaryList {
  if (result.mutableSmsSummaryList == nil) { return [NSArray array]; }
  return result.mutableSmsSummaryList;
}
- (SmsSummary*) smsSummaryAtIndex:(int32_t) index {
  return [result smsSummaryAtIndex:index];
}
- (SyncSmsRequest_Builder*) replaceSmsSummaryAtIndex:(int32_t) index with:(SmsSummary*) value {
  [result.mutableSmsSummaryList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncSmsRequest_Builder*) addAllSmsSummary:(NSArray*) values {
  if (result.mutableSmsSummaryList == nil) {
    result.mutableSmsSummaryList = [NSMutableArray array];
  }
  [result.mutableSmsSummaryList addObjectsFromArray:values];
  return self;
}
- (SyncSmsRequest_Builder*) clearSmsSummaryList {
  result.mutableSmsSummaryList = nil;
  return self;
}
- (SyncSmsRequest_Builder*) addSmsSummary:(SmsSummary*) value {
  if (result.mutableSmsSummaryList == nil) {
    result.mutableSmsSummaryList = [NSMutableArray array];
  }
  [result.mutableSmsSummaryList addObject:value];
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (SyncSmsRequestType) type {
  return result.type;
}
- (SyncSmsRequest_Builder*) setType:(SyncSmsRequestType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (SyncSmsRequest_Builder*) clearType {
  result.hasType = NO;
  result.type = SyncSmsRequestTypeBackup;
  return self;
}
@end

@interface SyncSmsResponse ()
@property (retain) NSMutableArray* mutableUploadIdList;
@property (retain) NSMutableArray* mutableDownloadIdList;
@property (retain) NSMutableArray* mutableDeleteIdList;
@property (retain) NSMutableArray* mutableUpdateFavouriteList;
@end

@implementation SyncSmsResponse

@synthesize mutableUploadIdList;
@synthesize mutableDownloadIdList;
@synthesize mutableDeleteIdList;
@synthesize mutableUpdateFavouriteList;
- (void) dealloc {
  self.mutableUploadIdList = nil;
  self.mutableDownloadIdList = nil;
  self.mutableDeleteIdList = nil;
  self.mutableUpdateFavouriteList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static SyncSmsResponse* defaultSyncSmsResponseInstance = nil;
+ (void) initialize {
  if (self == [SyncSmsResponse class]) {
    defaultSyncSmsResponseInstance = [[SyncSmsResponse alloc] init];
  }
}
+ (SyncSmsResponse*) defaultInstance {
  return defaultSyncSmsResponseInstance;
}
- (SyncSmsResponse*) defaultInstance {
  return defaultSyncSmsResponseInstance;
}
- (NSArray*) uploadIdList {
  return mutableUploadIdList;
}
- (NSString*) uploadIdAtIndex:(int32_t) index {
  id value = [mutableUploadIdList objectAtIndex:index];
  return value;
}
- (NSArray*) downloadIdList {
  return mutableDownloadIdList;
}
- (NSString*) downloadIdAtIndex:(int32_t) index {
  id value = [mutableDownloadIdList objectAtIndex:index];
  return value;
}
- (NSArray*) deleteIdList {
  return mutableDeleteIdList;
}
- (NSString*) deleteIdAtIndex:(int32_t) index {
  id value = [mutableDeleteIdList objectAtIndex:index];
  return value;
}
- (NSArray*) updateFavouriteList {
  return mutableUpdateFavouriteList;
}
- (SmsSummary*) updateFavouriteAtIndex:(int32_t) index {
  id value = [mutableUpdateFavouriteList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSString* element in self.mutableUploadIdList) {
    [output writeString:1 value:element];
  }
  for (NSString* element in self.mutableDownloadIdList) {
    [output writeString:2 value:element];
  }
  for (NSString* element in self.mutableDeleteIdList) {
    [output writeString:3 value:element];
  }
  for (SmsSummary* element in self.updateFavouriteList) {
    [output writeMessage:4 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableUploadIdList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableUploadIdList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableDownloadIdList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableDownloadIdList.count;
  }
  {
    int32_t dataSize = 0;
    for (NSString* element in self.mutableDeleteIdList) {
      dataSize += computeStringSizeNoTag(element);
    }
    size += dataSize;
    size += 1 * self.mutableDeleteIdList.count;
  }
  for (SmsSummary* element in self.updateFavouriteList) {
    size += computeMessageSize(4, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncSmsResponse*) parseFromData:(NSData*) data {
  return (SyncSmsResponse*)[[[SyncSmsResponse builder] mergeFromData:data] build];
}
+ (SyncSmsResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSmsResponse*)[[[SyncSmsResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncSmsResponse*) parseFromInputStream:(NSInputStream*) input {
  return (SyncSmsResponse*)[[[SyncSmsResponse builder] mergeFromInputStream:input] build];
}
+ (SyncSmsResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSmsResponse*)[[[SyncSmsResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncSmsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncSmsResponse*)[[[SyncSmsResponse builder] mergeFromCodedInputStream:input] build];
}
+ (SyncSmsResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSmsResponse*)[[[SyncSmsResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncSmsResponse_Builder*) builder {
  return [[[SyncSmsResponse_Builder alloc] init] autorelease];
}
+ (SyncSmsResponse_Builder*) builderWithPrototype:(SyncSmsResponse*) prototype {
  return [[SyncSmsResponse builder] mergeFrom:prototype];
}
- (SyncSmsResponse_Builder*) builder {
  return [SyncSmsResponse builder];
}
@end

@interface SyncSmsResponse_Builder()
@property (retain) SyncSmsResponse* result;
@end

@implementation SyncSmsResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncSmsResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncSmsResponse_Builder*) clear {
  self.result = [[[SyncSmsResponse alloc] init] autorelease];
  return self;
}
- (SyncSmsResponse_Builder*) clone {
  return [SyncSmsResponse builderWithPrototype:result];
}
- (SyncSmsResponse*) defaultInstance {
  return [SyncSmsResponse defaultInstance];
}
- (SyncSmsResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncSmsResponse*) buildPartial {
  SyncSmsResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncSmsResponse_Builder*) mergeFrom:(SyncSmsResponse*) other {
  if (other == [SyncSmsResponse defaultInstance]) {
    return self;
  }
  if (other.mutableUploadIdList.count > 0) {
    if (result.mutableUploadIdList == nil) {
      result.mutableUploadIdList = [NSMutableArray array];
    }
    [result.mutableUploadIdList addObjectsFromArray:other.mutableUploadIdList];
  }
  if (other.mutableDownloadIdList.count > 0) {
    if (result.mutableDownloadIdList == nil) {
      result.mutableDownloadIdList = [NSMutableArray array];
    }
    [result.mutableDownloadIdList addObjectsFromArray:other.mutableDownloadIdList];
  }
  if (other.mutableDeleteIdList.count > 0) {
    if (result.mutableDeleteIdList == nil) {
      result.mutableDeleteIdList = [NSMutableArray array];
    }
    [result.mutableDeleteIdList addObjectsFromArray:other.mutableDeleteIdList];
  }
  if (other.mutableUpdateFavouriteList.count > 0) {
    if (result.mutableUpdateFavouriteList == nil) {
      result.mutableUpdateFavouriteList = [NSMutableArray array];
    }
    [result.mutableUpdateFavouriteList addObjectsFromArray:other.mutableUpdateFavouriteList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncSmsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncSmsResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self addUploadId:[input readString]];
        break;
      }
      case 18: {
        [self addDownloadId:[input readString]];
        break;
      }
      case 26: {
        [self addDeleteId:[input readString]];
        break;
      }
      case 34: {
        SmsSummary_Builder* subBuilder = [SmsSummary builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addUpdateFavourite:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) uploadIdList {
  if (result.mutableUploadIdList == nil) {
    return [NSArray array];
  }
  return result.mutableUploadIdList;
}
- (NSString*) uploadIdAtIndex:(int32_t) index {
  return [result uploadIdAtIndex:index];
}
- (SyncSmsResponse_Builder*) replaceUploadIdAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableUploadIdList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncSmsResponse_Builder*) addUploadId:(NSString*) value {
  if (result.mutableUploadIdList == nil) {
    result.mutableUploadIdList = [NSMutableArray array];
  }
  [result.mutableUploadIdList addObject:value];
  return self;
}
- (SyncSmsResponse_Builder*) addAllUploadId:(NSArray*) values {
  if (result.mutableUploadIdList == nil) {
    result.mutableUploadIdList = [NSMutableArray array];
  }
  [result.mutableUploadIdList addObjectsFromArray:values];
  return self;
}
- (SyncSmsResponse_Builder*) clearUploadIdList {
  result.mutableUploadIdList = nil;
  return self;
}
- (NSArray*) downloadIdList {
  if (result.mutableDownloadIdList == nil) {
    return [NSArray array];
  }
  return result.mutableDownloadIdList;
}
- (NSString*) downloadIdAtIndex:(int32_t) index {
  return [result downloadIdAtIndex:index];
}
- (SyncSmsResponse_Builder*) replaceDownloadIdAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableDownloadIdList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncSmsResponse_Builder*) addDownloadId:(NSString*) value {
  if (result.mutableDownloadIdList == nil) {
    result.mutableDownloadIdList = [NSMutableArray array];
  }
  [result.mutableDownloadIdList addObject:value];
  return self;
}
- (SyncSmsResponse_Builder*) addAllDownloadId:(NSArray*) values {
  if (result.mutableDownloadIdList == nil) {
    result.mutableDownloadIdList = [NSMutableArray array];
  }
  [result.mutableDownloadIdList addObjectsFromArray:values];
  return self;
}
- (SyncSmsResponse_Builder*) clearDownloadIdList {
  result.mutableDownloadIdList = nil;
  return self;
}
- (NSArray*) deleteIdList {
  if (result.mutableDeleteIdList == nil) {
    return [NSArray array];
  }
  return result.mutableDeleteIdList;
}
- (NSString*) deleteIdAtIndex:(int32_t) index {
  return [result deleteIdAtIndex:index];
}
- (SyncSmsResponse_Builder*) replaceDeleteIdAtIndex:(int32_t) index with:(NSString*) value {
  [result.mutableDeleteIdList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncSmsResponse_Builder*) addDeleteId:(NSString*) value {
  if (result.mutableDeleteIdList == nil) {
    result.mutableDeleteIdList = [NSMutableArray array];
  }
  [result.mutableDeleteIdList addObject:value];
  return self;
}
- (SyncSmsResponse_Builder*) addAllDeleteId:(NSArray*) values {
  if (result.mutableDeleteIdList == nil) {
    result.mutableDeleteIdList = [NSMutableArray array];
  }
  [result.mutableDeleteIdList addObjectsFromArray:values];
  return self;
}
- (SyncSmsResponse_Builder*) clearDeleteIdList {
  result.mutableDeleteIdList = nil;
  return self;
}
- (NSArray*) updateFavouriteList {
  if (result.mutableUpdateFavouriteList == nil) { return [NSArray array]; }
  return result.mutableUpdateFavouriteList;
}
- (SmsSummary*) updateFavouriteAtIndex:(int32_t) index {
  return [result updateFavouriteAtIndex:index];
}
- (SyncSmsResponse_Builder*) replaceUpdateFavouriteAtIndex:(int32_t) index with:(SmsSummary*) value {
  [result.mutableUpdateFavouriteList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncSmsResponse_Builder*) addAllUpdateFavourite:(NSArray*) values {
  if (result.mutableUpdateFavouriteList == nil) {
    result.mutableUpdateFavouriteList = [NSMutableArray array];
  }
  [result.mutableUpdateFavouriteList addObjectsFromArray:values];
  return self;
}
- (SyncSmsResponse_Builder*) clearUpdateFavouriteList {
  result.mutableUpdateFavouriteList = nil;
  return self;
}
- (SyncSmsResponse_Builder*) addUpdateFavourite:(SmsSummary*) value {
  if (result.mutableUpdateFavouriteList == nil) {
    result.mutableUpdateFavouriteList = [NSMutableArray array];
  }
  [result.mutableUpdateFavouriteList addObject:value];
  return self;
}
@end

