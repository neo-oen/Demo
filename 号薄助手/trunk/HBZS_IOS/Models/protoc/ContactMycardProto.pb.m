// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ContactMycardProto.pb.h"

@implementation ContactMycardProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ContactMycardProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ContactProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ContactMyCardRequest ()
@property (retain) NSMutableArray* mutableUserIdList;
@property BOOL isMoreCard;
@end

@implementation ContactMyCardRequest

@synthesize mutableUserIdList;
- (BOOL) hasIsMoreCard {
  return !!hasIsMoreCard_;
}
- (void) setHasIsMoreCard:(BOOL) value {
  hasIsMoreCard_ = !!value;
}
- (BOOL) isMoreCard {
  return !!isMoreCard_;
}
- (void) setIsMoreCard:(BOOL) value {
  isMoreCard_ = !!value;
}
- (void) dealloc {
  self.mutableUserIdList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isMoreCard = NO;
  }
  return self;
}
static ContactMyCardRequest* defaultContactMyCardRequestInstance = nil;
+ (void) initialize {
  if (self == [ContactMyCardRequest class]) {
    defaultContactMyCardRequestInstance = [[ContactMyCardRequest alloc] init];
  }
}
+ (ContactMyCardRequest*) defaultInstance {
  return defaultContactMyCardRequestInstance;
}
- (ContactMyCardRequest*) defaultInstance {
  return defaultContactMyCardRequestInstance;
}
- (NSArray*) userIdList {
  return mutableUserIdList;
}
- (int32_t) userIdAtIndex:(int32_t) index {
  id value = [mutableUserIdList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (NSNumber* value in self.mutableUserIdList) {
    [output writeInt32:1 value:[value intValue]];
  }
  if (self.hasIsMoreCard) {
    [output writeBool:2 value:self.isMoreCard];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUserIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    size += 1 * self.mutableUserIdList.count;
  }
  if (self.hasIsMoreCard) {
    size += computeBoolSize(2, self.isMoreCard);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactMyCardRequest*) parseFromData:(NSData*) data {
  return (ContactMyCardRequest*)[[[ContactMyCardRequest builder] mergeFromData:data] build];
}
+ (ContactMyCardRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactMyCardRequest*)[[[ContactMyCardRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactMyCardRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ContactMyCardRequest*)[[[ContactMyCardRequest builder] mergeFromInputStream:input] build];
}
+ (ContactMyCardRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactMyCardRequest*)[[[ContactMyCardRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactMyCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactMyCardRequest*)[[[ContactMyCardRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ContactMyCardRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactMyCardRequest*)[[[ContactMyCardRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactMyCardRequest_Builder*) builder {
  return [[[ContactMyCardRequest_Builder alloc] init] autorelease];
}
+ (ContactMyCardRequest_Builder*) builderWithPrototype:(ContactMyCardRequest*) prototype {
  return [[ContactMyCardRequest builder] mergeFrom:prototype];
}
- (ContactMyCardRequest_Builder*) builder {
  return [ContactMyCardRequest builder];
}
@end

@interface ContactMyCardRequest_Builder()
@property (retain) ContactMyCardRequest* result;
@end

@implementation ContactMyCardRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactMyCardRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactMyCardRequest_Builder*) clear {
  self.result = [[[ContactMyCardRequest alloc] init] autorelease];
  return self;
}
- (ContactMyCardRequest_Builder*) clone {
  return [ContactMyCardRequest builderWithPrototype:result];
}
- (ContactMyCardRequest*) defaultInstance {
  return [ContactMyCardRequest defaultInstance];
}
- (ContactMyCardRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactMyCardRequest*) buildPartial {
  ContactMyCardRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactMyCardRequest_Builder*) mergeFrom:(ContactMyCardRequest*) other {
  if (other == [ContactMyCardRequest defaultInstance]) {
    return self;
  }
  if (other.mutableUserIdList.count > 0) {
    if (result.mutableUserIdList == nil) {
      result.mutableUserIdList = [NSMutableArray array];
    }
    [result.mutableUserIdList addObjectsFromArray:other.mutableUserIdList];
  }
  if (other.hasIsMoreCard) {
    [self setIsMoreCard:other.isMoreCard];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactMyCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactMyCardRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self addUserId:[input readInt32]];
        break;
      }
      case 16: {
        [self setIsMoreCard:[input readBool]];
        break;
      }
    }
  }
}
- (NSArray*) userIdList {
  if (result.mutableUserIdList == nil) {
    return [NSArray array];
  }
  return result.mutableUserIdList;
}
- (int32_t) userIdAtIndex:(int32_t) index {
  return [result userIdAtIndex:index];
}
- (ContactMyCardRequest_Builder*) replaceUserIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableUserIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (ContactMyCardRequest_Builder*) addUserId:(int32_t) value {
  if (result.mutableUserIdList == nil) {
    result.mutableUserIdList = [NSMutableArray array];
  }
  [result.mutableUserIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (ContactMyCardRequest_Builder*) addAllUserId:(NSArray*) values {
  if (result.mutableUserIdList == nil) {
    result.mutableUserIdList = [NSMutableArray array];
  }
  [result.mutableUserIdList addObjectsFromArray:values];
  return self;
}
- (ContactMyCardRequest_Builder*) clearUserIdList {
  result.mutableUserIdList = nil;
  return self;
}
- (BOOL) hasIsMoreCard {
  return result.hasIsMoreCard;
}
- (BOOL) isMoreCard {
  return result.isMoreCard;
}
- (ContactMyCardRequest_Builder*) setIsMoreCard:(BOOL) value {
  result.hasIsMoreCard = YES;
  result.isMoreCard = value;
  return self;
}
- (ContactMyCardRequest_Builder*) clearIsMoreCard {
  result.hasIsMoreCard = NO;
  result.isMoreCard = NO;
  return self;
}
@end

@interface ContactMyCardResponse ()
@property (retain) Contact* businessCard;
@property (retain) NSMutableArray* mutableBusinessCardsList;
@end

@implementation ContactMyCardResponse

- (BOOL) hasBusinessCard {
  return !!hasBusinessCard_;
}
- (void) setHasBusinessCard:(BOOL) value {
  hasBusinessCard_ = !!value;
}
@synthesize businessCard;
@synthesize mutableBusinessCardsList;
- (void) dealloc {
  self.businessCard = nil;
  self.mutableBusinessCardsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.businessCard = [Contact defaultInstance];
  }
  return self;
}
static ContactMyCardResponse* defaultContactMyCardResponseInstance = nil;
+ (void) initialize {
  if (self == [ContactMyCardResponse class]) {
    defaultContactMyCardResponseInstance = [[ContactMyCardResponse alloc] init];
  }
}
+ (ContactMyCardResponse*) defaultInstance {
  return defaultContactMyCardResponseInstance;
}
- (ContactMyCardResponse*) defaultInstance {
  return defaultContactMyCardResponseInstance;
}
- (NSArray*) businessCardsList {
  return mutableBusinessCardsList;
}
- (Contact*) businessCardsAtIndex:(int32_t) index {
  id value = [mutableBusinessCardsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasBusinessCard) {
    [output writeMessage:1 value:self.businessCard];
  }
  for (Contact* element in self.businessCardsList) {
    [output writeMessage:2 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasBusinessCard) {
    size += computeMessageSize(1, self.businessCard);
  }
  for (Contact* element in self.businessCardsList) {
    size += computeMessageSize(2, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactMyCardResponse*) parseFromData:(NSData*) data {
  return (ContactMyCardResponse*)[[[ContactMyCardResponse builder] mergeFromData:data] build];
}
+ (ContactMyCardResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactMyCardResponse*)[[[ContactMyCardResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactMyCardResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ContactMyCardResponse*)[[[ContactMyCardResponse builder] mergeFromInputStream:input] build];
}
+ (ContactMyCardResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactMyCardResponse*)[[[ContactMyCardResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactMyCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactMyCardResponse*)[[[ContactMyCardResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ContactMyCardResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactMyCardResponse*)[[[ContactMyCardResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactMyCardResponse_Builder*) builder {
  return [[[ContactMyCardResponse_Builder alloc] init] autorelease];
}
+ (ContactMyCardResponse_Builder*) builderWithPrototype:(ContactMyCardResponse*) prototype {
  return [[ContactMyCardResponse builder] mergeFrom:prototype];
}
- (ContactMyCardResponse_Builder*) builder {
  return [ContactMyCardResponse builder];
}
@end

@interface ContactMyCardResponse_Builder()
@property (retain) ContactMyCardResponse* result;
@end

@implementation ContactMyCardResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactMyCardResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactMyCardResponse_Builder*) clear {
  self.result = [[[ContactMyCardResponse alloc] init] autorelease];
  return self;
}
- (ContactMyCardResponse_Builder*) clone {
  return [ContactMyCardResponse builderWithPrototype:result];
}
- (ContactMyCardResponse*) defaultInstance {
  return [ContactMyCardResponse defaultInstance];
}
- (ContactMyCardResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactMyCardResponse*) buildPartial {
  ContactMyCardResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactMyCardResponse_Builder*) mergeFrom:(ContactMyCardResponse*) other {
  if (other == [ContactMyCardResponse defaultInstance]) {
    return self;
  }
  if (other.hasBusinessCard) {
    [self mergeBusinessCard:other.businessCard];
  }
  if (other.mutableBusinessCardsList.count > 0) {
    if (result.mutableBusinessCardsList == nil) {
      result.mutableBusinessCardsList = [NSMutableArray array];
    }
    [result.mutableBusinessCardsList addObjectsFromArray:other.mutableBusinessCardsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactMyCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactMyCardResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasBusinessCard) {
          [subBuilder mergeFrom:self.businessCard];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessCard:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addBusinessCards:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasBusinessCard {
  return result.hasBusinessCard;
}
- (Contact*) businessCard {
  return result.businessCard;
}
- (ContactMyCardResponse_Builder*) setBusinessCard:(Contact*) value {
  result.hasBusinessCard = YES;
  result.businessCard = value;
  return self;
}
- (ContactMyCardResponse_Builder*) setBusinessCardBuilder:(Contact_Builder*) builderForValue {
  return [self setBusinessCard:[builderForValue build]];
}
- (ContactMyCardResponse_Builder*) mergeBusinessCard:(Contact*) value {
  if (result.hasBusinessCard &&
      result.businessCard != [Contact defaultInstance]) {
    result.businessCard =
      [[[Contact builderWithPrototype:result.businessCard] mergeFrom:value] buildPartial];
  } else {
    result.businessCard = value;
  }
  result.hasBusinessCard = YES;
  return self;
}
- (ContactMyCardResponse_Builder*) clearBusinessCard {
  result.hasBusinessCard = NO;
  result.businessCard = [Contact defaultInstance];
  return self;
}
- (NSArray*) businessCardsList {
  if (result.mutableBusinessCardsList == nil) { return [NSArray array]; }
  return result.mutableBusinessCardsList;
}
- (Contact*) businessCardsAtIndex:(int32_t) index {
  return [result businessCardsAtIndex:index];
}
- (ContactMyCardResponse_Builder*) replaceBusinessCardsAtIndex:(int32_t) index with:(Contact*) value {
  [result.mutableBusinessCardsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ContactMyCardResponse_Builder*) addAllBusinessCards:(NSArray*) values {
  if (result.mutableBusinessCardsList == nil) {
    result.mutableBusinessCardsList = [NSMutableArray array];
  }
  [result.mutableBusinessCardsList addObjectsFromArray:values];
  return self;
}
- (ContactMyCardResponse_Builder*) clearBusinessCardsList {
  result.mutableBusinessCardsList = nil;
  return self;
}
- (ContactMyCardResponse_Builder*) addBusinessCards:(Contact*) value {
  if (result.mutableBusinessCardsList == nil) {
    result.mutableBusinessCardsList = [NSMutableArray array];
  }
  [result.mutableBusinessCardsList addObject:value];
  return self;
}
@end

