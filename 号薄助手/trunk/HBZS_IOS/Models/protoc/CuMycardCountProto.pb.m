// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "CuMycardCountProto.pb.h"

@implementation CuMycardCountProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [CuMycardCountProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface CuMycardCountRequest ()
@end

@implementation CuMycardCountRequest

- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static CuMycardCountRequest* defaultCuMycardCountRequestInstance = nil;
+ (void) initialize {
  if (self == [CuMycardCountRequest class]) {
    defaultCuMycardCountRequestInstance = [[CuMycardCountRequest alloc] init];
  }
}
+ (CuMycardCountRequest*) defaultInstance {
  return defaultCuMycardCountRequestInstance;
}
- (CuMycardCountRequest*) defaultInstance {
  return defaultCuMycardCountRequestInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CuMycardCountRequest*) parseFromData:(NSData*) data {
  return (CuMycardCountRequest*)[[[CuMycardCountRequest builder] mergeFromData:data] build];
}
+ (CuMycardCountRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CuMycardCountRequest*)[[[CuMycardCountRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CuMycardCountRequest*) parseFromInputStream:(NSInputStream*) input {
  return (CuMycardCountRequest*)[[[CuMycardCountRequest builder] mergeFromInputStream:input] build];
}
+ (CuMycardCountRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CuMycardCountRequest*)[[[CuMycardCountRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CuMycardCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CuMycardCountRequest*)[[[CuMycardCountRequest builder] mergeFromCodedInputStream:input] build];
}
+ (CuMycardCountRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CuMycardCountRequest*)[[[CuMycardCountRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CuMycardCountRequest_Builder*) builder {
  return [[[CuMycardCountRequest_Builder alloc] init] autorelease];
}
+ (CuMycardCountRequest_Builder*) builderWithPrototype:(CuMycardCountRequest*) prototype {
  return [[CuMycardCountRequest builder] mergeFrom:prototype];
}
- (CuMycardCountRequest_Builder*) builder {
  return [CuMycardCountRequest builder];
}
@end

@interface CuMycardCountRequest_Builder()
@property (retain) CuMycardCountRequest* result;
@end

@implementation CuMycardCountRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CuMycardCountRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CuMycardCountRequest_Builder*) clear {
  self.result = [[[CuMycardCountRequest alloc] init] autorelease];
  return self;
}
- (CuMycardCountRequest_Builder*) clone {
  return [CuMycardCountRequest builderWithPrototype:result];
}
- (CuMycardCountRequest*) defaultInstance {
  return [CuMycardCountRequest defaultInstance];
}
- (CuMycardCountRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CuMycardCountRequest*) buildPartial {
  CuMycardCountRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CuMycardCountRequest_Builder*) mergeFrom:(CuMycardCountRequest*) other {
  if (other == [CuMycardCountRequest defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CuMycardCountRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CuMycardCountRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface CuMycardCountResponse ()
@property int32_t resCode;
@property (retain) NSString* recDesc;
@property int32_t cardCount;
@end

@implementation CuMycardCountResponse

- (BOOL) hasResCode {
  return !!hasResCode_;
}
- (void) setHasResCode:(BOOL) value {
  hasResCode_ = !!value;
}
@synthesize resCode;
- (BOOL) hasRecDesc {
  return !!hasRecDesc_;
}
- (void) setHasRecDesc:(BOOL) value {
  hasRecDesc_ = !!value;
}
@synthesize recDesc;
- (BOOL) hasCardCount {
  return !!hasCardCount_;
}
- (void) setHasCardCount:(BOOL) value {
  hasCardCount_ = !!value;
}
@synthesize cardCount;
- (void) dealloc {
  self.recDesc = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.resCode = 0;
    self.recDesc = @"";
    self.cardCount = 0;
  }
  return self;
}
static CuMycardCountResponse* defaultCuMycardCountResponseInstance = nil;
+ (void) initialize {
  if (self == [CuMycardCountResponse class]) {
    defaultCuMycardCountResponseInstance = [[CuMycardCountResponse alloc] init];
  }
}
+ (CuMycardCountResponse*) defaultInstance {
  return defaultCuMycardCountResponseInstance;
}
- (CuMycardCountResponse*) defaultInstance {
  return defaultCuMycardCountResponseInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResCode) {
    [output writeInt32:1 value:self.resCode];
  }
  if (self.hasRecDesc) {
    [output writeString:2 value:self.recDesc];
  }
  if (self.hasCardCount) {
    [output writeInt32:3 value:self.cardCount];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasResCode) {
    size += computeInt32Size(1, self.resCode);
  }
  if (self.hasRecDesc) {
    size += computeStringSize(2, self.recDesc);
  }
  if (self.hasCardCount) {
    size += computeInt32Size(3, self.cardCount);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CuMycardCountResponse*) parseFromData:(NSData*) data {
  return (CuMycardCountResponse*)[[[CuMycardCountResponse builder] mergeFromData:data] build];
}
+ (CuMycardCountResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CuMycardCountResponse*)[[[CuMycardCountResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CuMycardCountResponse*) parseFromInputStream:(NSInputStream*) input {
  return (CuMycardCountResponse*)[[[CuMycardCountResponse builder] mergeFromInputStream:input] build];
}
+ (CuMycardCountResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CuMycardCountResponse*)[[[CuMycardCountResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CuMycardCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CuMycardCountResponse*)[[[CuMycardCountResponse builder] mergeFromCodedInputStream:input] build];
}
+ (CuMycardCountResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CuMycardCountResponse*)[[[CuMycardCountResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CuMycardCountResponse_Builder*) builder {
  return [[[CuMycardCountResponse_Builder alloc] init] autorelease];
}
+ (CuMycardCountResponse_Builder*) builderWithPrototype:(CuMycardCountResponse*) prototype {
  return [[CuMycardCountResponse builder] mergeFrom:prototype];
}
- (CuMycardCountResponse_Builder*) builder {
  return [CuMycardCountResponse builder];
}
@end

@interface CuMycardCountResponse_Builder()
@property (retain) CuMycardCountResponse* result;
@end

@implementation CuMycardCountResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CuMycardCountResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CuMycardCountResponse_Builder*) clear {
  self.result = [[[CuMycardCountResponse alloc] init] autorelease];
  return self;
}
- (CuMycardCountResponse_Builder*) clone {
  return [CuMycardCountResponse builderWithPrototype:result];
}
- (CuMycardCountResponse*) defaultInstance {
  return [CuMycardCountResponse defaultInstance];
}
- (CuMycardCountResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CuMycardCountResponse*) buildPartial {
  CuMycardCountResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CuMycardCountResponse_Builder*) mergeFrom:(CuMycardCountResponse*) other {
  if (other == [CuMycardCountResponse defaultInstance]) {
    return self;
  }
  if (other.hasResCode) {
    [self setResCode:other.resCode];
  }
  if (other.hasRecDesc) {
    [self setRecDesc:other.recDesc];
  }
  if (other.hasCardCount) {
    [self setCardCount:other.cardCount];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CuMycardCountResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CuMycardCountResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setRecDesc:[input readString]];
        break;
      }
      case 24: {
        [self setCardCount:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasResCode {
  return result.hasResCode;
}
- (int32_t) resCode {
  return result.resCode;
}
- (CuMycardCountResponse_Builder*) setResCode:(int32_t) value {
  result.hasResCode = YES;
  result.resCode = value;
  return self;
}
- (CuMycardCountResponse_Builder*) clearResCode {
  result.hasResCode = NO;
  result.resCode = 0;
  return self;
}
- (BOOL) hasRecDesc {
  return result.hasRecDesc;
}
- (NSString*) recDesc {
  return result.recDesc;
}
- (CuMycardCountResponse_Builder*) setRecDesc:(NSString*) value {
  result.hasRecDesc = YES;
  result.recDesc = value;
  return self;
}
- (CuMycardCountResponse_Builder*) clearRecDesc {
  result.hasRecDesc = NO;
  result.recDesc = @"";
  return self;
}
- (BOOL) hasCardCount {
  return result.hasCardCount;
}
- (int32_t) cardCount {
  return result.cardCount;
}
- (CuMycardCountResponse_Builder*) setCardCount:(int32_t) value {
  result.hasCardCount = YES;
  result.cardCount = value;
  return self;
}
- (CuMycardCountResponse_Builder*) clearCardCount {
  result.hasCardCount = NO;
  result.cardCount = 0;
  return self;
}
@end

