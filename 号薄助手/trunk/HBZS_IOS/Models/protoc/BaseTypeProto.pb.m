// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "BaseTypeProto.pb.h"

@implementation BaseTypeProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [BaseTypeProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL GenderIsValidValue(Gender value) {
  switch (value) {
    case GenderUnknownGender:
    case GenderMale:
    case GenderFemale:
      return YES;
    default:
      return NO;
  }
}
BOOL ConstellationIsValidValue(Constellation value) {
  switch (value) {
    case ConstellationUnknownConstellation:
    case ConstellationCapricorn:
    case ConstellationAquarius:
    case ConstellationPisces:
    case ConstellationAries:
    case ConstellationTaurus:
    case ConstellationGemini:
    case ConstellationCancer:
    case ConstellationLeo:
    case ConstellationVirgo:
    case ConstellationLibra:
    case ConstellationScorpio:
    case ConstellationSagittarius:
      return YES;
    default:
      return NO;
  }
}
BOOL BloodTypeIsValidValue(BloodType value) {
  switch (value) {
    case BloodTypeUnknownBloodType:
    case BloodTypeA:
    case BloodTypeB:
    case BloodTypeO:
    case BloodTypeAb:
      return YES;
    default:
      return NO;
  }
}
BOOL ImageTypeIsValidValue(ImageType value) {
  switch (value) {
    case ImageTypeUnknownImageType:
    case ImageTypeJpg:
      return YES;
    default:
      return NO;
  }
}
BOOL SmsTypeIsValidValue(SmsType value) {
  switch (value) {
    case SmsTypeNormal:
    case SmsTypeDraft:
      return YES;
    default:
      return NO;
  }
}
BOOL SmsSendTypeIsValidValue(SmsSendType value) {
  switch (value) {
    case SmsSendTypeSend:
    case SmsSendTypeReceive:
      return YES;
    default:
      return NO;
  }
}
BOOL CallLogTypeIsValidValue(CallLogType value) {
  switch (value) {
    case CallLogTypeIncoming:
    case CallLogTypeOutgoing:
    case CallLogTypeMissed:
      return YES;
    default:
      return NO;
  }
}
BOOL UserStorageTypeIsValidValue(UserStorageType value) {
  switch (value) {
    case UserStorageTypeNormalUserStorage:
      return YES;
    default:
      return NO;
  }
}
BOOL PlatformIsValidValue(Platform value) {
  switch (value) {
    case PlatformNone:
    case PlatformAndroid:
    case PlatformIos:
      return YES;
    default:
      return NO;
  }
}
BOOL EncryptionOffsetIsValidValue(EncryptionOffset value) {
  switch (value) {
    case EncryptionOffsetNoOffset:
    case EncryptionOffsetUploadContactAllOffset:
    case EncryptionOffsetDownloadContactAllOffset:
    case EncryptionOffsetSyncUploadContactOffset:
    case EncryptionOffsetSyncDownloadContactOffset:
    case EncryptionOffsetSyncContactSlowOffset:
    case EncryptionOffsetUploadSmsoffset:
    case EncryptionOffsetDownloadSmsoffset:
    case EncryptionOffsetSyncSmsoffset:
    case EncryptionOffsetUploadCallLogOffset:
    case EncryptionOffsetDownloadCallLogOffset:
      return YES;
    default:
      return NO;
  }
}
BOOL EncryptionSaltIsValidValue(EncryptionSalt value) {
  switch (value) {
    case EncryptionSaltNoSalt:
    case EncryptionSaltUploadContactAllSalt:
    case EncryptionSaltDownloadContactAllSalt:
    case EncryptionSaltSyncUploadContactSalt:
    case EncryptionSaltSyncDownloadContactSalt:
    case EncryptionSaltSyncContactSlowSalt:
    case EncryptionSaltUploadSmssalt:
    case EncryptionSaltDownloadSmssalt:
    case EncryptionSaltSyncSmssalt:
    case EncryptionSaltUploadCallLogSalt:
    case EncryptionSaltDownloadCallLogSalt:
      return YES;
    default:
      return NO;
  }
}
@interface Category ()
@property int32_t type;
@property (retain) NSString* label;
@end

@implementation Category

- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasLabel {
  return !!hasLabel_;
}
- (void) setHasLabel:(BOOL) value {
  hasLabel_ = !!value;
}
@synthesize label;
- (void) dealloc {
  self.label = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.type = 0;
    self.label = @"";
  }
  return self;
}
static Category* defaultCategoryInstance = nil;
+ (void) initialize {
  if (self == [Category class]) {
    defaultCategoryInstance = [[Category alloc] init];
  }
}
+ (Category*) defaultInstance {
  return defaultCategoryInstance;
}
- (Category*) defaultInstance {
  return defaultCategoryInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasType) {
    [output writeInt32:1 value:self.type];
  }
  if (self.hasLabel) {
    [output writeString:2 value:self.label];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasType) {
    size += computeInt32Size(1, self.type);
  }
  if (self.hasLabel) {
    size += computeStringSize(2, self.label);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Category*) parseFromData:(NSData*) data {
  return (Category*)[[[Category builder] mergeFromData:data] build];
}
+ (Category*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Category*)[[[Category builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Category*) parseFromInputStream:(NSInputStream*) input {
  return (Category*)[[[Category builder] mergeFromInputStream:input] build];
}
+ (Category*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Category*)[[[Category builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Category*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Category*)[[[Category builder] mergeFromCodedInputStream:input] build];
}
+ (Category*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Category*)[[[Category builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Category_Builder*) builder {
  return [[[Category_Builder alloc] init] autorelease];
}
+ (Category_Builder*) builderWithPrototype:(Category*) prototype {
  return [[Category builder] mergeFrom:prototype];
}
- (Category_Builder*) builder {
  return [Category builder];
}
@end

@interface Category_Builder()
@property (retain) Category* result;
@end

@implementation Category_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Category alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Category_Builder*) clear {
  self.result = [[[Category alloc] init] autorelease];
  return self;
}
- (Category_Builder*) clone {
  return [Category builderWithPrototype:result];
}
- (Category*) defaultInstance {
  return [Category defaultInstance];
}
- (Category*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Category*) buildPartial {
  Category* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Category_Builder*) mergeFrom:(Category*) other {
  if (other == [Category defaultInstance]) {
    return self;
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasLabel) {
    [self setLabel:other.label];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Category_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Category_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setType:[input readInt32]];
        break;
      }
      case 18: {
        [self setLabel:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (Category_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Category_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasLabel {
  return result.hasLabel;
}
- (NSString*) label {
  return result.label;
}
- (Category_Builder*) setLabel:(NSString*) value {
  result.hasLabel = YES;
  result.label = value;
  return self;
}
- (Category_Builder*) clearLabel {
  result.hasLabel = NO;
  result.label = @"";
  return self;
}
@end

@interface Address ()
@property (retain) Category* category;
@property (retain) NSString* addrValue;
@property (retain) NSString* addrPostal;
@end

@implementation Address

- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value {
  hasCategory_ = !!value;
}
@synthesize category;
- (BOOL) hasAddrValue {
  return !!hasAddrValue_;
}
- (void) setHasAddrValue:(BOOL) value {
  hasAddrValue_ = !!value;
}
@synthesize addrValue;
- (BOOL) hasAddrPostal {
  return !!hasAddrPostal_;
}
- (void) setHasAddrPostal:(BOOL) value {
  hasAddrPostal_ = !!value;
}
@synthesize addrPostal;
- (void) dealloc {
  self.category = nil;
  self.addrValue = nil;
  self.addrPostal = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.category = [Category defaultInstance];
    self.addrValue = @"";
    self.addrPostal = @"";
  }
  return self;
}
static Address* defaultAddressInstance = nil;
+ (void) initialize {
  if (self == [Address class]) {
    defaultAddressInstance = [[Address alloc] init];
  }
}
+ (Address*) defaultInstance {
  return defaultAddressInstance;
}
- (Address*) defaultInstance {
  return defaultAddressInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategory) {
    [output writeMessage:1 value:self.category];
  }
  if (self.hasAddrValue) {
    [output writeString:2 value:self.addrValue];
  }
  if (self.hasAddrPostal) {
    [output writeString:3 value:self.addrPostal];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCategory) {
    size += computeMessageSize(1, self.category);
  }
  if (self.hasAddrValue) {
    size += computeStringSize(2, self.addrValue);
  }
  if (self.hasAddrPostal) {
    size += computeStringSize(3, self.addrPostal);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Address*) parseFromData:(NSData*) data {
  return (Address*)[[[Address builder] mergeFromData:data] build];
}
+ (Address*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Address*)[[[Address builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Address*) parseFromInputStream:(NSInputStream*) input {
  return (Address*)[[[Address builder] mergeFromInputStream:input] build];
}
+ (Address*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Address*)[[[Address builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Address*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Address*)[[[Address builder] mergeFromCodedInputStream:input] build];
}
+ (Address*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Address*)[[[Address builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Address_Builder*) builder {
  return [[[Address_Builder alloc] init] autorelease];
}
+ (Address_Builder*) builderWithPrototype:(Address*) prototype {
  return [[Address builder] mergeFrom:prototype];
}
- (Address_Builder*) builder {
  return [Address builder];
}
@end

@interface Address_Builder()
@property (retain) Address* result;
@end

@implementation Address_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Address alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Address_Builder*) clear {
  self.result = [[[Address alloc] init] autorelease];
  return self;
}
- (Address_Builder*) clone {
  return [Address builderWithPrototype:result];
}
- (Address*) defaultInstance {
  return [Address defaultInstance];
}
- (Address*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Address*) buildPartial {
  Address* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Address_Builder*) mergeFrom:(Address*) other {
  if (other == [Address defaultInstance]) {
    return self;
  }
  if (other.hasCategory) {
    [self mergeCategory:other.category];
  }
  if (other.hasAddrValue) {
    [self setAddrValue:other.addrValue];
  }
  if (other.hasAddrPostal) {
    [self setAddrPostal:other.addrPostal];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Address_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Address_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Category_Builder* subBuilder = [Category builder];
        if (self.hasCategory) {
          [subBuilder mergeFrom:self.category];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setAddrValue:[input readString]];
        break;
      }
      case 26: {
        [self setAddrPostal:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (Category*) category {
  return result.category;
}
- (Address_Builder*) setCategory:(Category*) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (Address_Builder*) setCategoryBuilder:(Category_Builder*) builderForValue {
  return [self setCategory:[builderForValue build]];
}
- (Address_Builder*) mergeCategory:(Category*) value {
  if (result.hasCategory &&
      result.category != [Category defaultInstance]) {
    result.category =
      [[[Category builderWithPrototype:result.category] mergeFrom:value] buildPartial];
  } else {
    result.category = value;
  }
  result.hasCategory = YES;
  return self;
}
- (Address_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = [Category defaultInstance];
  return self;
}
- (BOOL) hasAddrValue {
  return result.hasAddrValue;
}
- (NSString*) addrValue {
  return result.addrValue;
}
- (Address_Builder*) setAddrValue:(NSString*) value {
  result.hasAddrValue = YES;
  result.addrValue = value;
  return self;
}
- (Address_Builder*) clearAddrValue {
  result.hasAddrValue = NO;
  result.addrValue = @"";
  return self;
}
- (BOOL) hasAddrPostal {
  return result.hasAddrPostal;
}
- (NSString*) addrPostal {
  return result.addrPostal;
}
- (Address_Builder*) setAddrPostal:(NSString*) value {
  result.hasAddrPostal = YES;
  result.addrPostal = value;
  return self;
}
- (Address_Builder*) clearAddrPostal {
  result.hasAddrPostal = NO;
  result.addrPostal = @"";
  return self;
}
@end

@interface Email ()
@property (retain) Category* category;
@property (retain) NSString* emailValue;
@end

@implementation Email

- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value {
  hasCategory_ = !!value;
}
@synthesize category;
- (BOOL) hasEmailValue {
  return !!hasEmailValue_;
}
- (void) setHasEmailValue:(BOOL) value {
  hasEmailValue_ = !!value;
}
@synthesize emailValue;
- (void) dealloc {
  self.category = nil;
  self.emailValue = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.category = [Category defaultInstance];
    self.emailValue = @"";
  }
  return self;
}
static Email* defaultEmailInstance = nil;
+ (void) initialize {
  if (self == [Email class]) {
    defaultEmailInstance = [[Email alloc] init];
  }
}
+ (Email*) defaultInstance {
  return defaultEmailInstance;
}
- (Email*) defaultInstance {
  return defaultEmailInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategory) {
    [output writeMessage:1 value:self.category];
  }
  if (self.hasEmailValue) {
    [output writeString:2 value:self.emailValue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCategory) {
    size += computeMessageSize(1, self.category);
  }
  if (self.hasEmailValue) {
    size += computeStringSize(2, self.emailValue);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Email*) parseFromData:(NSData*) data {
  return (Email*)[[[Email builder] mergeFromData:data] build];
}
+ (Email*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Email*)[[[Email builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Email*) parseFromInputStream:(NSInputStream*) input {
  return (Email*)[[[Email builder] mergeFromInputStream:input] build];
}
+ (Email*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Email*)[[[Email builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Email*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Email*)[[[Email builder] mergeFromCodedInputStream:input] build];
}
+ (Email*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Email*)[[[Email builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Email_Builder*) builder {
  return [[[Email_Builder alloc] init] autorelease];
}
+ (Email_Builder*) builderWithPrototype:(Email*) prototype {
  return [[Email builder] mergeFrom:prototype];
}
- (Email_Builder*) builder {
  return [Email builder];
}
@end

@interface Email_Builder()
@property (retain) Email* result;
@end

@implementation Email_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Email alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Email_Builder*) clear {
  self.result = [[[Email alloc] init] autorelease];
  return self;
}
- (Email_Builder*) clone {
  return [Email builderWithPrototype:result];
}
- (Email*) defaultInstance {
  return [Email defaultInstance];
}
- (Email*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Email*) buildPartial {
  Email* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Email_Builder*) mergeFrom:(Email*) other {
  if (other == [Email defaultInstance]) {
    return self;
  }
  if (other.hasCategory) {
    [self mergeCategory:other.category];
  }
  if (other.hasEmailValue) {
    [self setEmailValue:other.emailValue];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Email_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Email_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Category_Builder* subBuilder = [Category builder];
        if (self.hasCategory) {
          [subBuilder mergeFrom:self.category];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setEmailValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (Category*) category {
  return result.category;
}
- (Email_Builder*) setCategory:(Category*) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (Email_Builder*) setCategoryBuilder:(Category_Builder*) builderForValue {
  return [self setCategory:[builderForValue build]];
}
- (Email_Builder*) mergeCategory:(Category*) value {
  if (result.hasCategory &&
      result.category != [Category defaultInstance]) {
    result.category =
      [[[Category builderWithPrototype:result.category] mergeFrom:value] buildPartial];
  } else {
    result.category = value;
  }
  result.hasCategory = YES;
  return self;
}
- (Email_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = [Category defaultInstance];
  return self;
}
- (BOOL) hasEmailValue {
  return result.hasEmailValue;
}
- (NSString*) emailValue {
  return result.emailValue;
}
- (Email_Builder*) setEmailValue:(NSString*) value {
  result.hasEmailValue = YES;
  result.emailValue = value;
  return self;
}
- (Email_Builder*) clearEmailValue {
  result.hasEmailValue = NO;
  result.emailValue = @"";
  return self;
}
@end

@interface Employed ()
@property (retain) NSString* empCompany;
@property (retain) NSString* empDept;
@property (retain) NSString* empTitle;
@end

@implementation Employed

- (BOOL) hasEmpCompany {
  return !!hasEmpCompany_;
}
- (void) setHasEmpCompany:(BOOL) value {
  hasEmpCompany_ = !!value;
}
@synthesize empCompany;
- (BOOL) hasEmpDept {
  return !!hasEmpDept_;
}
- (void) setHasEmpDept:(BOOL) value {
  hasEmpDept_ = !!value;
}
@synthesize empDept;
- (BOOL) hasEmpTitle {
  return !!hasEmpTitle_;
}
- (void) setHasEmpTitle:(BOOL) value {
  hasEmpTitle_ = !!value;
}
@synthesize empTitle;
- (void) dealloc {
  self.empCompany = nil;
  self.empDept = nil;
  self.empTitle = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.empCompany = @"";
    self.empDept = @"";
    self.empTitle = @"";
  }
  return self;
}
static Employed* defaultEmployedInstance = nil;
+ (void) initialize {
  if (self == [Employed class]) {
    defaultEmployedInstance = [[Employed alloc] init];
  }
}
+ (Employed*) defaultInstance {
  return defaultEmployedInstance;
}
- (Employed*) defaultInstance {
  return defaultEmployedInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasEmpCompany) {
    [output writeString:1 value:self.empCompany];
  }
  if (self.hasEmpDept) {
    [output writeString:2 value:self.empDept];
  }
  if (self.hasEmpTitle) {
    [output writeString:3 value:self.empTitle];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasEmpCompany) {
    size += computeStringSize(1, self.empCompany);
  }
  if (self.hasEmpDept) {
    size += computeStringSize(2, self.empDept);
  }
  if (self.hasEmpTitle) {
    size += computeStringSize(3, self.empTitle);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Employed*) parseFromData:(NSData*) data {
  return (Employed*)[[[Employed builder] mergeFromData:data] build];
}
+ (Employed*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Employed*)[[[Employed builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Employed*) parseFromInputStream:(NSInputStream*) input {
  return (Employed*)[[[Employed builder] mergeFromInputStream:input] build];
}
+ (Employed*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Employed*)[[[Employed builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Employed*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Employed*)[[[Employed builder] mergeFromCodedInputStream:input] build];
}
+ (Employed*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Employed*)[[[Employed builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Employed_Builder*) builder {
  return [[[Employed_Builder alloc] init] autorelease];
}
+ (Employed_Builder*) builderWithPrototype:(Employed*) prototype {
  return [[Employed builder] mergeFrom:prototype];
}
- (Employed_Builder*) builder {
  return [Employed builder];
}
@end

@interface Employed_Builder()
@property (retain) Employed* result;
@end

@implementation Employed_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Employed alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Employed_Builder*) clear {
  self.result = [[[Employed alloc] init] autorelease];
  return self;
}
- (Employed_Builder*) clone {
  return [Employed builderWithPrototype:result];
}
- (Employed*) defaultInstance {
  return [Employed defaultInstance];
}
- (Employed*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Employed*) buildPartial {
  Employed* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Employed_Builder*) mergeFrom:(Employed*) other {
  if (other == [Employed defaultInstance]) {
    return self;
  }
  if (other.hasEmpCompany) {
    [self setEmpCompany:other.empCompany];
  }
  if (other.hasEmpDept) {
    [self setEmpDept:other.empDept];
  }
  if (other.hasEmpTitle) {
    [self setEmpTitle:other.empTitle];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Employed_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Employed_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setEmpCompany:[input readString]];
        break;
      }
      case 18: {
        [self setEmpDept:[input readString]];
        break;
      }
      case 26: {
        [self setEmpTitle:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasEmpCompany {
  return result.hasEmpCompany;
}
- (NSString*) empCompany {
  return result.empCompany;
}
- (Employed_Builder*) setEmpCompany:(NSString*) value {
  result.hasEmpCompany = YES;
  result.empCompany = value;
  return self;
}
- (Employed_Builder*) clearEmpCompany {
  result.hasEmpCompany = NO;
  result.empCompany = @"";
  return self;
}
- (BOOL) hasEmpDept {
  return result.hasEmpDept;
}
- (NSString*) empDept {
  return result.empDept;
}
- (Employed_Builder*) setEmpDept:(NSString*) value {
  result.hasEmpDept = YES;
  result.empDept = value;
  return self;
}
- (Employed_Builder*) clearEmpDept {
  result.hasEmpDept = NO;
  result.empDept = @"";
  return self;
}
- (BOOL) hasEmpTitle {
  return result.hasEmpTitle;
}
- (NSString*) empTitle {
  return result.empTitle;
}
- (Employed_Builder*) setEmpTitle:(NSString*) value {
  result.hasEmpTitle = YES;
  result.empTitle = value;
  return self;
}
- (Employed_Builder*) clearEmpTitle {
  result.hasEmpTitle = NO;
  result.empTitle = @"";
  return self;
}
@end

@interface InstantMessage ()
@property (retain) Category* category;
@property (retain) NSString* imValue;
@end

@implementation InstantMessage

- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value {
  hasCategory_ = !!value;
}
@synthesize category;
- (BOOL) hasImValue {
  return !!hasImValue_;
}
- (void) setHasImValue:(BOOL) value {
  hasImValue_ = !!value;
}
@synthesize imValue;
- (void) dealloc {
  self.category = nil;
  self.imValue = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.category = [Category defaultInstance];
    self.imValue = @"";
  }
  return self;
}
static InstantMessage* defaultInstantMessageInstance = nil;
+ (void) initialize {
  if (self == [InstantMessage class]) {
    defaultInstantMessageInstance = [[InstantMessage alloc] init];
  }
}
+ (InstantMessage*) defaultInstance {
  return defaultInstantMessageInstance;
}
- (InstantMessage*) defaultInstance {
  return defaultInstantMessageInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategory) {
    [output writeMessage:1 value:self.category];
  }
  if (self.hasImValue) {
    [output writeString:2 value:self.imValue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCategory) {
    size += computeMessageSize(1, self.category);
  }
  if (self.hasImValue) {
    size += computeStringSize(2, self.imValue);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (InstantMessage*) parseFromData:(NSData*) data {
  return (InstantMessage*)[[[InstantMessage builder] mergeFromData:data] build];
}
+ (InstantMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InstantMessage*)[[[InstantMessage builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (InstantMessage*) parseFromInputStream:(NSInputStream*) input {
  return (InstantMessage*)[[[InstantMessage builder] mergeFromInputStream:input] build];
}
+ (InstantMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InstantMessage*)[[[InstantMessage builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InstantMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (InstantMessage*)[[[InstantMessage builder] mergeFromCodedInputStream:input] build];
}
+ (InstantMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (InstantMessage*)[[[InstantMessage builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (InstantMessage_Builder*) builder {
  return [[[InstantMessage_Builder alloc] init] autorelease];
}
+ (InstantMessage_Builder*) builderWithPrototype:(InstantMessage*) prototype {
  return [[InstantMessage builder] mergeFrom:prototype];
}
- (InstantMessage_Builder*) builder {
  return [InstantMessage builder];
}
@end

@interface InstantMessage_Builder()
@property (retain) InstantMessage* result;
@end

@implementation InstantMessage_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[InstantMessage alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (InstantMessage_Builder*) clear {
  self.result = [[[InstantMessage alloc] init] autorelease];
  return self;
}
- (InstantMessage_Builder*) clone {
  return [InstantMessage builderWithPrototype:result];
}
- (InstantMessage*) defaultInstance {
  return [InstantMessage defaultInstance];
}
- (InstantMessage*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (InstantMessage*) buildPartial {
  InstantMessage* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (InstantMessage_Builder*) mergeFrom:(InstantMessage*) other {
  if (other == [InstantMessage defaultInstance]) {
    return self;
  }
  if (other.hasCategory) {
    [self mergeCategory:other.category];
  }
  if (other.hasImValue) {
    [self setImValue:other.imValue];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (InstantMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (InstantMessage_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Category_Builder* subBuilder = [Category builder];
        if (self.hasCategory) {
          [subBuilder mergeFrom:self.category];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setImValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (Category*) category {
  return result.category;
}
- (InstantMessage_Builder*) setCategory:(Category*) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (InstantMessage_Builder*) setCategoryBuilder:(Category_Builder*) builderForValue {
  return [self setCategory:[builderForValue build]];
}
- (InstantMessage_Builder*) mergeCategory:(Category*) value {
  if (result.hasCategory &&
      result.category != [Category defaultInstance]) {
    result.category =
      [[[Category builderWithPrototype:result.category] mergeFrom:value] buildPartial];
  } else {
    result.category = value;
  }
  result.hasCategory = YES;
  return self;
}
- (InstantMessage_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = [Category defaultInstance];
  return self;
}
- (BOOL) hasImValue {
  return result.hasImValue;
}
- (NSString*) imValue {
  return result.imValue;
}
- (InstantMessage_Builder*) setImValue:(NSString*) value {
  result.hasImValue = YES;
  result.imValue = value;
  return self;
}
- (InstantMessage_Builder*) clearImValue {
  result.hasImValue = NO;
  result.imValue = @"";
  return self;
}
@end

@interface Name ()
@property (retain) NSString* familyName;
@property (retain) NSString* givenName;
@property (retain) NSString* nickName;
@end

@implementation Name

- (BOOL) hasFamilyName {
  return !!hasFamilyName_;
}
- (void) setHasFamilyName:(BOOL) value {
  hasFamilyName_ = !!value;
}
@synthesize familyName;
- (BOOL) hasGivenName {
  return !!hasGivenName_;
}
- (void) setHasGivenName:(BOOL) value {
  hasGivenName_ = !!value;
}
@synthesize givenName;
- (BOOL) hasNickName {
  return !!hasNickName_;
}
- (void) setHasNickName:(BOOL) value {
  hasNickName_ = !!value;
}
@synthesize nickName;
- (void) dealloc {
  self.familyName = nil;
  self.givenName = nil;
  self.nickName = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.familyName = @"";
    self.givenName = @"";
    self.nickName = @"";
  }
  return self;
}
static Name* defaultNameInstance = nil;
+ (void) initialize {
  if (self == [Name class]) {
    defaultNameInstance = [[Name alloc] init];
  }
}
+ (Name*) defaultInstance {
  return defaultNameInstance;
}
- (Name*) defaultInstance {
  return defaultNameInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFamilyName) {
    [output writeString:1 value:self.familyName];
  }
  if (self.hasGivenName) {
    [output writeString:2 value:self.givenName];
  }
  if (self.hasNickName) {
    [output writeString:3 value:self.nickName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasFamilyName) {
    size += computeStringSize(1, self.familyName);
  }
  if (self.hasGivenName) {
    size += computeStringSize(2, self.givenName);
  }
  if (self.hasNickName) {
    size += computeStringSize(3, self.nickName);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Name*) parseFromData:(NSData*) data {
  return (Name*)[[[Name builder] mergeFromData:data] build];
}
+ (Name*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Name*)[[[Name builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Name*) parseFromInputStream:(NSInputStream*) input {
  return (Name*)[[[Name builder] mergeFromInputStream:input] build];
}
+ (Name*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Name*)[[[Name builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Name*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Name*)[[[Name builder] mergeFromCodedInputStream:input] build];
}
+ (Name*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Name*)[[[Name builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Name_Builder*) builder {
  return [[[Name_Builder alloc] init] autorelease];
}
+ (Name_Builder*) builderWithPrototype:(Name*) prototype {
  return [[Name builder] mergeFrom:prototype];
}
- (Name_Builder*) builder {
  return [Name builder];
}
@end

@interface Name_Builder()
@property (retain) Name* result;
@end

@implementation Name_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Name alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Name_Builder*) clear {
  self.result = [[[Name alloc] init] autorelease];
  return self;
}
- (Name_Builder*) clone {
  return [Name builderWithPrototype:result];
}
- (Name*) defaultInstance {
  return [Name defaultInstance];
}
- (Name*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Name*) buildPartial {
  Name* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Name_Builder*) mergeFrom:(Name*) other {
  if (other == [Name defaultInstance]) {
    return self;
  }
  if (other.hasFamilyName) {
    [self setFamilyName:other.familyName];
  }
  if (other.hasGivenName) {
    [self setGivenName:other.givenName];
  }
  if (other.hasNickName) {
    [self setNickName:other.nickName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Name_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Name_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFamilyName:[input readString]];
        break;
      }
      case 18: {
        [self setGivenName:[input readString]];
        break;
      }
      case 26: {
        [self setNickName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFamilyName {
  return result.hasFamilyName;
}
- (NSString*) familyName {
  return result.familyName;
}
- (Name_Builder*) setFamilyName:(NSString*) value {
  result.hasFamilyName = YES;
  result.familyName = value;
  return self;
}
- (Name_Builder*) clearFamilyName {
  result.hasFamilyName = NO;
  result.familyName = @"";
  return self;
}
- (BOOL) hasGivenName {
  return result.hasGivenName;
}
- (NSString*) givenName {
  return result.givenName;
}
- (Name_Builder*) setGivenName:(NSString*) value {
  result.hasGivenName = YES;
  result.givenName = value;
  return self;
}
- (Name_Builder*) clearGivenName {
  result.hasGivenName = NO;
  result.givenName = @"";
  return self;
}
- (BOOL) hasNickName {
  return result.hasNickName;
}
- (NSString*) nickName {
  return result.nickName;
}
- (Name_Builder*) setNickName:(NSString*) value {
  result.hasNickName = YES;
  result.nickName = value;
  return self;
}
- (Name_Builder*) clearNickName {
  result.hasNickName = NO;
  result.nickName = @"";
  return self;
}
@end

@interface Phone ()
@property (retain) Category* category;
@property (retain) NSString* phoneValue;
@end

@implementation Phone

- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value {
  hasCategory_ = !!value;
}
@synthesize category;
- (BOOL) hasPhoneValue {
  return !!hasPhoneValue_;
}
- (void) setHasPhoneValue:(BOOL) value {
  hasPhoneValue_ = !!value;
}
@synthesize phoneValue;
- (void) dealloc {
  self.category = nil;
  self.phoneValue = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.category = [Category defaultInstance];
    self.phoneValue = @"";
  }
  return self;
}
static Phone* defaultPhoneInstance = nil;
+ (void) initialize {
  if (self == [Phone class]) {
    defaultPhoneInstance = [[Phone alloc] init];
  }
}
+ (Phone*) defaultInstance {
  return defaultPhoneInstance;
}
- (Phone*) defaultInstance {
  return defaultPhoneInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategory) {
    [output writeMessage:1 value:self.category];
  }
  if (self.hasPhoneValue) {
    [output writeString:2 value:self.phoneValue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCategory) {
    size += computeMessageSize(1, self.category);
  }
  if (self.hasPhoneValue) {
    size += computeStringSize(2, self.phoneValue);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Phone*) parseFromData:(NSData*) data {
  return (Phone*)[[[Phone builder] mergeFromData:data] build];
}
+ (Phone*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Phone*)[[[Phone builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Phone*) parseFromInputStream:(NSInputStream*) input {
  return (Phone*)[[[Phone builder] mergeFromInputStream:input] build];
}
+ (Phone*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Phone*)[[[Phone builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Phone*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Phone*)[[[Phone builder] mergeFromCodedInputStream:input] build];
}
+ (Phone*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Phone*)[[[Phone builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Phone_Builder*) builder {
  return [[[Phone_Builder alloc] init] autorelease];
}
+ (Phone_Builder*) builderWithPrototype:(Phone*) prototype {
  return [[Phone builder] mergeFrom:prototype];
}
- (Phone_Builder*) builder {
  return [Phone builder];
}
@end

@interface Phone_Builder()
@property (retain) Phone* result;
@end

@implementation Phone_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Phone alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Phone_Builder*) clear {
  self.result = [[[Phone alloc] init] autorelease];
  return self;
}
- (Phone_Builder*) clone {
  return [Phone builderWithPrototype:result];
}
- (Phone*) defaultInstance {
  return [Phone defaultInstance];
}
- (Phone*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Phone*) buildPartial {
  Phone* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Phone_Builder*) mergeFrom:(Phone*) other {
  if (other == [Phone defaultInstance]) {
    return self;
  }
  if (other.hasCategory) {
    [self mergeCategory:other.category];
  }
  if (other.hasPhoneValue) {
    [self setPhoneValue:other.phoneValue];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Phone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Phone_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Category_Builder* subBuilder = [Category builder];
        if (self.hasCategory) {
          [subBuilder mergeFrom:self.category];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setPhoneValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (Category*) category {
  return result.category;
}
- (Phone_Builder*) setCategory:(Category*) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (Phone_Builder*) setCategoryBuilder:(Category_Builder*) builderForValue {
  return [self setCategory:[builderForValue build]];
}
- (Phone_Builder*) mergeCategory:(Category*) value {
  if (result.hasCategory &&
      result.category != [Category defaultInstance]) {
    result.category =
      [[[Category builderWithPrototype:result.category] mergeFrom:value] buildPartial];
  } else {
    result.category = value;
  }
  result.hasCategory = YES;
  return self;
}
- (Phone_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = [Category defaultInstance];
  return self;
}
- (BOOL) hasPhoneValue {
  return result.hasPhoneValue;
}
- (NSString*) phoneValue {
  return result.phoneValue;
}
- (Phone_Builder*) setPhoneValue:(NSString*) value {
  result.hasPhoneValue = YES;
  result.phoneValue = value;
  return self;
}
- (Phone_Builder*) clearPhoneValue {
  result.hasPhoneValue = NO;
  result.phoneValue = @"";
  return self;
}
@end

@interface Website ()
@property (retain) Category* category;
@property (retain) NSString* pageValue;
@end

@implementation Website

- (BOOL) hasCategory {
  return !!hasCategory_;
}
- (void) setHasCategory:(BOOL) value {
  hasCategory_ = !!value;
}
@synthesize category;
- (BOOL) hasPageValue {
  return !!hasPageValue_;
}
- (void) setHasPageValue:(BOOL) value {
  hasPageValue_ = !!value;
}
@synthesize pageValue;
- (void) dealloc {
  self.category = nil;
  self.pageValue = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.category = [Category defaultInstance];
    self.pageValue = @"";
  }
  return self;
}
static Website* defaultWebsiteInstance = nil;
+ (void) initialize {
  if (self == [Website class]) {
    defaultWebsiteInstance = [[Website alloc] init];
  }
}
+ (Website*) defaultInstance {
  return defaultWebsiteInstance;
}
- (Website*) defaultInstance {
  return defaultWebsiteInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCategory) {
    [output writeMessage:1 value:self.category];
  }
  if (self.hasPageValue) {
    [output writeString:2 value:self.pageValue];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCategory) {
    size += computeMessageSize(1, self.category);
  }
  if (self.hasPageValue) {
    size += computeStringSize(2, self.pageValue);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Website*) parseFromData:(NSData*) data {
  return (Website*)[[[Website builder] mergeFromData:data] build];
}
+ (Website*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Website*)[[[Website builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Website*) parseFromInputStream:(NSInputStream*) input {
  return (Website*)[[[Website builder] mergeFromInputStream:input] build];
}
+ (Website*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Website*)[[[Website builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Website*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Website*)[[[Website builder] mergeFromCodedInputStream:input] build];
}
+ (Website*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Website*)[[[Website builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Website_Builder*) builder {
  return [[[Website_Builder alloc] init] autorelease];
}
+ (Website_Builder*) builderWithPrototype:(Website*) prototype {
  return [[Website builder] mergeFrom:prototype];
}
- (Website_Builder*) builder {
  return [Website builder];
}
@end

@interface Website_Builder()
@property (retain) Website* result;
@end

@implementation Website_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Website alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Website_Builder*) clear {
  self.result = [[[Website alloc] init] autorelease];
  return self;
}
- (Website_Builder*) clone {
  return [Website builderWithPrototype:result];
}
- (Website*) defaultInstance {
  return [Website defaultInstance];
}
- (Website*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Website*) buildPartial {
  Website* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Website_Builder*) mergeFrom:(Website*) other {
  if (other == [Website defaultInstance]) {
    return self;
  }
  if (other.hasCategory) {
    [self mergeCategory:other.category];
  }
  if (other.hasPageValue) {
    [self setPageValue:other.pageValue];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Website_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Website_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Category_Builder* subBuilder = [Category builder];
        if (self.hasCategory) {
          [subBuilder mergeFrom:self.category];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setCategory:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setPageValue:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCategory {
  return result.hasCategory;
}
- (Category*) category {
  return result.category;
}
- (Website_Builder*) setCategory:(Category*) value {
  result.hasCategory = YES;
  result.category = value;
  return self;
}
- (Website_Builder*) setCategoryBuilder:(Category_Builder*) builderForValue {
  return [self setCategory:[builderForValue build]];
}
- (Website_Builder*) mergeCategory:(Category*) value {
  if (result.hasCategory &&
      result.category != [Category defaultInstance]) {
    result.category =
      [[[Category builderWithPrototype:result.category] mergeFrom:value] buildPartial];
  } else {
    result.category = value;
  }
  result.hasCategory = YES;
  return self;
}
- (Website_Builder*) clearCategory {
  result.hasCategory = NO;
  result.category = [Category defaultInstance];
  return self;
}
- (BOOL) hasPageValue {
  return result.hasPageValue;
}
- (NSString*) pageValue {
  return result.pageValue;
}
- (Website_Builder*) setPageValue:(NSString*) value {
  result.hasPageValue = YES;
  result.pageValue = value;
  return self;
}
- (Website_Builder*) clearPageValue {
  result.hasPageValue = NO;
  result.pageValue = @"";
  return self;
}
@end

@interface PortraitData ()
@property int32_t sid;
@property ImageType imageType;
@property (retain) NSData* imageData;
@end

@implementation PortraitData

- (BOOL) hasSid {
  return !!hasSid_;
}
- (void) setHasSid:(BOOL) value {
  hasSid_ = !!value;
}
@synthesize sid;
- (BOOL) hasImageType {
  return !!hasImageType_;
}
- (void) setHasImageType:(BOOL) value {
  hasImageType_ = !!value;
}
@synthesize imageType;
- (BOOL) hasImageData {
  return !!hasImageData_;
}
- (void) setHasImageData:(BOOL) value {
  hasImageData_ = !!value;
}
@synthesize imageData;
- (void) dealloc {
  self.imageData = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.sid = 0;
    self.imageType = ImageTypeUnknownImageType;
    self.imageData = [NSData data];
  }
  return self;
}
static PortraitData* defaultPortraitDataInstance = nil;
+ (void) initialize {
  if (self == [PortraitData class]) {
    defaultPortraitDataInstance = [[PortraitData alloc] init];
  }
}
+ (PortraitData*) defaultInstance {
  return defaultPortraitDataInstance;
}
- (PortraitData*) defaultInstance {
  return defaultPortraitDataInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasSid) {
    [output writeInt32:1 value:self.sid];
  }
  if (self.hasImageType) {
    [output writeEnum:2 value:self.imageType];
  }
  if (self.hasImageData) {
    [output writeData:3 value:self.imageData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasSid) {
    size += computeInt32Size(1, self.sid);
  }
  if (self.hasImageType) {
    size += computeEnumSize(2, self.imageType);
  }
  if (self.hasImageData) {
    size += computeDataSize(3, self.imageData);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (PortraitData*) parseFromData:(NSData*) data {
  return (PortraitData*)[[[PortraitData builder] mergeFromData:data] build];
}
+ (PortraitData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PortraitData*)[[[PortraitData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (PortraitData*) parseFromInputStream:(NSInputStream*) input {
  return (PortraitData*)[[[PortraitData builder] mergeFromInputStream:input] build];
}
+ (PortraitData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PortraitData*)[[[PortraitData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PortraitData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (PortraitData*)[[[PortraitData builder] mergeFromCodedInputStream:input] build];
}
+ (PortraitData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (PortraitData*)[[[PortraitData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (PortraitData_Builder*) builder {
  return [[[PortraitData_Builder alloc] init] autorelease];
}
+ (PortraitData_Builder*) builderWithPrototype:(PortraitData*) prototype {
  return [[PortraitData builder] mergeFrom:prototype];
}
- (PortraitData_Builder*) builder {
  return [PortraitData builder];
}
@end

@interface PortraitData_Builder()
@property (retain) PortraitData* result;
@end

@implementation PortraitData_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[PortraitData alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (PortraitData_Builder*) clear {
  self.result = [[[PortraitData alloc] init] autorelease];
  return self;
}
- (PortraitData_Builder*) clone {
  return [PortraitData builderWithPrototype:result];
}
- (PortraitData*) defaultInstance {
  return [PortraitData defaultInstance];
}
- (PortraitData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (PortraitData*) buildPartial {
  PortraitData* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (PortraitData_Builder*) mergeFrom:(PortraitData*) other {
  if (other == [PortraitData defaultInstance]) {
    return self;
  }
  if (other.hasSid) {
    [self setSid:other.sid];
  }
  if (other.hasImageType) {
    [self setImageType:other.imageType];
  }
  if (other.hasImageData) {
    [self setImageData:other.imageData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (PortraitData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (PortraitData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setSid:[input readInt32]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (ImageTypeIsValidValue(value)) {
          [self setImageType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setImageData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasSid {
  return result.hasSid;
}
- (int32_t) sid {
  return result.sid;
}
- (PortraitData_Builder*) setSid:(int32_t) value {
  result.hasSid = YES;
  result.sid = value;
  return self;
}
- (PortraitData_Builder*) clearSid {
  result.hasSid = NO;
  result.sid = 0;
  return self;
}
- (BOOL) hasImageType {
  return result.hasImageType;
}
- (ImageType) imageType {
  return result.imageType;
}
- (PortraitData_Builder*) setImageType:(ImageType) value {
  result.hasImageType = YES;
  result.imageType = value;
  return self;
}
- (PortraitData_Builder*) clearImageType {
  result.hasImageType = NO;
  result.imageType = ImageTypeUnknownImageType;
  return self;
}
- (BOOL) hasImageData {
  return result.hasImageData;
}
- (NSData*) imageData {
  return result.imageData;
}
- (PortraitData_Builder*) setImageData:(NSData*) value {
  result.hasImageData = YES;
  result.imageData = value;
  return self;
}
- (PortraitData_Builder*) clearImageData {
  result.hasImageData = NO;
  result.imageData = [NSData data];
  return self;
}
@end

@interface UabError ()
@property int32_t code;
@property (retain) NSString* description;
@end

@implementation UabError

- (BOOL) hasCode {
  return !!hasCode_;
}
- (void) setHasCode:(BOOL) value {
  hasCode_ = !!value;
}
@synthesize code;
- (BOOL) hasDescription {
  return !!hasDescription_;
}
- (void) setHasDescription:(BOOL) value {
  hasDescription_ = !!value;
}
@synthesize description;
- (void) dealloc {
  self.description = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.code = 0;
    self.description = @"";
  }
  return self;
}
static UabError* defaultUabErrorInstance = nil;
+ (void) initialize {
  if (self == [UabError class]) {
    defaultUabErrorInstance = [[UabError alloc] init];
  }
}
+ (UabError*) defaultInstance {
  return defaultUabErrorInstance;
}
- (UabError*) defaultInstance {
  return defaultUabErrorInstance;
}
- (BOOL) isInitialized {
  if (!self.hasCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCode) {
    [output writeInt32:1 value:self.code];
  }
  if (self.hasDescription) {
    [output writeString:2 value:self.description];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasCode) {
    size += computeInt32Size(1, self.code);
  }
  if (self.hasDescription) {
    size += computeStringSize(2, self.description);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UabError*) parseFromData:(NSData*) data {
  return (UabError*)[[[UabError builder] mergeFromData:data] build];
}
+ (UabError*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UabError*)[[[UabError builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UabError*) parseFromInputStream:(NSInputStream*) input {
  return (UabError*)[[[UabError builder] mergeFromInputStream:input] build];
}
+ (UabError*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UabError*)[[[UabError builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UabError*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UabError*)[[[UabError builder] mergeFromCodedInputStream:input] build];
}
+ (UabError*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UabError*)[[[UabError builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UabError_Builder*) builder {
  return [[[UabError_Builder alloc] init] autorelease];
}
+ (UabError_Builder*) builderWithPrototype:(UabError*) prototype {
  return [[UabError builder] mergeFrom:prototype];
}
- (UabError_Builder*) builder {
  return [UabError builder];
}
@end

@interface UabError_Builder()
@property (retain) UabError* result;
@end

@implementation UabError_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UabError alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UabError_Builder*) clear {
  self.result = [[[UabError alloc] init] autorelease];
  return self;
}
- (UabError_Builder*) clone {
  return [UabError builderWithPrototype:result];
}
- (UabError*) defaultInstance {
  return [UabError defaultInstance];
}
- (UabError*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UabError*) buildPartial {
  UabError* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UabError_Builder*) mergeFrom:(UabError*) other {
  if (other == [UabError defaultInstance]) {
    return self;
  }
  if (other.hasCode) {
    [self setCode:other.code];
  }
  if (other.hasDescription) {
    [self setDescription:other.description];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UabError_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UabError_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setDescription:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasCode {
  return result.hasCode;
}
- (int32_t) code {
  return result.code;
}
- (UabError_Builder*) setCode:(int32_t) value {
  result.hasCode = YES;
  result.code = value;
  return self;
}
- (UabError_Builder*) clearCode {
  result.hasCode = NO;
  result.code = 0;
  return self;
}
- (BOOL) hasDescription {
  return result.hasDescription;
}
- (NSString*) description {
  return result.description;
}
- (UabError_Builder*) setDescription:(NSString*) value {
  result.hasDescription = YES;
  result.description = value;
  return self;
}
- (UabError_Builder*) clearDescription {
  result.hasDescription = NO;
  result.description = @"";
  return self;
}
@end

@interface Sms ()
@property (retain) NSString* id;
@property SmsType type;
@property SmsSendType sendType;
@property (retain) NSString* senderNumber;
@property (retain) NSString* receiveTime;
@property BOOL isLocked;
@property BOOL isRead;
@property (retain) NSString* content;
@property BOOL isSendSuccess;
@property int32_t mode;
@property (retain) NSData* customData;
@end

@implementation Sms

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasSendType {
  return !!hasSendType_;
}
- (void) setHasSendType:(BOOL) value {
  hasSendType_ = !!value;
}
@synthesize sendType;
- (BOOL) hasSenderNumber {
  return !!hasSenderNumber_;
}
- (void) setHasSenderNumber:(BOOL) value {
  hasSenderNumber_ = !!value;
}
@synthesize senderNumber;
- (BOOL) hasReceiveTime {
  return !!hasReceiveTime_;
}
- (void) setHasReceiveTime:(BOOL) value {
  hasReceiveTime_ = !!value;
}
@synthesize receiveTime;
- (BOOL) hasIsLocked {
  return !!hasIsLocked_;
}
- (void) setHasIsLocked:(BOOL) value {
  hasIsLocked_ = !!value;
}
- (BOOL) isLocked {
  return !!isLocked_;
}
- (void) setIsLocked:(BOOL) value {
  isLocked_ = !!value;
}
- (BOOL) hasIsRead {
  return !!hasIsRead_;
}
- (void) setHasIsRead:(BOOL) value {
  hasIsRead_ = !!value;
}
- (BOOL) isRead {
  return !!isRead_;
}
- (void) setIsRead:(BOOL) value {
  isRead_ = !!value;
}
- (BOOL) hasContent {
  return !!hasContent_;
}
- (void) setHasContent:(BOOL) value {
  hasContent_ = !!value;
}
@synthesize content;
- (BOOL) hasIsSendSuccess {
  return !!hasIsSendSuccess_;
}
- (void) setHasIsSendSuccess:(BOOL) value {
  hasIsSendSuccess_ = !!value;
}
- (BOOL) isSendSuccess {
  return !!isSendSuccess_;
}
- (void) setIsSendSuccess:(BOOL) value {
  isSendSuccess_ = !!value;
}
- (BOOL) hasMode {
  return !!hasMode_;
}
- (void) setHasMode:(BOOL) value {
  hasMode_ = !!value;
}
@synthesize mode;
- (BOOL) hasCustomData {
  return !!hasCustomData_;
}
- (void) setHasCustomData:(BOOL) value {
  hasCustomData_ = !!value;
}
@synthesize customData;
- (void) dealloc {
  self.id = nil;
  self.senderNumber = nil;
  self.receiveTime = nil;
  self.content = nil;
  self.customData = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.type = SmsTypeNormal;
    self.sendType = SmsSendTypeSend;
    self.senderNumber = @"";
    self.receiveTime = @"";
    self.isLocked = NO;
    self.isRead = NO;
    self.content = @"";
    self.isSendSuccess = NO;
    self.mode = 0;
    self.customData = [NSData data];
  }
  return self;
}
static Sms* defaultSmsInstance = nil;
+ (void) initialize {
  if (self == [Sms class]) {
    defaultSmsInstance = [[Sms alloc] init];
  }
}
+ (Sms*) defaultInstance {
  return defaultSmsInstance;
}
- (Sms*) defaultInstance {
  return defaultSmsInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasSendType) {
    [output writeEnum:3 value:self.sendType];
  }
  if (self.hasSenderNumber) {
    [output writeString:4 value:self.senderNumber];
  }
  if (self.hasReceiveTime) {
    [output writeString:5 value:self.receiveTime];
  }
  if (self.hasIsLocked) {
    [output writeBool:6 value:self.isLocked];
  }
  if (self.hasIsRead) {
    [output writeBool:7 value:self.isRead];
  }
  if (self.hasContent) {
    [output writeString:8 value:self.content];
  }
  if (self.hasIsSendSuccess) {
    [output writeBool:9 value:self.isSendSuccess];
  }
  if (self.hasMode) {
    [output writeInt32:10 value:self.mode];
  }
  if (self.hasCustomData) {
    [output writeData:11 value:self.customData];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasType) {
    size += computeEnumSize(2, self.type);
  }
  if (self.hasSendType) {
    size += computeEnumSize(3, self.sendType);
  }
  if (self.hasSenderNumber) {
    size += computeStringSize(4, self.senderNumber);
  }
  if (self.hasReceiveTime) {
    size += computeStringSize(5, self.receiveTime);
  }
  if (self.hasIsLocked) {
    size += computeBoolSize(6, self.isLocked);
  }
  if (self.hasIsRead) {
    size += computeBoolSize(7, self.isRead);
  }
  if (self.hasContent) {
    size += computeStringSize(8, self.content);
  }
  if (self.hasIsSendSuccess) {
    size += computeBoolSize(9, self.isSendSuccess);
  }
  if (self.hasMode) {
    size += computeInt32Size(10, self.mode);
  }
  if (self.hasCustomData) {
    size += computeDataSize(11, self.customData);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Sms*) parseFromData:(NSData*) data {
  return (Sms*)[[[Sms builder] mergeFromData:data] build];
}
+ (Sms*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Sms*)[[[Sms builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Sms*) parseFromInputStream:(NSInputStream*) input {
  return (Sms*)[[[Sms builder] mergeFromInputStream:input] build];
}
+ (Sms*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Sms*)[[[Sms builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Sms*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Sms*)[[[Sms builder] mergeFromCodedInputStream:input] build];
}
+ (Sms*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Sms*)[[[Sms builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Sms_Builder*) builder {
  return [[[Sms_Builder alloc] init] autorelease];
}
+ (Sms_Builder*) builderWithPrototype:(Sms*) prototype {
  return [[Sms builder] mergeFrom:prototype];
}
- (Sms_Builder*) builder {
  return [Sms builder];
}
@end

@interface Sms_Builder()
@property (retain) Sms* result;
@end

@implementation Sms_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Sms alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Sms_Builder*) clear {
  self.result = [[[Sms alloc] init] autorelease];
  return self;
}
- (Sms_Builder*) clone {
  return [Sms builderWithPrototype:result];
}
- (Sms*) defaultInstance {
  return [Sms defaultInstance];
}
- (Sms*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Sms*) buildPartial {
  Sms* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Sms_Builder*) mergeFrom:(Sms*) other {
  if (other == [Sms defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasSendType) {
    [self setSendType:other.sendType];
  }
  if (other.hasSenderNumber) {
    [self setSenderNumber:other.senderNumber];
  }
  if (other.hasReceiveTime) {
    [self setReceiveTime:other.receiveTime];
  }
  if (other.hasIsLocked) {
    [self setIsLocked:other.isLocked];
  }
  if (other.hasIsRead) {
    [self setIsRead:other.isRead];
  }
  if (other.hasContent) {
    [self setContent:other.content];
  }
  if (other.hasIsSendSuccess) {
    [self setIsSendSuccess:other.isSendSuccess];
  }
  if (other.hasMode) {
    [self setMode:other.mode];
  }
  if (other.hasCustomData) {
    [self setCustomData:other.customData];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Sms_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Sms_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (SmsTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 24: {
        int32_t value = [input readEnum];
        if (SmsSendTypeIsValidValue(value)) {
          [self setSendType:value];
        } else {
          [unknownFields mergeVarintField:3 value:value];
        }
        break;
      }
      case 34: {
        [self setSenderNumber:[input readString]];
        break;
      }
      case 42: {
        [self setReceiveTime:[input readString]];
        break;
      }
      case 48: {
        [self setIsLocked:[input readBool]];
        break;
      }
      case 56: {
        [self setIsRead:[input readBool]];
        break;
      }
      case 66: {
        [self setContent:[input readString]];
        break;
      }
      case 72: {
        [self setIsSendSuccess:[input readBool]];
        break;
      }
      case 80: {
        [self setMode:[input readInt32]];
        break;
      }
      case 90: {
        [self setCustomData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (Sms_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (Sms_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (SmsType) type {
  return result.type;
}
- (Sms_Builder*) setType:(SmsType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Sms_Builder*) clearType {
  result.hasType = NO;
  result.type = SmsTypeNormal;
  return self;
}
- (BOOL) hasSendType {
  return result.hasSendType;
}
- (SmsSendType) sendType {
  return result.sendType;
}
- (Sms_Builder*) setSendType:(SmsSendType) value {
  result.hasSendType = YES;
  result.sendType = value;
  return self;
}
- (Sms_Builder*) clearSendType {
  result.hasSendType = NO;
  result.sendType = SmsSendTypeSend;
  return self;
}
- (BOOL) hasSenderNumber {
  return result.hasSenderNumber;
}
- (NSString*) senderNumber {
  return result.senderNumber;
}
- (Sms_Builder*) setSenderNumber:(NSString*) value {
  result.hasSenderNumber = YES;
  result.senderNumber = value;
  return self;
}
- (Sms_Builder*) clearSenderNumber {
  result.hasSenderNumber = NO;
  result.senderNumber = @"";
  return self;
}
- (BOOL) hasReceiveTime {
  return result.hasReceiveTime;
}
- (NSString*) receiveTime {
  return result.receiveTime;
}
- (Sms_Builder*) setReceiveTime:(NSString*) value {
  result.hasReceiveTime = YES;
  result.receiveTime = value;
  return self;
}
- (Sms_Builder*) clearReceiveTime {
  result.hasReceiveTime = NO;
  result.receiveTime = @"";
  return self;
}
- (BOOL) hasIsLocked {
  return result.hasIsLocked;
}
- (BOOL) isLocked {
  return result.isLocked;
}
- (Sms_Builder*) setIsLocked:(BOOL) value {
  result.hasIsLocked = YES;
  result.isLocked = value;
  return self;
}
- (Sms_Builder*) clearIsLocked {
  result.hasIsLocked = NO;
  result.isLocked = NO;
  return self;
}
- (BOOL) hasIsRead {
  return result.hasIsRead;
}
- (BOOL) isRead {
  return result.isRead;
}
- (Sms_Builder*) setIsRead:(BOOL) value {
  result.hasIsRead = YES;
  result.isRead = value;
  return self;
}
- (Sms_Builder*) clearIsRead {
  result.hasIsRead = NO;
  result.isRead = NO;
  return self;
}
- (BOOL) hasContent {
  return result.hasContent;
}
- (NSString*) content {
  return result.content;
}
- (Sms_Builder*) setContent:(NSString*) value {
  result.hasContent = YES;
  result.content = value;
  return self;
}
- (Sms_Builder*) clearContent {
  result.hasContent = NO;
  result.content = @"";
  return self;
}
- (BOOL) hasIsSendSuccess {
  return result.hasIsSendSuccess;
}
- (BOOL) isSendSuccess {
  return result.isSendSuccess;
}
- (Sms_Builder*) setIsSendSuccess:(BOOL) value {
  result.hasIsSendSuccess = YES;
  result.isSendSuccess = value;
  return self;
}
- (Sms_Builder*) clearIsSendSuccess {
  result.hasIsSendSuccess = NO;
  result.isSendSuccess = NO;
  return self;
}
- (BOOL) hasMode {
  return result.hasMode;
}
- (int32_t) mode {
  return result.mode;
}
- (Sms_Builder*) setMode:(int32_t) value {
  result.hasMode = YES;
  result.mode = value;
  return self;
}
- (Sms_Builder*) clearMode {
  result.hasMode = NO;
  result.mode = 0;
  return self;
}
- (BOOL) hasCustomData {
  return result.hasCustomData;
}
- (NSData*) customData {
  return result.customData;
}
- (Sms_Builder*) setCustomData:(NSData*) value {
  result.hasCustomData = YES;
  result.customData = value;
  return self;
}
- (Sms_Builder*) clearCustomData {
  result.hasCustomData = NO;
  result.customData = [NSData data];
  return self;
}
@end

@interface SmsSummary ()
@property (retain) NSString* id;
@property BOOL isFavourite;
@end

@implementation SmsSummary

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasIsFavourite {
  return !!hasIsFavourite_;
}
- (void) setHasIsFavourite:(BOOL) value {
  hasIsFavourite_ = !!value;
}
- (BOOL) isFavourite {
  return !!isFavourite_;
}
- (void) setIsFavourite:(BOOL) value {
  isFavourite_ = !!value;
}
- (void) dealloc {
  self.id = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.isFavourite = NO;
  }
  return self;
}
static SmsSummary* defaultSmsSummaryInstance = nil;
+ (void) initialize {
  if (self == [SmsSummary class]) {
    defaultSmsSummaryInstance = [[SmsSummary alloc] init];
  }
}
+ (SmsSummary*) defaultInstance {
  return defaultSmsSummaryInstance;
}
- (SmsSummary*) defaultInstance {
  return defaultSmsSummaryInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasIsFavourite) {
    [output writeBool:2 value:self.isFavourite];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasIsFavourite) {
    size += computeBoolSize(2, self.isFavourite);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SmsSummary*) parseFromData:(NSData*) data {
  return (SmsSummary*)[[[SmsSummary builder] mergeFromData:data] build];
}
+ (SmsSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmsSummary*)[[[SmsSummary builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SmsSummary*) parseFromInputStream:(NSInputStream*) input {
  return (SmsSummary*)[[[SmsSummary builder] mergeFromInputStream:input] build];
}
+ (SmsSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmsSummary*)[[[SmsSummary builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SmsSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SmsSummary*)[[[SmsSummary builder] mergeFromCodedInputStream:input] build];
}
+ (SmsSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SmsSummary*)[[[SmsSummary builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SmsSummary_Builder*) builder {
  return [[[SmsSummary_Builder alloc] init] autorelease];
}
+ (SmsSummary_Builder*) builderWithPrototype:(SmsSummary*) prototype {
  return [[SmsSummary builder] mergeFrom:prototype];
}
- (SmsSummary_Builder*) builder {
  return [SmsSummary builder];
}
@end

@interface SmsSummary_Builder()
@property (retain) SmsSummary* result;
@end

@implementation SmsSummary_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SmsSummary alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SmsSummary_Builder*) clear {
  self.result = [[[SmsSummary alloc] init] autorelease];
  return self;
}
- (SmsSummary_Builder*) clone {
  return [SmsSummary builderWithPrototype:result];
}
- (SmsSummary*) defaultInstance {
  return [SmsSummary defaultInstance];
}
- (SmsSummary*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SmsSummary*) buildPartial {
  SmsSummary* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SmsSummary_Builder*) mergeFrom:(SmsSummary*) other {
  if (other == [SmsSummary defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasIsFavourite) {
    [self setIsFavourite:other.isFavourite];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SmsSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SmsSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 16: {
        [self setIsFavourite:[input readBool]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (SmsSummary_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SmsSummary_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasIsFavourite {
  return result.hasIsFavourite;
}
- (BOOL) isFavourite {
  return result.isFavourite;
}
- (SmsSummary_Builder*) setIsFavourite:(BOOL) value {
  result.hasIsFavourite = YES;
  result.isFavourite = value;
  return self;
}
- (SmsSummary_Builder*) clearIsFavourite {
  result.hasIsFavourite = NO;
  result.isFavourite = NO;
  return self;
}
@end

@interface CallLog ()
@property (retain) NSString* id;
@property CallLogType type;
@property (retain) NSString* callTime;
@property (retain) NSString* callNumber;
@property int32_t callDuration;
@end

@implementation CallLog

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasCallTime {
  return !!hasCallTime_;
}
- (void) setHasCallTime:(BOOL) value {
  hasCallTime_ = !!value;
}
@synthesize callTime;
- (BOOL) hasCallNumber {
  return !!hasCallNumber_;
}
- (void) setHasCallNumber:(BOOL) value {
  hasCallNumber_ = !!value;
}
@synthesize callNumber;
- (BOOL) hasCallDuration {
  return !!hasCallDuration_;
}
- (void) setHasCallDuration:(BOOL) value {
  hasCallDuration_ = !!value;
}
@synthesize callDuration;
- (void) dealloc {
  self.id = nil;
  self.callTime = nil;
  self.callNumber = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = @"";
    self.type = CallLogTypeIncoming;
    self.callTime = @"";
    self.callNumber = @"";
    self.callDuration = 0;
  }
  return self;
}
static CallLog* defaultCallLogInstance = nil;
+ (void) initialize {
  if (self == [CallLog class]) {
    defaultCallLogInstance = [[CallLog alloc] init];
  }
}
+ (CallLog*) defaultInstance {
  return defaultCallLogInstance;
}
- (CallLog*) defaultInstance {
  return defaultCallLogInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeString:1 value:self.id];
  }
  if (self.hasType) {
    [output writeEnum:2 value:self.type];
  }
  if (self.hasCallTime) {
    [output writeString:3 value:self.callTime];
  }
  if (self.hasCallNumber) {
    [output writeString:4 value:self.callNumber];
  }
  if (self.hasCallDuration) {
    [output writeInt32:5 value:self.callDuration];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeStringSize(1, self.id);
  }
  if (self.hasType) {
    size += computeEnumSize(2, self.type);
  }
  if (self.hasCallTime) {
    size += computeStringSize(3, self.callTime);
  }
  if (self.hasCallNumber) {
    size += computeStringSize(4, self.callNumber);
  }
  if (self.hasCallDuration) {
    size += computeInt32Size(5, self.callDuration);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (CallLog*) parseFromData:(NSData*) data {
  return (CallLog*)[[[CallLog builder] mergeFromData:data] build];
}
+ (CallLog*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CallLog*)[[[CallLog builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (CallLog*) parseFromInputStream:(NSInputStream*) input {
  return (CallLog*)[[[CallLog builder] mergeFromInputStream:input] build];
}
+ (CallLog*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CallLog*)[[[CallLog builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CallLog*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (CallLog*)[[[CallLog builder] mergeFromCodedInputStream:input] build];
}
+ (CallLog*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (CallLog*)[[[CallLog builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (CallLog_Builder*) builder {
  return [[[CallLog_Builder alloc] init] autorelease];
}
+ (CallLog_Builder*) builderWithPrototype:(CallLog*) prototype {
  return [[CallLog builder] mergeFrom:prototype];
}
- (CallLog_Builder*) builder {
  return [CallLog builder];
}
@end

@interface CallLog_Builder()
@property (retain) CallLog* result;
@end

@implementation CallLog_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[CallLog alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (CallLog_Builder*) clear {
  self.result = [[[CallLog alloc] init] autorelease];
  return self;
}
- (CallLog_Builder*) clone {
  return [CallLog builderWithPrototype:result];
}
- (CallLog*) defaultInstance {
  return [CallLog defaultInstance];
}
- (CallLog*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (CallLog*) buildPartial {
  CallLog* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (CallLog_Builder*) mergeFrom:(CallLog*) other {
  if (other == [CallLog defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasCallTime) {
    [self setCallTime:other.callTime];
  }
  if (other.hasCallNumber) {
    [self setCallNumber:other.callNumber];
  }
  if (other.hasCallDuration) {
    [self setCallDuration:other.callDuration];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (CallLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (CallLog_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setId:[input readString]];
        break;
      }
      case 16: {
        int32_t value = [input readEnum];
        if (CallLogTypeIsValidValue(value)) {
          [self setType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        [self setCallTime:[input readString]];
        break;
      }
      case 34: {
        [self setCallNumber:[input readString]];
        break;
      }
      case 40: {
        [self setCallDuration:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (NSString*) id {
  return result.id;
}
- (CallLog_Builder*) setId:(NSString*) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (CallLog_Builder*) clearId {
  result.hasId = NO;
  result.id = @"";
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (CallLogType) type {
  return result.type;
}
- (CallLog_Builder*) setType:(CallLogType) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (CallLog_Builder*) clearType {
  result.hasType = NO;
  result.type = CallLogTypeIncoming;
  return self;
}
- (BOOL) hasCallTime {
  return result.hasCallTime;
}
- (NSString*) callTime {
  return result.callTime;
}
- (CallLog_Builder*) setCallTime:(NSString*) value {
  result.hasCallTime = YES;
  result.callTime = value;
  return self;
}
- (CallLog_Builder*) clearCallTime {
  result.hasCallTime = NO;
  result.callTime = @"";
  return self;
}
- (BOOL) hasCallNumber {
  return result.hasCallNumber;
}
- (NSString*) callNumber {
  return result.callNumber;
}
- (CallLog_Builder*) setCallNumber:(NSString*) value {
  result.hasCallNumber = YES;
  result.callNumber = value;
  return self;
}
- (CallLog_Builder*) clearCallNumber {
  result.hasCallNumber = NO;
  result.callNumber = @"";
  return self;
}
- (BOOL) hasCallDuration {
  return result.hasCallDuration;
}
- (int32_t) callDuration {
  return result.callDuration;
}
- (CallLog_Builder*) setCallDuration:(int32_t) value {
  result.hasCallDuration = YES;
  result.callDuration = value;
  return self;
}
- (CallLog_Builder*) clearCallDuration {
  result.hasCallDuration = NO;
  result.callDuration = 0;
  return self;
}
@end

@interface FileInfo ()
@property (retain) NSString* hash;
@property (retain) NSString* path;
@property (retain) NSString* lastModified;
@property int32_t version;
@property int64_t size;
@end

@implementation FileInfo

- (BOOL) hasHash {
  return !!hasHash_;
}
- (void) setHasHash:(BOOL) value {
  hasHash_ = !!value;
}
@synthesize hash;
- (BOOL) hasPath {
  return !!hasPath_;
}
- (void) setHasPath:(BOOL) value {
  hasPath_ = !!value;
}
@synthesize path;
- (BOOL) hasLastModified {
  return !!hasLastModified_;
}
- (void) setHasLastModified:(BOOL) value {
  hasLastModified_ = !!value;
}
@synthesize lastModified;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (BOOL) hasSize {
  return !!hasSize_;
}
- (void) setHasSize:(BOOL) value {
  hasSize_ = !!value;
}
@synthesize size;
- (void) dealloc {
  self.hash = nil;
  self.path = nil;
  self.lastModified = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.hash = @"";
    self.path = @"";
    self.lastModified = @"";
    self.version = 0;
    self.size = 0L;
  }
  return self;
}
static FileInfo* defaultFileInfoInstance = nil;
+ (void) initialize {
  if (self == [FileInfo class]) {
    defaultFileInfoInstance = [[FileInfo alloc] init];
  }
}
+ (FileInfo*) defaultInstance {
  return defaultFileInfoInstance;
}
- (FileInfo*) defaultInstance {
  return defaultFileInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasHash) {
    return NO;
  }
  if (!self.hasPath) {
    return NO;
  }
  if (!self.hasLastModified) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  if (!self.hasSize) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasHash) {
    [output writeString:1 value:self.hash];
  }
  if (self.hasPath) {
    [output writeString:2 value:self.path];
  }
  if (self.hasLastModified) {
    [output writeString:3 value:self.lastModified];
  }
  if (self.hasVersion) {
    [output writeUInt32:4 value:self.version];
  }
  if (self.hasSize) {
    [output writeUInt64:5 value:self.size];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasHash) {
    size += computeStringSize(1, self.hash);
  }
  if (self.hasPath) {
    size += computeStringSize(2, self.path);
  }
  if (self.hasLastModified) {
    size += computeStringSize(3, self.lastModified);
  }
  if (self.hasVersion) {
    size += computeUInt32Size(4, self.version);
  }
  if (self.hasSize) {
    size += computeUInt64Size(5, self.size);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (FileInfo*) parseFromData:(NSData*) data {
  return (FileInfo*)[[[FileInfo builder] mergeFromData:data] build];
}
+ (FileInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileInfo*)[[[FileInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (FileInfo*) parseFromInputStream:(NSInputStream*) input {
  return (FileInfo*)[[[FileInfo builder] mergeFromInputStream:input] build];
}
+ (FileInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileInfo*)[[[FileInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (FileInfo*)[[[FileInfo builder] mergeFromCodedInputStream:input] build];
}
+ (FileInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (FileInfo*)[[[FileInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (FileInfo_Builder*) builder {
  return [[[FileInfo_Builder alloc] init] autorelease];
}
+ (FileInfo_Builder*) builderWithPrototype:(FileInfo*) prototype {
  return [[FileInfo builder] mergeFrom:prototype];
}
- (FileInfo_Builder*) builder {
  return [FileInfo builder];
}
@end

@interface FileInfo_Builder()
@property (retain) FileInfo* result;
@end

@implementation FileInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[FileInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (FileInfo_Builder*) clear {
  self.result = [[[FileInfo alloc] init] autorelease];
  return self;
}
- (FileInfo_Builder*) clone {
  return [FileInfo builderWithPrototype:result];
}
- (FileInfo*) defaultInstance {
  return [FileInfo defaultInstance];
}
- (FileInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (FileInfo*) buildPartial {
  FileInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (FileInfo_Builder*) mergeFrom:(FileInfo*) other {
  if (other == [FileInfo defaultInstance]) {
    return self;
  }
  if (other.hasHash) {
    [self setHash:other.hash];
  }
  if (other.hasPath) {
    [self setPath:other.path];
  }
  if (other.hasLastModified) {
    [self setLastModified:other.lastModified];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasSize) {
    [self setSize:other.size];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (FileInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (FileInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setHash:[input readString]];
        break;
      }
      case 18: {
        [self setPath:[input readString]];
        break;
      }
      case 26: {
        [self setLastModified:[input readString]];
        break;
      }
      case 32: {
        [self setVersion:[input readUInt32]];
        break;
      }
      case 40: {
        [self setSize:[input readUInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasHash {
  return result.hasHash;
}
- (NSString*) hash {
  return result.hash;
}
- (FileInfo_Builder*) setHash:(NSString*) value {
  result.hasHash = YES;
  result.hash = value;
  return self;
}
- (FileInfo_Builder*) clearHash {
  result.hasHash = NO;
  result.hash = @"";
  return self;
}
- (BOOL) hasPath {
  return result.hasPath;
}
- (NSString*) path {
  return result.path;
}
- (FileInfo_Builder*) setPath:(NSString*) value {
  result.hasPath = YES;
  result.path = value;
  return self;
}
- (FileInfo_Builder*) clearPath {
  result.hasPath = NO;
  result.path = @"";
  return self;
}
- (BOOL) hasLastModified {
  return result.hasLastModified;
}
- (NSString*) lastModified {
  return result.lastModified;
}
- (FileInfo_Builder*) setLastModified:(NSString*) value {
  result.hasLastModified = YES;
  result.lastModified = value;
  return self;
}
- (FileInfo_Builder*) clearLastModified {
  result.hasLastModified = NO;
  result.lastModified = @"";
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (FileInfo_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (FileInfo_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
- (BOOL) hasSize {
  return result.hasSize;
}
- (int64_t) size {
  return result.size;
}
- (FileInfo_Builder*) setSize:(int64_t) value {
  result.hasSize = YES;
  result.size = value;
  return self;
}
- (FileInfo_Builder*) clearSize {
  result.hasSize = NO;
  result.size = 0L;
  return self;
}
@end

