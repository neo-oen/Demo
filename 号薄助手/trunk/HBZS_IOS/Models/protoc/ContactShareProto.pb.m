// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ContactShareProto.pb.h"

@implementation ContactShareProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ContactShareProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ContactProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ContactShareRequest ()
@property (retain) NSMutableArray* mutableContactList;
@property (retain) NSString* username;
@end

@implementation ContactShareRequest

@synthesize mutableContactList;
- (BOOL) hasUsername {
  return !!hasUsername_;
}
- (void) setHasUsername:(BOOL) value {
  hasUsername_ = !!value;
}
@synthesize username;
- (void) dealloc {
  self.mutableContactList = nil;
  self.username = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.username = @"";
  }
  return self;
}
static ContactShareRequest* defaultContactShareRequestInstance = nil;
+ (void) initialize {
  if (self == [ContactShareRequest class]) {
    defaultContactShareRequestInstance = [[ContactShareRequest alloc] init];
  }
}
+ (ContactShareRequest*) defaultInstance {
  return defaultContactShareRequestInstance;
}
- (ContactShareRequest*) defaultInstance {
  return defaultContactShareRequestInstance;
}
- (NSArray*) contactList {
  return mutableContactList;
}
- (Contact*) contactAtIndex:(int32_t) index {
  id value = [mutableContactList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasUsername) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Contact* element in self.contactList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasUsername) {
    [output writeString:2 value:self.username];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Contact* element in self.contactList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasUsername) {
    size += computeStringSize(2, self.username);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactShareRequest*) parseFromData:(NSData*) data {
  return (ContactShareRequest*)[[[ContactShareRequest builder] mergeFromData:data] build];
}
+ (ContactShareRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactShareRequest*)[[[ContactShareRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactShareRequest*) parseFromInputStream:(NSInputStream*) input {
  return (ContactShareRequest*)[[[ContactShareRequest builder] mergeFromInputStream:input] build];
}
+ (ContactShareRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactShareRequest*)[[[ContactShareRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactShareRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactShareRequest*)[[[ContactShareRequest builder] mergeFromCodedInputStream:input] build];
}
+ (ContactShareRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactShareRequest*)[[[ContactShareRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactShareRequest_Builder*) builder {
  return [[[ContactShareRequest_Builder alloc] init] autorelease];
}
+ (ContactShareRequest_Builder*) builderWithPrototype:(ContactShareRequest*) prototype {
  return [[ContactShareRequest builder] mergeFrom:prototype];
}
- (ContactShareRequest_Builder*) builder {
  return [ContactShareRequest builder];
}
@end

@interface ContactShareRequest_Builder()
@property (retain) ContactShareRequest* result;
@end

@implementation ContactShareRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactShareRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactShareRequest_Builder*) clear {
  self.result = [[[ContactShareRequest alloc] init] autorelease];
  return self;
}
- (ContactShareRequest_Builder*) clone {
  return [ContactShareRequest builderWithPrototype:result];
}
- (ContactShareRequest*) defaultInstance {
  return [ContactShareRequest defaultInstance];
}
- (ContactShareRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactShareRequest*) buildPartial {
  ContactShareRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactShareRequest_Builder*) mergeFrom:(ContactShareRequest*) other {
  if (other == [ContactShareRequest defaultInstance]) {
    return self;
  }
  if (other.mutableContactList.count > 0) {
    if (result.mutableContactList == nil) {
      result.mutableContactList = [NSMutableArray array];
    }
    [result.mutableContactList addObjectsFromArray:other.mutableContactList];
  }
  if (other.hasUsername) {
    [self setUsername:other.username];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactShareRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactShareRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContact:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        [self setUsername:[input readString]];
        break;
      }
    }
  }
}
- (NSArray*) contactList {
  if (result.mutableContactList == nil) { return [NSArray array]; }
  return result.mutableContactList;
}
- (Contact*) contactAtIndex:(int32_t) index {
  return [result contactAtIndex:index];
}
- (ContactShareRequest_Builder*) replaceContactAtIndex:(int32_t) index with:(Contact*) value {
  [result.mutableContactList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (ContactShareRequest_Builder*) addAllContact:(NSArray*) values {
  if (result.mutableContactList == nil) {
    result.mutableContactList = [NSMutableArray array];
  }
  [result.mutableContactList addObjectsFromArray:values];
  return self;
}
- (ContactShareRequest_Builder*) clearContactList {
  result.mutableContactList = nil;
  return self;
}
- (ContactShareRequest_Builder*) addContact:(Contact*) value {
  if (result.mutableContactList == nil) {
    result.mutableContactList = [NSMutableArray array];
  }
  [result.mutableContactList addObject:value];
  return self;
}
- (BOOL) hasUsername {
  return result.hasUsername;
}
- (NSString*) username {
  return result.username;
}
- (ContactShareRequest_Builder*) setUsername:(NSString*) value {
  result.hasUsername = YES;
  result.username = value;
  return self;
}
- (ContactShareRequest_Builder*) clearUsername {
  result.hasUsername = NO;
  result.username = @"";
  return self;
}
@end

@interface ContactShareResponse ()
@property int32_t resCode;
@property (retain) NSString* resMsg;
@property (retain) NSString* shareUrl;
@property (retain) NSString* extractCode;
@end

@implementation ContactShareResponse

- (BOOL) hasResCode {
  return !!hasResCode_;
}
- (void) setHasResCode:(BOOL) value {
  hasResCode_ = !!value;
}
@synthesize resCode;
- (BOOL) hasResMsg {
  return !!hasResMsg_;
}
- (void) setHasResMsg:(BOOL) value {
  hasResMsg_ = !!value;
}
@synthesize resMsg;
- (BOOL) hasShareUrl {
  return !!hasShareUrl_;
}
- (void) setHasShareUrl:(BOOL) value {
  hasShareUrl_ = !!value;
}
@synthesize shareUrl;
- (BOOL) hasExtractCode {
  return !!hasExtractCode_;
}
- (void) setHasExtractCode:(BOOL) value {
  hasExtractCode_ = !!value;
}
@synthesize extractCode;
- (void) dealloc {
  self.resMsg = nil;
  self.shareUrl = nil;
  self.extractCode = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.resCode = -1;
    self.resMsg = @"";
    self.shareUrl = @"";
    self.extractCode = @"";
  }
  return self;
}
static ContactShareResponse* defaultContactShareResponseInstance = nil;
+ (void) initialize {
  if (self == [ContactShareResponse class]) {
    defaultContactShareResponseInstance = [[ContactShareResponse alloc] init];
  }
}
+ (ContactShareResponse*) defaultInstance {
  return defaultContactShareResponseInstance;
}
- (ContactShareResponse*) defaultInstance {
  return defaultContactShareResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasResCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasResCode) {
    [output writeInt32:1 value:self.resCode];
  }
  if (self.hasResMsg) {
    [output writeString:2 value:self.resMsg];
  }
  if (self.hasShareUrl) {
    [output writeString:3 value:self.shareUrl];
  }
  if (self.hasExtractCode) {
    [output writeString:4 value:self.extractCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasResCode) {
    size += computeInt32Size(1, self.resCode);
  }
  if (self.hasResMsg) {
    size += computeStringSize(2, self.resMsg);
  }
  if (self.hasShareUrl) {
    size += computeStringSize(3, self.shareUrl);
  }
  if (self.hasExtractCode) {
    size += computeStringSize(4, self.extractCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactShareResponse*) parseFromData:(NSData*) data {
  return (ContactShareResponse*)[[[ContactShareResponse builder] mergeFromData:data] build];
}
+ (ContactShareResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactShareResponse*)[[[ContactShareResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactShareResponse*) parseFromInputStream:(NSInputStream*) input {
  return (ContactShareResponse*)[[[ContactShareResponse builder] mergeFromInputStream:input] build];
}
+ (ContactShareResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactShareResponse*)[[[ContactShareResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactShareResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactShareResponse*)[[[ContactShareResponse builder] mergeFromCodedInputStream:input] build];
}
+ (ContactShareResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactShareResponse*)[[[ContactShareResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactShareResponse_Builder*) builder {
  return [[[ContactShareResponse_Builder alloc] init] autorelease];
}
+ (ContactShareResponse_Builder*) builderWithPrototype:(ContactShareResponse*) prototype {
  return [[ContactShareResponse builder] mergeFrom:prototype];
}
- (ContactShareResponse_Builder*) builder {
  return [ContactShareResponse builder];
}
@end

@interface ContactShareResponse_Builder()
@property (retain) ContactShareResponse* result;
@end

@implementation ContactShareResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactShareResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactShareResponse_Builder*) clear {
  self.result = [[[ContactShareResponse alloc] init] autorelease];
  return self;
}
- (ContactShareResponse_Builder*) clone {
  return [ContactShareResponse builderWithPrototype:result];
}
- (ContactShareResponse*) defaultInstance {
  return [ContactShareResponse defaultInstance];
}
- (ContactShareResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactShareResponse*) buildPartial {
  ContactShareResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactShareResponse_Builder*) mergeFrom:(ContactShareResponse*) other {
  if (other == [ContactShareResponse defaultInstance]) {
    return self;
  }
  if (other.hasResCode) {
    [self setResCode:other.resCode];
  }
  if (other.hasResMsg) {
    [self setResMsg:other.resMsg];
  }
  if (other.hasShareUrl) {
    [self setShareUrl:other.shareUrl];
  }
  if (other.hasExtractCode) {
    [self setExtractCode:other.extractCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactShareResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactShareResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setResCode:[input readInt32]];
        break;
      }
      case 18: {
        [self setResMsg:[input readString]];
        break;
      }
      case 26: {
        [self setShareUrl:[input readString]];
        break;
      }
      case 34: {
        [self setExtractCode:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasResCode {
  return result.hasResCode;
}
- (int32_t) resCode {
  return result.resCode;
}
- (ContactShareResponse_Builder*) setResCode:(int32_t) value {
  result.hasResCode = YES;
  result.resCode = value;
  return self;
}
- (ContactShareResponse_Builder*) clearResCode {
  result.hasResCode = NO;
  result.resCode = -1;
  return self;
}
- (BOOL) hasResMsg {
  return result.hasResMsg;
}
- (NSString*) resMsg {
  return result.resMsg;
}
- (ContactShareResponse_Builder*) setResMsg:(NSString*) value {
  result.hasResMsg = YES;
  result.resMsg = value;
  return self;
}
- (ContactShareResponse_Builder*) clearResMsg {
  result.hasResMsg = NO;
  result.resMsg = @"";
  return self;
}
- (BOOL) hasShareUrl {
  return result.hasShareUrl;
}
- (NSString*) shareUrl {
  return result.shareUrl;
}
- (ContactShareResponse_Builder*) setShareUrl:(NSString*) value {
  result.hasShareUrl = YES;
  result.shareUrl = value;
  return self;
}
- (ContactShareResponse_Builder*) clearShareUrl {
  result.hasShareUrl = NO;
  result.shareUrl = @"";
  return self;
}
- (BOOL) hasExtractCode {
  return result.hasExtractCode;
}
- (NSString*) extractCode {
  return result.extractCode;
}
- (ContactShareResponse_Builder*) setExtractCode:(NSString*) value {
  result.hasExtractCode = YES;
  result.extractCode = value;
  return self;
}
- (ContactShareResponse_Builder*) clearExtractCode {
  result.hasExtractCode = NO;
  result.extractCode = @"";
  return self;
}
@end

