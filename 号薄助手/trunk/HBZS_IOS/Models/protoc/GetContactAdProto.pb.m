// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "GetContactAdProto.pb.h"

@implementation GetContactAdProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [GetContactAdProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BaseTypeProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface ContactAd ()
@property (retain) NSString* imgUrl;
@property (retain) NSString* adurl;
@property (retain) NSString* imageType;
@end

@implementation ContactAd

- (BOOL) hasImgUrl {
  return !!hasImgUrl_;
}
- (void) setHasImgUrl:(BOOL) value {
  hasImgUrl_ = !!value;
}
@synthesize imgUrl;
- (BOOL) hasAdurl {
  return !!hasAdurl_;
}
- (void) setHasAdurl:(BOOL) value {
  hasAdurl_ = !!value;
}
@synthesize adurl;
- (BOOL) hasImageType {
  return !!hasImageType_;
}
- (void) setHasImageType:(BOOL) value {
  hasImageType_ = !!value;
}
@synthesize imageType;
- (void) dealloc {
  self.imgUrl = nil;
  self.adurl = nil;
  self.imageType = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.imgUrl = @"";
    self.adurl = @"";
    self.imageType = @"";
  }
  return self;
}
static ContactAd* defaultContactAdInstance = nil;
+ (void) initialize {
  if (self == [ContactAd class]) {
    defaultContactAdInstance = [[ContactAd alloc] init];
  }
}
+ (ContactAd*) defaultInstance {
  return defaultContactAdInstance;
}
- (ContactAd*) defaultInstance {
  return defaultContactAdInstance;
}
- (BOOL) isInitialized {
  if (!self.hasImgUrl) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasImgUrl) {
    [output writeString:1 value:self.imgUrl];
  }
  if (self.hasAdurl) {
    [output writeString:2 value:self.adurl];
  }
  if (self.hasImageType) {
    [output writeString:3 value:self.imageType];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasImgUrl) {
    size += computeStringSize(1, self.imgUrl);
  }
  if (self.hasAdurl) {
    size += computeStringSize(2, self.adurl);
  }
  if (self.hasImageType) {
    size += computeStringSize(3, self.imageType);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (ContactAd*) parseFromData:(NSData*) data {
  return (ContactAd*)[[[ContactAd builder] mergeFromData:data] build];
}
+ (ContactAd*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactAd*)[[[ContactAd builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (ContactAd*) parseFromInputStream:(NSInputStream*) input {
  return (ContactAd*)[[[ContactAd builder] mergeFromInputStream:input] build];
}
+ (ContactAd*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactAd*)[[[ContactAd builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactAd*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (ContactAd*)[[[ContactAd builder] mergeFromCodedInputStream:input] build];
}
+ (ContactAd*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (ContactAd*)[[[ContactAd builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (ContactAd_Builder*) builder {
  return [[[ContactAd_Builder alloc] init] autorelease];
}
+ (ContactAd_Builder*) builderWithPrototype:(ContactAd*) prototype {
  return [[ContactAd builder] mergeFrom:prototype];
}
- (ContactAd_Builder*) builder {
  return [ContactAd builder];
}
@end

@interface ContactAd_Builder()
@property (retain) ContactAd* result;
@end

@implementation ContactAd_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[ContactAd alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (ContactAd_Builder*) clear {
  self.result = [[[ContactAd alloc] init] autorelease];
  return self;
}
- (ContactAd_Builder*) clone {
  return [ContactAd builderWithPrototype:result];
}
- (ContactAd*) defaultInstance {
  return [ContactAd defaultInstance];
}
- (ContactAd*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (ContactAd*) buildPartial {
  ContactAd* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (ContactAd_Builder*) mergeFrom:(ContactAd*) other {
  if (other == [ContactAd defaultInstance]) {
    return self;
  }
  if (other.hasImgUrl) {
    [self setImgUrl:other.imgUrl];
  }
  if (other.hasAdurl) {
    [self setAdurl:other.adurl];
  }
  if (other.hasImageType) {
    [self setImageType:other.imageType];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (ContactAd_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (ContactAd_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setImgUrl:[input readString]];
        break;
      }
      case 18: {
        [self setAdurl:[input readString]];
        break;
      }
      case 26: {
        [self setImageType:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasImgUrl {
  return result.hasImgUrl;
}
- (NSString*) imgUrl {
  return result.imgUrl;
}
- (ContactAd_Builder*) setImgUrl:(NSString*) value {
  result.hasImgUrl = YES;
  result.imgUrl = value;
  return self;
}
- (ContactAd_Builder*) clearImgUrl {
  result.hasImgUrl = NO;
  result.imgUrl = @"";
  return self;
}
- (BOOL) hasAdurl {
  return result.hasAdurl;
}
- (NSString*) adurl {
  return result.adurl;
}
- (ContactAd_Builder*) setAdurl:(NSString*) value {
  result.hasAdurl = YES;
  result.adurl = value;
  return self;
}
- (ContactAd_Builder*) clearAdurl {
  result.hasAdurl = NO;
  result.adurl = @"";
  return self;
}
- (BOOL) hasImageType {
  return result.hasImageType;
}
- (NSString*) imageType {
  return result.imageType;
}
- (ContactAd_Builder*) setImageType:(NSString*) value {
  result.hasImageType = YES;
  result.imageType = value;
  return self;
}
- (ContactAd_Builder*) clearImageType {
  result.hasImageType = NO;
  result.imageType = @"";
  return self;
}
@end

@interface JobItem ()
@property int32_t jobServerId;
@property int64_t timestamp;
@end

@implementation JobItem

- (BOOL) hasJobServerId {
  return !!hasJobServerId_;
}
- (void) setHasJobServerId:(BOOL) value {
  hasJobServerId_ = !!value;
}
@synthesize jobServerId;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jobServerId = 0;
    self.timestamp = 0L;
  }
  return self;
}
static JobItem* defaultJobItemInstance = nil;
+ (void) initialize {
  if (self == [JobItem class]) {
    defaultJobItemInstance = [[JobItem alloc] init];
  }
}
+ (JobItem*) defaultInstance {
  return defaultJobItemInstance;
}
- (JobItem*) defaultInstance {
  return defaultJobItemInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJobServerId) {
    [output writeInt32:1 value:self.jobServerId];
  }
  if (self.hasTimestamp) {
    [output writeInt64:2 value:self.timestamp];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJobServerId) {
    size += computeInt32Size(1, self.jobServerId);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(2, self.timestamp);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (JobItem*) parseFromData:(NSData*) data {
  return (JobItem*)[[[JobItem builder] mergeFromData:data] build];
}
+ (JobItem*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JobItem*)[[[JobItem builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (JobItem*) parseFromInputStream:(NSInputStream*) input {
  return (JobItem*)[[[JobItem builder] mergeFromInputStream:input] build];
}
+ (JobItem*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JobItem*)[[[JobItem builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JobItem*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (JobItem*)[[[JobItem builder] mergeFromCodedInputStream:input] build];
}
+ (JobItem*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (JobItem*)[[[JobItem builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (JobItem_Builder*) builder {
  return [[[JobItem_Builder alloc] init] autorelease];
}
+ (JobItem_Builder*) builderWithPrototype:(JobItem*) prototype {
  return [[JobItem builder] mergeFrom:prototype];
}
- (JobItem_Builder*) builder {
  return [JobItem builder];
}
@end

@interface JobItem_Builder()
@property (retain) JobItem* result;
@end

@implementation JobItem_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[JobItem alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (JobItem_Builder*) clear {
  self.result = [[[JobItem alloc] init] autorelease];
  return self;
}
- (JobItem_Builder*) clone {
  return [JobItem builderWithPrototype:result];
}
- (JobItem*) defaultInstance {
  return [JobItem defaultInstance];
}
- (JobItem*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (JobItem*) buildPartial {
  JobItem* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (JobItem_Builder*) mergeFrom:(JobItem*) other {
  if (other == [JobItem defaultInstance]) {
    return self;
  }
  if (other.hasJobServerId) {
    [self setJobServerId:other.jobServerId];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (JobItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (JobItem_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setJobServerId:[input readInt32]];
        break;
      }
      case 16: {
        [self setTimestamp:[input readInt64]];
        break;
      }
    }
  }
}
- (BOOL) hasJobServerId {
  return result.hasJobServerId;
}
- (int32_t) jobServerId {
  return result.jobServerId;
}
- (JobItem_Builder*) setJobServerId:(int32_t) value {
  result.hasJobServerId = YES;
  result.jobServerId = value;
  return self;
}
- (JobItem_Builder*) clearJobServerId {
  result.hasJobServerId = NO;
  result.jobServerId = 0;
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (JobItem_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (JobItem_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
@end

@interface NewContactAd ()
@property int32_t jobServerId;
@property int64_t timestamp;
@property (retain) NSString* startDate;
@property (retain) NSString* endDate;
@property int32_t frequency;
@property (retain) ContactAd* contactAd;
@property (retain) NSString* title;
@property int32_t power;
@end

@implementation NewContactAd

- (BOOL) hasJobServerId {
  return !!hasJobServerId_;
}
- (void) setHasJobServerId:(BOOL) value {
  hasJobServerId_ = !!value;
}
@synthesize jobServerId;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value {
  hasStartDate_ = !!value;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value {
  hasEndDate_ = !!value;
}
@synthesize endDate;
- (BOOL) hasFrequency {
  return !!hasFrequency_;
}
- (void) setHasFrequency:(BOOL) value {
  hasFrequency_ = !!value;
}
@synthesize frequency;
- (BOOL) hasContactAd {
  return !!hasContactAd_;
}
- (void) setHasContactAd:(BOOL) value {
  hasContactAd_ = !!value;
}
@synthesize contactAd;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
- (BOOL) hasPower {
  return !!hasPower_;
}
- (void) setHasPower:(BOOL) value {
  hasPower_ = !!value;
}
@synthesize power;
- (void) dealloc {
  self.startDate = nil;
  self.endDate = nil;
  self.contactAd = nil;
  self.title = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jobServerId = 0;
    self.timestamp = 0L;
    self.startDate = @"";
    self.endDate = @"";
    self.frequency = 0;
    self.contactAd = [ContactAd defaultInstance];
    self.title = @"";
    self.power = 0;
  }
  return self;
}
static NewContactAd* defaultNewContactAdInstance = nil;
+ (void) initialize {
  if (self == [NewContactAd class]) {
    defaultNewContactAdInstance = [[NewContactAd alloc] init];
  }
}
+ (NewContactAd*) defaultInstance {
  return defaultNewContactAdInstance;
}
- (NewContactAd*) defaultInstance {
  return defaultNewContactAdInstance;
}
- (BOOL) isInitialized {
  if (self.hasContactAd) {
    if (!self.contactAd.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJobServerId) {
    [output writeInt32:1 value:self.jobServerId];
  }
  if (self.hasTimestamp) {
    [output writeInt64:2 value:self.timestamp];
  }
  if (self.hasStartDate) {
    [output writeString:3 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeString:4 value:self.endDate];
  }
  if (self.hasFrequency) {
    [output writeInt32:5 value:self.frequency];
  }
  if (self.hasContactAd) {
    [output writeMessage:6 value:self.contactAd];
  }
  if (self.hasTitle) {
    [output writeString:7 value:self.title];
  }
  if (self.hasPower) {
    [output writeInt32:8 value:self.power];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJobServerId) {
    size += computeInt32Size(1, self.jobServerId);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(2, self.timestamp);
  }
  if (self.hasStartDate) {
    size += computeStringSize(3, self.startDate);
  }
  if (self.hasEndDate) {
    size += computeStringSize(4, self.endDate);
  }
  if (self.hasFrequency) {
    size += computeInt32Size(5, self.frequency);
  }
  if (self.hasContactAd) {
    size += computeMessageSize(6, self.contactAd);
  }
  if (self.hasTitle) {
    size += computeStringSize(7, self.title);
  }
  if (self.hasPower) {
    size += computeInt32Size(8, self.power);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (NewContactAd*) parseFromData:(NSData*) data {
  return (NewContactAd*)[[[NewContactAd builder] mergeFromData:data] build];
}
+ (NewContactAd*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NewContactAd*)[[[NewContactAd builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (NewContactAd*) parseFromInputStream:(NSInputStream*) input {
  return (NewContactAd*)[[[NewContactAd builder] mergeFromInputStream:input] build];
}
+ (NewContactAd*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NewContactAd*)[[[NewContactAd builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (NewContactAd*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (NewContactAd*)[[[NewContactAd builder] mergeFromCodedInputStream:input] build];
}
+ (NewContactAd*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (NewContactAd*)[[[NewContactAd builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (NewContactAd_Builder*) builder {
  return [[[NewContactAd_Builder alloc] init] autorelease];
}
+ (NewContactAd_Builder*) builderWithPrototype:(NewContactAd*) prototype {
  return [[NewContactAd builder] mergeFrom:prototype];
}
- (NewContactAd_Builder*) builder {
  return [NewContactAd builder];
}
@end

@interface NewContactAd_Builder()
@property (retain) NewContactAd* result;
@end

@implementation NewContactAd_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[NewContactAd alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (NewContactAd_Builder*) clear {
  self.result = [[[NewContactAd alloc] init] autorelease];
  return self;
}
- (NewContactAd_Builder*) clone {
  return [NewContactAd builderWithPrototype:result];
}
- (NewContactAd*) defaultInstance {
  return [NewContactAd defaultInstance];
}
- (NewContactAd*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (NewContactAd*) buildPartial {
  NewContactAd* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (NewContactAd_Builder*) mergeFrom:(NewContactAd*) other {
  if (other == [NewContactAd defaultInstance]) {
    return self;
  }
  if (other.hasJobServerId) {
    [self setJobServerId:other.jobServerId];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasFrequency) {
    [self setFrequency:other.frequency];
  }
  if (other.hasContactAd) {
    [self mergeContactAd:other.contactAd];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.hasPower) {
    [self setPower:other.power];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (NewContactAd_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (NewContactAd_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setJobServerId:[input readInt32]];
        break;
      }
      case 16: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 26: {
        [self setStartDate:[input readString]];
        break;
      }
      case 34: {
        [self setEndDate:[input readString]];
        break;
      }
      case 40: {
        [self setFrequency:[input readInt32]];
        break;
      }
      case 50: {
        ContactAd_Builder* subBuilder = [ContactAd builder];
        if (self.hasContactAd) {
          [subBuilder mergeFrom:self.contactAd];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContactAd:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self setTitle:[input readString]];
        break;
      }
      case 64: {
        [self setPower:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasJobServerId {
  return result.hasJobServerId;
}
- (int32_t) jobServerId {
  return result.jobServerId;
}
- (NewContactAd_Builder*) setJobServerId:(int32_t) value {
  result.hasJobServerId = YES;
  result.jobServerId = value;
  return self;
}
- (NewContactAd_Builder*) clearJobServerId {
  result.hasJobServerId = NO;
  result.jobServerId = 0;
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (NewContactAd_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (NewContactAd_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (NSString*) startDate {
  return result.startDate;
}
- (NewContactAd_Builder*) setStartDate:(NSString*) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (NewContactAd_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = @"";
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (NSString*) endDate {
  return result.endDate;
}
- (NewContactAd_Builder*) setEndDate:(NSString*) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (NewContactAd_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = @"";
  return self;
}
- (BOOL) hasFrequency {
  return result.hasFrequency;
}
- (int32_t) frequency {
  return result.frequency;
}
- (NewContactAd_Builder*) setFrequency:(int32_t) value {
  result.hasFrequency = YES;
  result.frequency = value;
  return self;
}
- (NewContactAd_Builder*) clearFrequency {
  result.hasFrequency = NO;
  result.frequency = 0;
  return self;
}
- (BOOL) hasContactAd {
  return result.hasContactAd;
}
- (ContactAd*) contactAd {
  return result.contactAd;
}
- (NewContactAd_Builder*) setContactAd:(ContactAd*) value {
  result.hasContactAd = YES;
  result.contactAd = value;
  return self;
}
- (NewContactAd_Builder*) setContactAdBuilder:(ContactAd_Builder*) builderForValue {
  return [self setContactAd:[builderForValue build]];
}
- (NewContactAd_Builder*) mergeContactAd:(ContactAd*) value {
  if (result.hasContactAd &&
      result.contactAd != [ContactAd defaultInstance]) {
    result.contactAd =
      [[[ContactAd builderWithPrototype:result.contactAd] mergeFrom:value] buildPartial];
  } else {
    result.contactAd = value;
  }
  result.hasContactAd = YES;
  return self;
}
- (NewContactAd_Builder*) clearContactAd {
  result.hasContactAd = NO;
  result.contactAd = [ContactAd defaultInstance];
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (NewContactAd_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (NewContactAd_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (BOOL) hasPower {
  return result.hasPower;
}
- (int32_t) power {
  return result.power;
}
- (NewContactAd_Builder*) setPower:(int32_t) value {
  result.hasPower = YES;
  result.power = value;
  return self;
}
- (NewContactAd_Builder*) clearPower {
  result.hasPower = NO;
  result.power = 0;
  return self;
}
@end

@interface GetContactAdRequest ()
@property (retain) NSString* mobileNum;
@property (retain) NSString* imsi;
@property (retain) NSString* mobileManufacturer;
@property (retain) NSString* mobileType;
@property int32_t jobServerId;
@property int64_t timestamp;
@property int32_t screenWidth;
@property int32_t screenHeight;
@property (retain) NSString* contactNum;
@property Platform platform;
@property (retain) NSMutableArray* mutableJobItemsList;
@property int32_t requestFlag;
@end

@implementation GetContactAdRequest

- (BOOL) hasMobileNum {
  return !!hasMobileNum_;
}
- (void) setHasMobileNum:(BOOL) value {
  hasMobileNum_ = !!value;
}
@synthesize mobileNum;
- (BOOL) hasImsi {
  return !!hasImsi_;
}
- (void) setHasImsi:(BOOL) value {
  hasImsi_ = !!value;
}
@synthesize imsi;
- (BOOL) hasMobileManufacturer {
  return !!hasMobileManufacturer_;
}
- (void) setHasMobileManufacturer:(BOOL) value {
  hasMobileManufacturer_ = !!value;
}
@synthesize mobileManufacturer;
- (BOOL) hasMobileType {
  return !!hasMobileType_;
}
- (void) setHasMobileType:(BOOL) value {
  hasMobileType_ = !!value;
}
@synthesize mobileType;
- (BOOL) hasJobServerId {
  return !!hasJobServerId_;
}
- (void) setHasJobServerId:(BOOL) value {
  hasJobServerId_ = !!value;
}
@synthesize jobServerId;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
- (BOOL) hasScreenWidth {
  return !!hasScreenWidth_;
}
- (void) setHasScreenWidth:(BOOL) value {
  hasScreenWidth_ = !!value;
}
@synthesize screenWidth;
- (BOOL) hasScreenHeight {
  return !!hasScreenHeight_;
}
- (void) setHasScreenHeight:(BOOL) value {
  hasScreenHeight_ = !!value;
}
@synthesize screenHeight;
- (BOOL) hasContactNum {
  return !!hasContactNum_;
}
- (void) setHasContactNum:(BOOL) value {
  hasContactNum_ = !!value;
}
@synthesize contactNum;
- (BOOL) hasPlatform {
  return !!hasPlatform_;
}
- (void) setHasPlatform:(BOOL) value {
  hasPlatform_ = !!value;
}
@synthesize platform;
@synthesize mutableJobItemsList;
- (BOOL) hasRequestFlag {
  return !!hasRequestFlag_;
}
- (void) setHasRequestFlag:(BOOL) value {
  hasRequestFlag_ = !!value;
}
@synthesize requestFlag;
- (void) dealloc {
  self.mobileNum = nil;
  self.imsi = nil;
  self.mobileManufacturer = nil;
  self.mobileType = nil;
  self.contactNum = nil;
  self.mutableJobItemsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.mobileNum = @"";
    self.imsi = @"";
    self.mobileManufacturer = @"";
    self.mobileType = @"";
    self.jobServerId = 0;
    self.timestamp = 0L;
    self.screenWidth = 0;
    self.screenHeight = 0;
    self.contactNum = @"";
    self.platform = PlatformNone;
    self.requestFlag = 0;
  }
  return self;
}
static GetContactAdRequest* defaultGetContactAdRequestInstance = nil;
+ (void) initialize {
  if (self == [GetContactAdRequest class]) {
    defaultGetContactAdRequestInstance = [[GetContactAdRequest alloc] init];
  }
}
+ (GetContactAdRequest*) defaultInstance {
  return defaultGetContactAdRequestInstance;
}
- (GetContactAdRequest*) defaultInstance {
  return defaultGetContactAdRequestInstance;
}
- (NSArray*) jobItemsList {
  return mutableJobItemsList;
}
- (JobItem*) jobItemsAtIndex:(int32_t) index {
  id value = [mutableJobItemsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (!self.hasContactNum) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasMobileNum) {
    [output writeString:1 value:self.mobileNum];
  }
  if (self.hasImsi) {
    [output writeString:2 value:self.imsi];
  }
  if (self.hasMobileManufacturer) {
    [output writeString:3 value:self.mobileManufacturer];
  }
  if (self.hasMobileType) {
    [output writeString:4 value:self.mobileType];
  }
  if (self.hasJobServerId) {
    [output writeInt32:5 value:self.jobServerId];
  }
  if (self.hasTimestamp) {
    [output writeInt64:6 value:self.timestamp];
  }
  if (self.hasScreenWidth) {
    [output writeInt32:7 value:self.screenWidth];
  }
  if (self.hasScreenHeight) {
    [output writeInt32:8 value:self.screenHeight];
  }
  if (self.hasContactNum) {
    [output writeString:9 value:self.contactNum];
  }
  if (self.hasPlatform) {
    [output writeEnum:10 value:self.platform];
  }
  for (JobItem* element in self.jobItemsList) {
    [output writeMessage:11 value:element];
  }
  if (self.hasRequestFlag) {
    [output writeInt32:12 value:self.requestFlag];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasMobileNum) {
    size += computeStringSize(1, self.mobileNum);
  }
  if (self.hasImsi) {
    size += computeStringSize(2, self.imsi);
  }
  if (self.hasMobileManufacturer) {
    size += computeStringSize(3, self.mobileManufacturer);
  }
  if (self.hasMobileType) {
    size += computeStringSize(4, self.mobileType);
  }
  if (self.hasJobServerId) {
    size += computeInt32Size(5, self.jobServerId);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(6, self.timestamp);
  }
  if (self.hasScreenWidth) {
    size += computeInt32Size(7, self.screenWidth);
  }
  if (self.hasScreenHeight) {
    size += computeInt32Size(8, self.screenHeight);
  }
  if (self.hasContactNum) {
    size += computeStringSize(9, self.contactNum);
  }
  if (self.hasPlatform) {
    size += computeEnumSize(10, self.platform);
  }
  for (JobItem* element in self.jobItemsList) {
    size += computeMessageSize(11, element);
  }
  if (self.hasRequestFlag) {
    size += computeInt32Size(12, self.requestFlag);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetContactAdRequest*) parseFromData:(NSData*) data {
  return (GetContactAdRequest*)[[[GetContactAdRequest builder] mergeFromData:data] build];
}
+ (GetContactAdRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetContactAdRequest*)[[[GetContactAdRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetContactAdRequest*) parseFromInputStream:(NSInputStream*) input {
  return (GetContactAdRequest*)[[[GetContactAdRequest builder] mergeFromInputStream:input] build];
}
+ (GetContactAdRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetContactAdRequest*)[[[GetContactAdRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetContactAdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetContactAdRequest*)[[[GetContactAdRequest builder] mergeFromCodedInputStream:input] build];
}
+ (GetContactAdRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetContactAdRequest*)[[[GetContactAdRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetContactAdRequest_Builder*) builder {
  return [[[GetContactAdRequest_Builder alloc] init] autorelease];
}
+ (GetContactAdRequest_Builder*) builderWithPrototype:(GetContactAdRequest*) prototype {
  return [[GetContactAdRequest builder] mergeFrom:prototype];
}
- (GetContactAdRequest_Builder*) builder {
  return [GetContactAdRequest builder];
}
@end

@interface GetContactAdRequest_Builder()
@property (retain) GetContactAdRequest* result;
@end

@implementation GetContactAdRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetContactAdRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetContactAdRequest_Builder*) clear {
  self.result = [[[GetContactAdRequest alloc] init] autorelease];
  return self;
}
- (GetContactAdRequest_Builder*) clone {
  return [GetContactAdRequest builderWithPrototype:result];
}
- (GetContactAdRequest*) defaultInstance {
  return [GetContactAdRequest defaultInstance];
}
- (GetContactAdRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetContactAdRequest*) buildPartial {
  GetContactAdRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetContactAdRequest_Builder*) mergeFrom:(GetContactAdRequest*) other {
  if (other == [GetContactAdRequest defaultInstance]) {
    return self;
  }
  if (other.hasMobileNum) {
    [self setMobileNum:other.mobileNum];
  }
  if (other.hasImsi) {
    [self setImsi:other.imsi];
  }
  if (other.hasMobileManufacturer) {
    [self setMobileManufacturer:other.mobileManufacturer];
  }
  if (other.hasMobileType) {
    [self setMobileType:other.mobileType];
  }
  if (other.hasJobServerId) {
    [self setJobServerId:other.jobServerId];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasScreenWidth) {
    [self setScreenWidth:other.screenWidth];
  }
  if (other.hasScreenHeight) {
    [self setScreenHeight:other.screenHeight];
  }
  if (other.hasContactNum) {
    [self setContactNum:other.contactNum];
  }
  if (other.hasPlatform) {
    [self setPlatform:other.platform];
  }
  if (other.mutableJobItemsList.count > 0) {
    if (result.mutableJobItemsList == nil) {
      result.mutableJobItemsList = [NSMutableArray array];
    }
    [result.mutableJobItemsList addObjectsFromArray:other.mutableJobItemsList];
  }
  if (other.hasRequestFlag) {
    [self setRequestFlag:other.requestFlag];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetContactAdRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetContactAdRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setMobileNum:[input readString]];
        break;
      }
      case 18: {
        [self setImsi:[input readString]];
        break;
      }
      case 26: {
        [self setMobileManufacturer:[input readString]];
        break;
      }
      case 34: {
        [self setMobileType:[input readString]];
        break;
      }
      case 40: {
        [self setJobServerId:[input readInt32]];
        break;
      }
      case 48: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 56: {
        [self setScreenWidth:[input readInt32]];
        break;
      }
      case 64: {
        [self setScreenHeight:[input readInt32]];
        break;
      }
      case 74: {
        [self setContactNum:[input readString]];
        break;
      }
      case 80: {
        int32_t value = [input readEnum];
        if (PlatformIsValidValue(value)) {
          [self setPlatform:value];
        } else {
          [unknownFields mergeVarintField:10 value:value];
        }
        break;
      }
      case 90: {
        JobItem_Builder* subBuilder = [JobItem builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addJobItems:[subBuilder buildPartial]];
        break;
      }
      case 96: {
        [self setRequestFlag:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasMobileNum {
  return result.hasMobileNum;
}
- (NSString*) mobileNum {
  return result.mobileNum;
}
- (GetContactAdRequest_Builder*) setMobileNum:(NSString*) value {
  result.hasMobileNum = YES;
  result.mobileNum = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearMobileNum {
  result.hasMobileNum = NO;
  result.mobileNum = @"";
  return self;
}
- (BOOL) hasImsi {
  return result.hasImsi;
}
- (NSString*) imsi {
  return result.imsi;
}
- (GetContactAdRequest_Builder*) setImsi:(NSString*) value {
  result.hasImsi = YES;
  result.imsi = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearImsi {
  result.hasImsi = NO;
  result.imsi = @"";
  return self;
}
- (BOOL) hasMobileManufacturer {
  return result.hasMobileManufacturer;
}
- (NSString*) mobileManufacturer {
  return result.mobileManufacturer;
}
- (GetContactAdRequest_Builder*) setMobileManufacturer:(NSString*) value {
  result.hasMobileManufacturer = YES;
  result.mobileManufacturer = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearMobileManufacturer {
  result.hasMobileManufacturer = NO;
  result.mobileManufacturer = @"";
  return self;
}
- (BOOL) hasMobileType {
  return result.hasMobileType;
}
- (NSString*) mobileType {
  return result.mobileType;
}
- (GetContactAdRequest_Builder*) setMobileType:(NSString*) value {
  result.hasMobileType = YES;
  result.mobileType = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearMobileType {
  result.hasMobileType = NO;
  result.mobileType = @"";
  return self;
}
- (BOOL) hasJobServerId {
  return result.hasJobServerId;
}
- (int32_t) jobServerId {
  return result.jobServerId;
}
- (GetContactAdRequest_Builder*) setJobServerId:(int32_t) value {
  result.hasJobServerId = YES;
  result.jobServerId = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearJobServerId {
  result.hasJobServerId = NO;
  result.jobServerId = 0;
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (GetContactAdRequest_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (BOOL) hasScreenWidth {
  return result.hasScreenWidth;
}
- (int32_t) screenWidth {
  return result.screenWidth;
}
- (GetContactAdRequest_Builder*) setScreenWidth:(int32_t) value {
  result.hasScreenWidth = YES;
  result.screenWidth = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearScreenWidth {
  result.hasScreenWidth = NO;
  result.screenWidth = 0;
  return self;
}
- (BOOL) hasScreenHeight {
  return result.hasScreenHeight;
}
- (int32_t) screenHeight {
  return result.screenHeight;
}
- (GetContactAdRequest_Builder*) setScreenHeight:(int32_t) value {
  result.hasScreenHeight = YES;
  result.screenHeight = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearScreenHeight {
  result.hasScreenHeight = NO;
  result.screenHeight = 0;
  return self;
}
- (BOOL) hasContactNum {
  return result.hasContactNum;
}
- (NSString*) contactNum {
  return result.contactNum;
}
- (GetContactAdRequest_Builder*) setContactNum:(NSString*) value {
  result.hasContactNum = YES;
  result.contactNum = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearContactNum {
  result.hasContactNum = NO;
  result.contactNum = @"";
  return self;
}
- (BOOL) hasPlatform {
  return result.hasPlatform;
}
- (Platform) platform {
  return result.platform;
}
- (GetContactAdRequest_Builder*) setPlatform:(Platform) value {
  result.hasPlatform = YES;
  result.platform = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearPlatform {
  result.hasPlatform = NO;
  result.platform = PlatformNone;
  return self;
}
- (NSArray*) jobItemsList {
  if (result.mutableJobItemsList == nil) { return [NSArray array]; }
  return result.mutableJobItemsList;
}
- (JobItem*) jobItemsAtIndex:(int32_t) index {
  return [result jobItemsAtIndex:index];
}
- (GetContactAdRequest_Builder*) replaceJobItemsAtIndex:(int32_t) index with:(JobItem*) value {
  [result.mutableJobItemsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetContactAdRequest_Builder*) addAllJobItems:(NSArray*) values {
  if (result.mutableJobItemsList == nil) {
    result.mutableJobItemsList = [NSMutableArray array];
  }
  [result.mutableJobItemsList addObjectsFromArray:values];
  return self;
}
- (GetContactAdRequest_Builder*) clearJobItemsList {
  result.mutableJobItemsList = nil;
  return self;
}
- (GetContactAdRequest_Builder*) addJobItems:(JobItem*) value {
  if (result.mutableJobItemsList == nil) {
    result.mutableJobItemsList = [NSMutableArray array];
  }
  [result.mutableJobItemsList addObject:value];
  return self;
}
- (BOOL) hasRequestFlag {
  return result.hasRequestFlag;
}
- (int32_t) requestFlag {
  return result.requestFlag;
}
- (GetContactAdRequest_Builder*) setRequestFlag:(int32_t) value {
  result.hasRequestFlag = YES;
  result.requestFlag = value;
  return self;
}
- (GetContactAdRequest_Builder*) clearRequestFlag {
  result.hasRequestFlag = NO;
  result.requestFlag = 0;
  return self;
}
@end

@interface GetContactAdResponse ()
@property int32_t jobServerId;
@property int64_t timestamp;
@property (retain) NSString* startDate;
@property (retain) NSString* endDate;
@property int32_t frequency;
@property (retain) ContactAd* contactAd;
@property (retain) NSString* title;
@property (retain) NSMutableArray* mutableNewContactAdList;
@end

@implementation GetContactAdResponse

- (BOOL) hasJobServerId {
  return !!hasJobServerId_;
}
- (void) setHasJobServerId:(BOOL) value {
  hasJobServerId_ = !!value;
}
@synthesize jobServerId;
- (BOOL) hasTimestamp {
  return !!hasTimestamp_;
}
- (void) setHasTimestamp:(BOOL) value {
  hasTimestamp_ = !!value;
}
@synthesize timestamp;
- (BOOL) hasStartDate {
  return !!hasStartDate_;
}
- (void) setHasStartDate:(BOOL) value {
  hasStartDate_ = !!value;
}
@synthesize startDate;
- (BOOL) hasEndDate {
  return !!hasEndDate_;
}
- (void) setHasEndDate:(BOOL) value {
  hasEndDate_ = !!value;
}
@synthesize endDate;
- (BOOL) hasFrequency {
  return !!hasFrequency_;
}
- (void) setHasFrequency:(BOOL) value {
  hasFrequency_ = !!value;
}
@synthesize frequency;
- (BOOL) hasContactAd {
  return !!hasContactAd_;
}
- (void) setHasContactAd:(BOOL) value {
  hasContactAd_ = !!value;
}
@synthesize contactAd;
- (BOOL) hasTitle {
  return !!hasTitle_;
}
- (void) setHasTitle:(BOOL) value {
  hasTitle_ = !!value;
}
@synthesize title;
@synthesize mutableNewContactAdList;
- (void) dealloc {
  self.startDate = nil;
  self.endDate = nil;
  self.contactAd = nil;
  self.title = nil;
  self.mutableNewContactAdList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.jobServerId = 0;
    self.timestamp = 0L;
    self.startDate = @"";
    self.endDate = @"";
    self.frequency = 0;
    self.contactAd = [ContactAd defaultInstance];
    self.title = @"";
  }
  return self;
}
static GetContactAdResponse* defaultGetContactAdResponseInstance = nil;
+ (void) initialize {
  if (self == [GetContactAdResponse class]) {
    defaultGetContactAdResponseInstance = [[GetContactAdResponse alloc] init];
  }
}
+ (GetContactAdResponse*) defaultInstance {
  return defaultGetContactAdResponseInstance;
}
- (GetContactAdResponse*) defaultInstance {
  return defaultGetContactAdResponseInstance;
}
- (NSArray*) newContactAdList {
  return mutableNewContactAdList;
}
- (NewContactAd*) newContactAdAtIndex:(int32_t) index {
  id value = [mutableNewContactAdList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  if (self.hasContactAd) {
    if (!self.contactAd.isInitialized) {
      return NO;
    }
  }
  for (NewContactAd* element in self.newContactAdList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasJobServerId) {
    [output writeInt32:1 value:self.jobServerId];
  }
  if (self.hasTimestamp) {
    [output writeInt64:2 value:self.timestamp];
  }
  if (self.hasStartDate) {
    [output writeString:3 value:self.startDate];
  }
  if (self.hasEndDate) {
    [output writeString:4 value:self.endDate];
  }
  if (self.hasFrequency) {
    [output writeInt32:5 value:self.frequency];
  }
  if (self.hasContactAd) {
    [output writeMessage:6 value:self.contactAd];
  }
  if (self.hasTitle) {
    [output writeString:7 value:self.title];
  }
  for (NewContactAd* element in self.newContactAdList) {
    [output writeMessage:8 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasJobServerId) {
    size += computeInt32Size(1, self.jobServerId);
  }
  if (self.hasTimestamp) {
    size += computeInt64Size(2, self.timestamp);
  }
  if (self.hasStartDate) {
    size += computeStringSize(3, self.startDate);
  }
  if (self.hasEndDate) {
    size += computeStringSize(4, self.endDate);
  }
  if (self.hasFrequency) {
    size += computeInt32Size(5, self.frequency);
  }
  if (self.hasContactAd) {
    size += computeMessageSize(6, self.contactAd);
  }
  if (self.hasTitle) {
    size += computeStringSize(7, self.title);
  }
  for (NewContactAd* element in self.newContactAdList) {
    size += computeMessageSize(8, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (GetContactAdResponse*) parseFromData:(NSData*) data {
  return (GetContactAdResponse*)[[[GetContactAdResponse builder] mergeFromData:data] build];
}
+ (GetContactAdResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetContactAdResponse*)[[[GetContactAdResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (GetContactAdResponse*) parseFromInputStream:(NSInputStream*) input {
  return (GetContactAdResponse*)[[[GetContactAdResponse builder] mergeFromInputStream:input] build];
}
+ (GetContactAdResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetContactAdResponse*)[[[GetContactAdResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetContactAdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (GetContactAdResponse*)[[[GetContactAdResponse builder] mergeFromCodedInputStream:input] build];
}
+ (GetContactAdResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (GetContactAdResponse*)[[[GetContactAdResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (GetContactAdResponse_Builder*) builder {
  return [[[GetContactAdResponse_Builder alloc] init] autorelease];
}
+ (GetContactAdResponse_Builder*) builderWithPrototype:(GetContactAdResponse*) prototype {
  return [[GetContactAdResponse builder] mergeFrom:prototype];
}
- (GetContactAdResponse_Builder*) builder {
  return [GetContactAdResponse builder];
}
@end

@interface GetContactAdResponse_Builder()
@property (retain) GetContactAdResponse* result;
@end

@implementation GetContactAdResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[GetContactAdResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (GetContactAdResponse_Builder*) clear {
  self.result = [[[GetContactAdResponse alloc] init] autorelease];
  return self;
}
- (GetContactAdResponse_Builder*) clone {
  return [GetContactAdResponse builderWithPrototype:result];
}
- (GetContactAdResponse*) defaultInstance {
  return [GetContactAdResponse defaultInstance];
}
- (GetContactAdResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (GetContactAdResponse*) buildPartial {
  GetContactAdResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (GetContactAdResponse_Builder*) mergeFrom:(GetContactAdResponse*) other {
  if (other == [GetContactAdResponse defaultInstance]) {
    return self;
  }
  if (other.hasJobServerId) {
    [self setJobServerId:other.jobServerId];
  }
  if (other.hasTimestamp) {
    [self setTimestamp:other.timestamp];
  }
  if (other.hasStartDate) {
    [self setStartDate:other.startDate];
  }
  if (other.hasEndDate) {
    [self setEndDate:other.endDate];
  }
  if (other.hasFrequency) {
    [self setFrequency:other.frequency];
  }
  if (other.hasContactAd) {
    [self mergeContactAd:other.contactAd];
  }
  if (other.hasTitle) {
    [self setTitle:other.title];
  }
  if (other.mutableNewContactAdList.count > 0) {
    if (result.mutableNewContactAdList == nil) {
      result.mutableNewContactAdList = [NSMutableArray array];
    }
    [result.mutableNewContactAdList addObjectsFromArray:other.mutableNewContactAdList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (GetContactAdResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (GetContactAdResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setJobServerId:[input readInt32]];
        break;
      }
      case 16: {
        [self setTimestamp:[input readInt64]];
        break;
      }
      case 26: {
        [self setStartDate:[input readString]];
        break;
      }
      case 34: {
        [self setEndDate:[input readString]];
        break;
      }
      case 40: {
        [self setFrequency:[input readInt32]];
        break;
      }
      case 50: {
        ContactAd_Builder* subBuilder = [ContactAd builder];
        if (self.hasContactAd) {
          [subBuilder mergeFrom:self.contactAd];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setContactAd:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        [self setTitle:[input readString]];
        break;
      }
      case 66: {
        NewContactAd_Builder* subBuilder = [NewContactAd builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addNewContactAd:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasJobServerId {
  return result.hasJobServerId;
}
- (int32_t) jobServerId {
  return result.jobServerId;
}
- (GetContactAdResponse_Builder*) setJobServerId:(int32_t) value {
  result.hasJobServerId = YES;
  result.jobServerId = value;
  return self;
}
- (GetContactAdResponse_Builder*) clearJobServerId {
  result.hasJobServerId = NO;
  result.jobServerId = 0;
  return self;
}
- (BOOL) hasTimestamp {
  return result.hasTimestamp;
}
- (int64_t) timestamp {
  return result.timestamp;
}
- (GetContactAdResponse_Builder*) setTimestamp:(int64_t) value {
  result.hasTimestamp = YES;
  result.timestamp = value;
  return self;
}
- (GetContactAdResponse_Builder*) clearTimestamp {
  result.hasTimestamp = NO;
  result.timestamp = 0L;
  return self;
}
- (BOOL) hasStartDate {
  return result.hasStartDate;
}
- (NSString*) startDate {
  return result.startDate;
}
- (GetContactAdResponse_Builder*) setStartDate:(NSString*) value {
  result.hasStartDate = YES;
  result.startDate = value;
  return self;
}
- (GetContactAdResponse_Builder*) clearStartDate {
  result.hasStartDate = NO;
  result.startDate = @"";
  return self;
}
- (BOOL) hasEndDate {
  return result.hasEndDate;
}
- (NSString*) endDate {
  return result.endDate;
}
- (GetContactAdResponse_Builder*) setEndDate:(NSString*) value {
  result.hasEndDate = YES;
  result.endDate = value;
  return self;
}
- (GetContactAdResponse_Builder*) clearEndDate {
  result.hasEndDate = NO;
  result.endDate = @"";
  return self;
}
- (BOOL) hasFrequency {
  return result.hasFrequency;
}
- (int32_t) frequency {
  return result.frequency;
}
- (GetContactAdResponse_Builder*) setFrequency:(int32_t) value {
  result.hasFrequency = YES;
  result.frequency = value;
  return self;
}
- (GetContactAdResponse_Builder*) clearFrequency {
  result.hasFrequency = NO;
  result.frequency = 0;
  return self;
}
- (BOOL) hasContactAd {
  return result.hasContactAd;
}
- (ContactAd*) contactAd {
  return result.contactAd;
}
- (GetContactAdResponse_Builder*) setContactAd:(ContactAd*) value {
  result.hasContactAd = YES;
  result.contactAd = value;
  return self;
}
- (GetContactAdResponse_Builder*) setContactAdBuilder:(ContactAd_Builder*) builderForValue {
  return [self setContactAd:[builderForValue build]];
}
- (GetContactAdResponse_Builder*) mergeContactAd:(ContactAd*) value {
  if (result.hasContactAd &&
      result.contactAd != [ContactAd defaultInstance]) {
    result.contactAd =
      [[[ContactAd builderWithPrototype:result.contactAd] mergeFrom:value] buildPartial];
  } else {
    result.contactAd = value;
  }
  result.hasContactAd = YES;
  return self;
}
- (GetContactAdResponse_Builder*) clearContactAd {
  result.hasContactAd = NO;
  result.contactAd = [ContactAd defaultInstance];
  return self;
}
- (BOOL) hasTitle {
  return result.hasTitle;
}
- (NSString*) title {
  return result.title;
}
- (GetContactAdResponse_Builder*) setTitle:(NSString*) value {
  result.hasTitle = YES;
  result.title = value;
  return self;
}
- (GetContactAdResponse_Builder*) clearTitle {
  result.hasTitle = NO;
  result.title = @"";
  return self;
}
- (NSArray*) newContactAdList {
  if (result.mutableNewContactAdList == nil) { return [NSArray array]; }
  return result.mutableNewContactAdList;
}
- (NewContactAd*) newContactAdAtIndex:(int32_t) index {
  return [result newContactAdAtIndex:index];
}
- (GetContactAdResponse_Builder*) replaceNewContactAdAtIndex:(int32_t) index with:(NewContactAd*) value {
  [result.mutableNewContactAdList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (GetContactAdResponse_Builder*) addAllNewContactAd:(NSArray*) values {
  if (result.mutableNewContactAdList == nil) {
    result.mutableNewContactAdList = [NSMutableArray array];
  }
  [result.mutableNewContactAdList addObjectsFromArray:values];
  return self;
}
- (GetContactAdResponse_Builder*) clearNewContactAdList {
  result.mutableNewContactAdList = nil;
  return self;
}
- (GetContactAdResponse_Builder*) addNewContactAd:(NewContactAd*) value {
  if (result.mutableNewContactAdList == nil) {
    result.mutableNewContactAdList = [NSMutableArray array];
  }
  [result.mutableNewContactAdList addObject:value];
  return self;
}
@end

