// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "UploadSmsProto.pb.h"

@implementation UploadSmsProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [UploadSmsProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BaseTypeProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface UploadSmsRequest ()
@property (retain) NSMutableArray* mutableSmsList;
@end

@implementation UploadSmsRequest

@synthesize mutableSmsList;
- (void) dealloc {
  self.mutableSmsList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
  }
  return self;
}
static UploadSmsRequest* defaultUploadSmsRequestInstance = nil;
+ (void) initialize {
  if (self == [UploadSmsRequest class]) {
    defaultUploadSmsRequestInstance = [[UploadSmsRequest alloc] init];
  }
}
+ (UploadSmsRequest*) defaultInstance {
  return defaultUploadSmsRequestInstance;
}
- (UploadSmsRequest*) defaultInstance {
  return defaultUploadSmsRequestInstance;
}
- (NSArray*) smsList {
  return mutableSmsList;
}
- (Sms*) smsAtIndex:(int32_t) index {
  id value = [mutableSmsList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (Sms* element in self.smsList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Sms* element in self.smsList) {
    [output writeMessage:1 value:element];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Sms* element in self.smsList) {
    size += computeMessageSize(1, element);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (UploadSmsRequest*) parseFromData:(NSData*) data {
  return (UploadSmsRequest*)[[[UploadSmsRequest builder] mergeFromData:data] build];
}
+ (UploadSmsRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadSmsRequest*)[[[UploadSmsRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (UploadSmsRequest*) parseFromInputStream:(NSInputStream*) input {
  return (UploadSmsRequest*)[[[UploadSmsRequest builder] mergeFromInputStream:input] build];
}
+ (UploadSmsRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadSmsRequest*)[[[UploadSmsRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UploadSmsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (UploadSmsRequest*)[[[UploadSmsRequest builder] mergeFromCodedInputStream:input] build];
}
+ (UploadSmsRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (UploadSmsRequest*)[[[UploadSmsRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (UploadSmsRequest_Builder*) builder {
  return [[[UploadSmsRequest_Builder alloc] init] autorelease];
}
+ (UploadSmsRequest_Builder*) builderWithPrototype:(UploadSmsRequest*) prototype {
  return [[UploadSmsRequest builder] mergeFrom:prototype];
}
- (UploadSmsRequest_Builder*) builder {
  return [UploadSmsRequest builder];
}
@end

@interface UploadSmsRequest_Builder()
@property (retain) UploadSmsRequest* result;
@end

@implementation UploadSmsRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[UploadSmsRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (UploadSmsRequest_Builder*) clear {
  self.result = [[[UploadSmsRequest alloc] init] autorelease];
  return self;
}
- (UploadSmsRequest_Builder*) clone {
  return [UploadSmsRequest builderWithPrototype:result];
}
- (UploadSmsRequest*) defaultInstance {
  return [UploadSmsRequest defaultInstance];
}
- (UploadSmsRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (UploadSmsRequest*) buildPartial {
  UploadSmsRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (UploadSmsRequest_Builder*) mergeFrom:(UploadSmsRequest*) other {
  if (other == [UploadSmsRequest defaultInstance]) {
    return self;
  }
  if (other.mutableSmsList.count > 0) {
    if (result.mutableSmsList == nil) {
      result.mutableSmsList = [NSMutableArray array];
    }
    [result.mutableSmsList addObjectsFromArray:other.mutableSmsList];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (UploadSmsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (UploadSmsRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Sms_Builder* subBuilder = [Sms builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addSms:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) smsList {
  if (result.mutableSmsList == nil) { return [NSArray array]; }
  return result.mutableSmsList;
}
- (Sms*) smsAtIndex:(int32_t) index {
  return [result smsAtIndex:index];
}
- (UploadSmsRequest_Builder*) replaceSmsAtIndex:(int32_t) index with:(Sms*) value {
  [result.mutableSmsList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (UploadSmsRequest_Builder*) addAllSms:(NSArray*) values {
  if (result.mutableSmsList == nil) {
    result.mutableSmsList = [NSMutableArray array];
  }
  [result.mutableSmsList addObjectsFromArray:values];
  return self;
}
- (UploadSmsRequest_Builder*) clearSmsList {
  result.mutableSmsList = nil;
  return self;
}
- (UploadSmsRequest_Builder*) addSms:(Sms*) value {
  if (result.mutableSmsList == nil) {
    result.mutableSmsList = [NSMutableArray array];
  }
  [result.mutableSmsList addObject:value];
  return self;
}
@end

