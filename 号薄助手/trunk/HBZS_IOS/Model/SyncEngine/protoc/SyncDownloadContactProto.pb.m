// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SyncDownloadContactProto.pb.h"

@implementation SyncDownloadContactProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SyncDownloadContactProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ContactProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SyncDownloadContactRequest ()
@property (retain) NSMutableArray* mutableContactIdList;
@property (retain) NSMutableArray* mutableGroupIdList;
@property BOOL isRequestBusinessCard;
@end

@implementation SyncDownloadContactRequest

@synthesize mutableContactIdList;
@synthesize mutableGroupIdList;
- (BOOL) hasIsRequestBusinessCard {
  return !!hasIsRequestBusinessCard_;
}
- (void) setHasIsRequestBusinessCard:(BOOL) value {
  hasIsRequestBusinessCard_ = !!value;
}
- (BOOL) isRequestBusinessCard {
  return !!isRequestBusinessCard_;
}
- (void) setIsRequestBusinessCard:(BOOL) value {
  isRequestBusinessCard_ = !!value;
}
- (void) dealloc {
  self.mutableContactIdList = nil;
  self.mutableGroupIdList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isRequestBusinessCard = NO;
  }
  return self;
}
static SyncDownloadContactRequest* defaultSyncDownloadContactRequestInstance = nil;
+ (void) initialize {
  if (self == [SyncDownloadContactRequest class]) {
    defaultSyncDownloadContactRequestInstance = [[SyncDownloadContactRequest alloc] init];
  }
}
+ (SyncDownloadContactRequest*) defaultInstance {
  return defaultSyncDownloadContactRequestInstance;
}
- (SyncDownloadContactRequest*) defaultInstance {
  return defaultSyncDownloadContactRequestInstance;
}
- (NSArray*) contactIdList {
  return mutableContactIdList;
}
- (int32_t) contactIdAtIndex:(int32_t) index {
  id value = [mutableContactIdList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) groupIdList {
  return mutableGroupIdList;
}
- (int32_t) groupIdAtIndex:(int32_t) index {
  id value = [mutableGroupIdList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.mutableContactIdList.count > 0) {
    [output writeRawVarint32:10];
    [output writeRawVarint32:contactIdMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableContactIdList) {
    [output writeInt32NoTag:[value intValue]];
  }
  if (self.mutableGroupIdList.count > 0) {
    [output writeRawVarint32:18];
    [output writeRawVarint32:groupIdMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableGroupIdList) {
    [output writeInt32NoTag:[value intValue]];
  }
  if (self.hasIsRequestBusinessCard) {
    [output writeBool:3 value:self.isRequestBusinessCard];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableContactIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableContactIdList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    contactIdMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableGroupIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableGroupIdList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    groupIdMemoizedSerializedSize = dataSize;
  }
  if (self.hasIsRequestBusinessCard) {
    size += computeBoolSize(3, self.isRequestBusinessCard);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncDownloadContactRequest*) parseFromData:(NSData*) data {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromData:data] build];
}
+ (SyncDownloadContactRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactRequest*) parseFromInputStream:(NSInputStream*) input {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromInputStream:input] build];
}
+ (SyncDownloadContactRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromCodedInputStream:input] build];
}
+ (SyncDownloadContactRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactRequest*)[[[SyncDownloadContactRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactRequest_Builder*) builder {
  return [[[SyncDownloadContactRequest_Builder alloc] init] autorelease];
}
+ (SyncDownloadContactRequest_Builder*) builderWithPrototype:(SyncDownloadContactRequest*) prototype {
  return [[SyncDownloadContactRequest builder] mergeFrom:prototype];
}
- (SyncDownloadContactRequest_Builder*) builder {
  return [SyncDownloadContactRequest builder];
}
@end

@interface SyncDownloadContactRequest_Builder()
@property (retain) SyncDownloadContactRequest* result;
@end

@implementation SyncDownloadContactRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncDownloadContactRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncDownloadContactRequest_Builder*) clear {
  self.result = [[[SyncDownloadContactRequest alloc] init] autorelease];
  return self;
}
- (SyncDownloadContactRequest_Builder*) clone {
  return [SyncDownloadContactRequest builderWithPrototype:result];
}
- (SyncDownloadContactRequest*) defaultInstance {
  return [SyncDownloadContactRequest defaultInstance];
}
- (SyncDownloadContactRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncDownloadContactRequest*) buildPartial {
  SyncDownloadContactRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncDownloadContactRequest_Builder*) mergeFrom:(SyncDownloadContactRequest*) other {
  if (other == [SyncDownloadContactRequest defaultInstance]) {
    return self;
  }
  if (other.mutableContactIdList.count > 0) {
    if (result.mutableContactIdList == nil) {
      result.mutableContactIdList = [NSMutableArray array];
    }
    [result.mutableContactIdList addObjectsFromArray:other.mutableContactIdList];
  }
  if (other.mutableGroupIdList.count > 0) {
    if (result.mutableGroupIdList == nil) {
      result.mutableGroupIdList = [NSMutableArray array];
    }
    [result.mutableGroupIdList addObjectsFromArray:other.mutableGroupIdList];
  }
  if (other.hasIsRequestBusinessCard) {
    [self setIsRequestBusinessCard:other.isRequestBusinessCard];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncDownloadContactRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncDownloadContactRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addContactId:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 18: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addGroupId:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 24: {
        [self setIsRequestBusinessCard:[input readBool]];
        break;
      }
    }
  }
}
- (NSArray*) contactIdList {
  if (result.mutableContactIdList == nil) {
    return [NSArray array];
  }
  return result.mutableContactIdList;
}
- (int32_t) contactIdAtIndex:(int32_t) index {
  return [result contactIdAtIndex:index];
}
- (SyncDownloadContactRequest_Builder*) replaceContactIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableContactIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncDownloadContactRequest_Builder*) addContactId:(int32_t) value {
  if (result.mutableContactIdList == nil) {
    result.mutableContactIdList = [NSMutableArray array];
  }
  [result.mutableContactIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncDownloadContactRequest_Builder*) addAllContactId:(NSArray*) values {
  if (result.mutableContactIdList == nil) {
    result.mutableContactIdList = [NSMutableArray array];
  }
  [result.mutableContactIdList addObjectsFromArray:values];
  return self;
}
- (SyncDownloadContactRequest_Builder*) clearContactIdList {
  result.mutableContactIdList = nil;
  return self;
}
- (NSArray*) groupIdList {
  if (result.mutableGroupIdList == nil) {
    return [NSArray array];
  }
  return result.mutableGroupIdList;
}
- (int32_t) groupIdAtIndex:(int32_t) index {
  return [result groupIdAtIndex:index];
}
- (SyncDownloadContactRequest_Builder*) replaceGroupIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableGroupIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncDownloadContactRequest_Builder*) addGroupId:(int32_t) value {
  if (result.mutableGroupIdList == nil) {
    result.mutableGroupIdList = [NSMutableArray array];
  }
  [result.mutableGroupIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncDownloadContactRequest_Builder*) addAllGroupId:(NSArray*) values {
  if (result.mutableGroupIdList == nil) {
    result.mutableGroupIdList = [NSMutableArray array];
  }
  [result.mutableGroupIdList addObjectsFromArray:values];
  return self;
}
- (SyncDownloadContactRequest_Builder*) clearGroupIdList {
  result.mutableGroupIdList = nil;
  return self;
}
- (BOOL) hasIsRequestBusinessCard {
  return result.hasIsRequestBusinessCard;
}
- (BOOL) isRequestBusinessCard {
  return result.isRequestBusinessCard;
}
- (SyncDownloadContactRequest_Builder*) setIsRequestBusinessCard:(BOOL) value {
  result.hasIsRequestBusinessCard = YES;
  result.isRequestBusinessCard = value;
  return self;
}
- (SyncDownloadContactRequest_Builder*) clearIsRequestBusinessCard {
  result.hasIsRequestBusinessCard = NO;
  result.isRequestBusinessCard = NO;
  return self;
}
@end

@interface SyncDownloadContactResponse ()
@property (retain) NSMutableArray* mutableContactList;
@property (retain) NSMutableArray* mutableGroupList;
@property (retain) Contact* businessCard;
@end

@implementation SyncDownloadContactResponse

@synthesize mutableContactList;
@synthesize mutableGroupList;
- (BOOL) hasBusinessCard {
  return !!hasBusinessCard_;
}
- (void) setHasBusinessCard:(BOOL) value {
  hasBusinessCard_ = !!value;
}
@synthesize businessCard;
- (void) dealloc {
  self.mutableContactList = nil;
  self.mutableGroupList = nil;
  self.businessCard = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.businessCard = [Contact defaultInstance];
  }
  return self;
}
static SyncDownloadContactResponse* defaultSyncDownloadContactResponseInstance = nil;
+ (void) initialize {
  if (self == [SyncDownloadContactResponse class]) {
    defaultSyncDownloadContactResponseInstance = [[SyncDownloadContactResponse alloc] init];
  }
}
+ (SyncDownloadContactResponse*) defaultInstance {
  return defaultSyncDownloadContactResponseInstance;
}
- (SyncDownloadContactResponse*) defaultInstance {
  return defaultSyncDownloadContactResponseInstance;
}
- (NSArray*) contactList {
  return mutableContactList;
}
- (Contact*) contactAtIndex:(int32_t) index {
  id value = [mutableContactList objectAtIndex:index];
  return value;
}
- (NSArray*) groupList {
  return mutableGroupList;
}
- (Group*) groupAtIndex:(int32_t) index {
  id value = [mutableGroupList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Contact* element in self.contactList) {
    [output writeMessage:1 value:element];
  }
  for (Group* element in self.groupList) {
    [output writeMessage:2 value:element];
  }
  if (self.hasBusinessCard) {
    [output writeMessage:3 value:self.businessCard];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Contact* element in self.contactList) {
    size += computeMessageSize(1, element);
  }
  for (Group* element in self.groupList) {
    size += computeMessageSize(2, element);
  }
  if (self.hasBusinessCard) {
    size += computeMessageSize(3, self.businessCard);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncDownloadContactResponse*) parseFromData:(NSData*) data {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromData:data] build];
}
+ (SyncDownloadContactResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactResponse*) parseFromInputStream:(NSInputStream*) input {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromInputStream:input] build];
}
+ (SyncDownloadContactResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromCodedInputStream:input] build];
}
+ (SyncDownloadContactResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncDownloadContactResponse*)[[[SyncDownloadContactResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncDownloadContactResponse_Builder*) builder {
  return [[[SyncDownloadContactResponse_Builder alloc] init] autorelease];
}
+ (SyncDownloadContactResponse_Builder*) builderWithPrototype:(SyncDownloadContactResponse*) prototype {
  return [[SyncDownloadContactResponse builder] mergeFrom:prototype];
}
- (SyncDownloadContactResponse_Builder*) builder {
  return [SyncDownloadContactResponse builder];
}
@end

@interface SyncDownloadContactResponse_Builder()
@property (retain) SyncDownloadContactResponse* result;
@end

@implementation SyncDownloadContactResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncDownloadContactResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncDownloadContactResponse_Builder*) clear {
  self.result = [[[SyncDownloadContactResponse alloc] init] autorelease];
  return self;
}
- (SyncDownloadContactResponse_Builder*) clone {
  return [SyncDownloadContactResponse builderWithPrototype:result];
}
- (SyncDownloadContactResponse*) defaultInstance {
  return [SyncDownloadContactResponse defaultInstance];
}
- (SyncDownloadContactResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncDownloadContactResponse*) buildPartial {
  SyncDownloadContactResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncDownloadContactResponse_Builder*) mergeFrom:(SyncDownloadContactResponse*) other {
  if (other == [SyncDownloadContactResponse defaultInstance]) {
    return self;
  }
  if (other.mutableContactList.count > 0) {
    if (result.mutableContactList == nil) {
      result.mutableContactList = [NSMutableArray array];
    }
    [result.mutableContactList addObjectsFromArray:other.mutableContactList];
  }
  if (other.mutableGroupList.count > 0) {
    if (result.mutableGroupList == nil) {
      result.mutableGroupList = [NSMutableArray array];
    }
    [result.mutableGroupList addObjectsFromArray:other.mutableGroupList];
  }
  if (other.hasBusinessCard) {
    [self mergeBusinessCard:other.businessCard];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncDownloadContactResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncDownloadContactResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContact:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Group_Builder* subBuilder = [Group builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroup:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasBusinessCard) {
          [subBuilder mergeFrom:self.businessCard];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessCard:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) contactList {
  if (result.mutableContactList == nil) { return [NSArray array]; }
  return result.mutableContactList;
}
- (Contact*) contactAtIndex:(int32_t) index {
  return [result contactAtIndex:index];
}
- (SyncDownloadContactResponse_Builder*) replaceContactAtIndex:(int32_t) index with:(Contact*) value {
  [result.mutableContactList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncDownloadContactResponse_Builder*) addAllContact:(NSArray*) values {
  if (result.mutableContactList == nil) {
    result.mutableContactList = [NSMutableArray array];
  }
  [result.mutableContactList addObjectsFromArray:values];
  return self;
}
- (SyncDownloadContactResponse_Builder*) clearContactList {
  result.mutableContactList = nil;
  return self;
}
- (SyncDownloadContactResponse_Builder*) addContact:(Contact*) value {
  if (result.mutableContactList == nil) {
    result.mutableContactList = [NSMutableArray array];
  }
  [result.mutableContactList addObject:value];
  return self;
}
- (NSArray*) groupList {
  if (result.mutableGroupList == nil) { return [NSArray array]; }
  return result.mutableGroupList;
}
- (Group*) groupAtIndex:(int32_t) index {
  return [result groupAtIndex:index];
}
- (SyncDownloadContactResponse_Builder*) replaceGroupAtIndex:(int32_t) index with:(Group*) value {
  [result.mutableGroupList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncDownloadContactResponse_Builder*) addAllGroup:(NSArray*) values {
  if (result.mutableGroupList == nil) {
    result.mutableGroupList = [NSMutableArray array];
  }
  [result.mutableGroupList addObjectsFromArray:values];
  return self;
}
- (SyncDownloadContactResponse_Builder*) clearGroupList {
  result.mutableGroupList = nil;
  return self;
}
- (SyncDownloadContactResponse_Builder*) addGroup:(Group*) value {
  if (result.mutableGroupList == nil) {
    result.mutableGroupList = [NSMutableArray array];
  }
  [result.mutableGroupList addObject:value];
  return self;
}
- (BOOL) hasBusinessCard {
  return result.hasBusinessCard;
}
- (Contact*) businessCard {
  return result.businessCard;
}
- (SyncDownloadContactResponse_Builder*) setBusinessCard:(Contact*) value {
  result.hasBusinessCard = YES;
  result.businessCard = value;
  return self;
}
- (SyncDownloadContactResponse_Builder*) setBusinessCardBuilder:(Contact_Builder*) builderForValue {
  return [self setBusinessCard:[builderForValue build]];
}
- (SyncDownloadContactResponse_Builder*) mergeBusinessCard:(Contact*) value {
  if (result.hasBusinessCard &&
      result.businessCard != [Contact defaultInstance]) {
    result.businessCard =
      [[[Contact builderWithPrototype:result.businessCard] mergeFrom:value] buildPartial];
  } else {
    result.businessCard = value;
  }
  result.hasBusinessCard = YES;
  return self;
}
- (SyncDownloadContactResponse_Builder*) clearBusinessCard {
  result.hasBusinessCard = NO;
  result.businessCard = [Contact defaultInstance];
  return self;
}
@end

