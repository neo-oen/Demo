// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "ContactProto.pb.h"

@implementation ContactProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [ContactProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BaseTypeProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Group ()
@property int32_t serverId;
@property int32_t version;
@property (retain) NSString* name;
@property (retain) NSString* pimGroupId;
@property int32_t lastSource;
@end

@implementation Group

- (BOOL) hasServerId {
  return !!hasServerId_;
}
- (void) setHasServerId:(BOOL) value {
  hasServerId_ = !!value;
}
@synthesize serverId;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasPimGroupId {
  return !!hasPimGroupId_;
}
- (void) setHasPimGroupId:(BOOL) value {
  hasPimGroupId_ = !!value;
}
@synthesize pimGroupId;
- (BOOL) hasLastSource {
  return !!hasLastSource_;
}
- (void) setHasLastSource:(BOOL) value {
  hasLastSource_ = !!value;
}
@synthesize lastSource;
- (void) dealloc {
  self.name = nil;
  self.pimGroupId = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.serverId = 0;
    self.version = 0;
    self.name = @"";
    self.pimGroupId = @"";
    self.lastSource = 0;
  }
  return self;
}
static Group* defaultGroupInstance = nil;
+ (void) initialize {
  if (self == [Group class]) {
    defaultGroupInstance = [[Group alloc] init];
  }
}
+ (Group*) defaultInstance {
  return defaultGroupInstance;
}
- (Group*) defaultInstance {
  return defaultGroupInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasServerId) {
    [output writeInt32:1 value:self.serverId];
  }
  if (self.hasVersion) {
    [output writeInt32:2 value:self.version];
  }
  if (self.hasName) {
    [output writeString:3 value:self.name];
  }
  if (self.hasPimGroupId) {
    [output writeString:4 value:self.pimGroupId];
  }
  if (self.hasLastSource) {
    [output writeInt32:5 value:self.lastSource];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasServerId) {
    size += computeInt32Size(1, self.serverId);
  }
  if (self.hasVersion) {
    size += computeInt32Size(2, self.version);
  }
  if (self.hasName) {
    size += computeStringSize(3, self.name);
  }
  if (self.hasPimGroupId) {
    size += computeStringSize(4, self.pimGroupId);
  }
  if (self.hasLastSource) {
    size += computeInt32Size(5, self.lastSource);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Group*) parseFromData:(NSData*) data {
  return (Group*)[[[Group builder] mergeFromData:data] build];
}
+ (Group*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Group*)[[[Group builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Group*) parseFromInputStream:(NSInputStream*) input {
  return (Group*)[[[Group builder] mergeFromInputStream:input] build];
}
+ (Group*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Group*)[[[Group builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Group*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Group*)[[[Group builder] mergeFromCodedInputStream:input] build];
}
+ (Group*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Group*)[[[Group builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Group_Builder*) builder {
  return [[[Group_Builder alloc] init] autorelease];
}
+ (Group_Builder*) builderWithPrototype:(Group*) prototype {
  return [[Group builder] mergeFrom:prototype];
}
- (Group_Builder*) builder {
  return [Group builder];
}
@end

@interface Group_Builder()
@property (retain) Group* result;
@end

@implementation Group_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Group alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Group_Builder*) clear {
  self.result = [[[Group alloc] init] autorelease];
  return self;
}
- (Group_Builder*) clone {
  return [Group builderWithPrototype:result];
}
- (Group*) defaultInstance {
  return [Group defaultInstance];
}
- (Group*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Group*) buildPartial {
  Group* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Group_Builder*) mergeFrom:(Group*) other {
  if (other == [Group defaultInstance]) {
    return self;
  }
  if (other.hasServerId) {
    [self setServerId:other.serverId];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasName) {
    [self setName:other.name];
  }
  if (other.hasPimGroupId) {
    [self setPimGroupId:other.pimGroupId];
  }
  if (other.hasLastSource) {
    [self setLastSource:other.lastSource];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Group_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Group_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setServerId:[input readInt32]];
        break;
      }
      case 16: {
        [self setVersion:[input readInt32]];
        break;
      }
      case 26: {
        [self setName:[input readString]];
        break;
      }
      case 34: {
        [self setPimGroupId:[input readString]];
        break;
      }
      case 40: {
        [self setLastSource:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasServerId {
  return result.hasServerId;
}
- (int32_t) serverId {
  return result.serverId;
}
- (Group_Builder*) setServerId:(int32_t) value {
  result.hasServerId = YES;
  result.serverId = value;
  return self;
}
- (Group_Builder*) clearServerId {
  result.hasServerId = NO;
  result.serverId = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (Group_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (Group_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (NSString*) name {
  return result.name;
}
- (Group_Builder*) setName:(NSString*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Group_Builder*) clearName {
  result.hasName = NO;
  result.name = @"";
  return self;
}
- (BOOL) hasPimGroupId {
  return result.hasPimGroupId;
}
- (NSString*) pimGroupId {
  return result.pimGroupId;
}
- (Group_Builder*) setPimGroupId:(NSString*) value {
  result.hasPimGroupId = YES;
  result.pimGroupId = value;
  return self;
}
- (Group_Builder*) clearPimGroupId {
  result.hasPimGroupId = NO;
  result.pimGroupId = @"";
  return self;
}
- (BOOL) hasLastSource {
  return result.hasLastSource;
}
- (int32_t) lastSource {
  return result.lastSource;
}
- (Group_Builder*) setLastSource:(int32_t) value {
  result.hasLastSource = YES;
  result.lastSource = value;
  return self;
}
- (Group_Builder*) clearLastSource {
  result.hasLastSource = NO;
  result.lastSource = 0;
  return self;
}
@end

@interface Contact ()
@property int32_t serverId;
@property int32_t version;
@property BOOL favorite;
@property (retain) Name* name;
@property Gender gender;
@property (retain) Employed* employed;
@property (retain) NSString* birthday;
@property BloodType bloodType;
@property Constellation constellation;
@property (retain) NSString* comment;
@property (retain) NSMutableArray* mutableGroupIdList;
@property (retain) Phone* mobilePhone;
@property (retain) Phone* workMobilePhone;
@property (retain) Phone* telephone;
@property (retain) Phone* workTelephone;
@property (retain) Phone* homeTelephone;
@property (retain) Phone* fax;
@property (retain) Phone* homeFax;
@property (retain) Phone* workFax;
@property (retain) Phone* vpn;
@property (retain) Email* email;
@property (retain) Email* workEmail;
@property (retain) Email* comEmail;
@property (retain) Address* workAddr;
@property (retain) Address* homeAddr;
@property (retain) InstantMessage* qq;
@property (retain) InstantMessage* msn;
@property (retain) Website* personPage;
@property (retain) Website* comPage;
@property (retain) Phone* ePhone;
@property (retain) NSString* pimContactId;
@property int32_t lastSource;
@property (retain) NSString* lunarBirthday;
@end

@implementation Contact

- (BOOL) hasServerId {
  return !!hasServerId_;
}
- (void) setHasServerId:(BOOL) value {
  hasServerId_ = !!value;
}
@synthesize serverId;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (BOOL) hasFavorite {
  return !!hasFavorite_;
}
- (void) setHasFavorite:(BOOL) value {
  hasFavorite_ = !!value;
}
- (BOOL) favorite {
  return !!favorite_;
}
- (void) setFavorite:(BOOL) value {
  favorite_ = !!value;
}
- (BOOL) hasName {
  return !!hasName_;
}
- (void) setHasName:(BOOL) value {
  hasName_ = !!value;
}
@synthesize name;
- (BOOL) hasGender {
  return !!hasGender_;
}
- (void) setHasGender:(BOOL) value {
  hasGender_ = !!value;
}
@synthesize gender;
- (BOOL) hasEmployed {
  return !!hasEmployed_;
}
- (void) setHasEmployed:(BOOL) value {
  hasEmployed_ = !!value;
}
@synthesize employed;
- (BOOL) hasBirthday {
  return !!hasBirthday_;
}
- (void) setHasBirthday:(BOOL) value {
  hasBirthday_ = !!value;
}
@synthesize birthday;
- (BOOL) hasBloodType {
  return !!hasBloodType_;
}
- (void) setHasBloodType:(BOOL) value {
  hasBloodType_ = !!value;
}
@synthesize bloodType;
- (BOOL) hasConstellation {
  return !!hasConstellation_;
}
- (void) setHasConstellation:(BOOL) value {
  hasConstellation_ = !!value;
}
@synthesize constellation;
- (BOOL) hasComment {
  return !!hasComment_;
}
- (void) setHasComment:(BOOL) value {
  hasComment_ = !!value;
}
@synthesize comment;
@synthesize mutableGroupIdList;
- (BOOL) hasMobilePhone {
  return !!hasMobilePhone_;
}
- (void) setHasMobilePhone:(BOOL) value {
  hasMobilePhone_ = !!value;
}
@synthesize mobilePhone;
- (BOOL) hasWorkMobilePhone {
  return !!hasWorkMobilePhone_;
}
- (void) setHasWorkMobilePhone:(BOOL) value {
  hasWorkMobilePhone_ = !!value;
}
@synthesize workMobilePhone;
- (BOOL) hasTelephone {
  return !!hasTelephone_;
}
- (void) setHasTelephone:(BOOL) value {
  hasTelephone_ = !!value;
}
@synthesize telephone;
- (BOOL) hasWorkTelephone {
  return !!hasWorkTelephone_;
}
- (void) setHasWorkTelephone:(BOOL) value {
  hasWorkTelephone_ = !!value;
}
@synthesize workTelephone;
- (BOOL) hasHomeTelephone {
  return !!hasHomeTelephone_;
}
- (void) setHasHomeTelephone:(BOOL) value {
  hasHomeTelephone_ = !!value;
}
@synthesize homeTelephone;
- (BOOL) hasFax {
  return !!hasFax_;
}
- (void) setHasFax:(BOOL) value {
  hasFax_ = !!value;
}
@synthesize fax;
- (BOOL) hasHomeFax {
  return !!hasHomeFax_;
}
- (void) setHasHomeFax:(BOOL) value {
  hasHomeFax_ = !!value;
}
@synthesize homeFax;
- (BOOL) hasWorkFax {
  return !!hasWorkFax_;
}
- (void) setHasWorkFax:(BOOL) value {
  hasWorkFax_ = !!value;
}
@synthesize workFax;
- (BOOL) hasVpn {
  return !!hasVpn_;
}
- (void) setHasVpn:(BOOL) value {
  hasVpn_ = !!value;
}
@synthesize vpn;
- (BOOL) hasEmail {
  return !!hasEmail_;
}
- (void) setHasEmail:(BOOL) value {
  hasEmail_ = !!value;
}
@synthesize email;
- (BOOL) hasWorkEmail {
  return !!hasWorkEmail_;
}
- (void) setHasWorkEmail:(BOOL) value {
  hasWorkEmail_ = !!value;
}
@synthesize workEmail;
- (BOOL) hasComEmail {
  return !!hasComEmail_;
}
- (void) setHasComEmail:(BOOL) value {
  hasComEmail_ = !!value;
}
@synthesize comEmail;
- (BOOL) hasWorkAddr {
  return !!hasWorkAddr_;
}
- (void) setHasWorkAddr:(BOOL) value {
  hasWorkAddr_ = !!value;
}
@synthesize workAddr;
- (BOOL) hasHomeAddr {
  return !!hasHomeAddr_;
}
- (void) setHasHomeAddr:(BOOL) value {
  hasHomeAddr_ = !!value;
}
@synthesize homeAddr;
- (BOOL) hasQq {
  return !!hasQq_;
}
- (void) setHasQq:(BOOL) value {
  hasQq_ = !!value;
}
@synthesize qq;
- (BOOL) hasMsn {
  return !!hasMsn_;
}
- (void) setHasMsn:(BOOL) value {
  hasMsn_ = !!value;
}
@synthesize msn;
- (BOOL) hasPersonPage {
  return !!hasPersonPage_;
}
- (void) setHasPersonPage:(BOOL) value {
  hasPersonPage_ = !!value;
}
@synthesize personPage;
- (BOOL) hasComPage {
  return !!hasComPage_;
}
- (void) setHasComPage:(BOOL) value {
  hasComPage_ = !!value;
}
@synthesize comPage;
- (BOOL) hasEPhone {
  return !!hasEPhone_;
}
- (void) setHasEPhone:(BOOL) value {
  hasEPhone_ = !!value;
}
@synthesize ePhone;
- (BOOL) hasPimContactId {
  return !!hasPimContactId_;
}
- (void) setHasPimContactId:(BOOL) value {
  hasPimContactId_ = !!value;
}
@synthesize pimContactId;
- (BOOL) hasLastSource {
  return !!hasLastSource_;
}
- (void) setHasLastSource:(BOOL) value {
  hasLastSource_ = !!value;
}
@synthesize lastSource;
- (BOOL) hasLunarBirthday {
  return !!hasLunarBirthday_;
}
- (void) setHasLunarBirthday:(BOOL) value {
  hasLunarBirthday_ = !!value;
}
@synthesize lunarBirthday;
- (void) dealloc {
  self.name = nil;
  self.employed = nil;
  self.birthday = nil;
  self.comment = nil;
  self.mutableGroupIdList = nil;
  self.mobilePhone = nil;
  self.workMobilePhone = nil;
  self.telephone = nil;
  self.workTelephone = nil;
  self.homeTelephone = nil;
  self.fax = nil;
  self.homeFax = nil;
  self.workFax = nil;
  self.vpn = nil;
  self.email = nil;
  self.workEmail = nil;
  self.comEmail = nil;
  self.workAddr = nil;
  self.homeAddr = nil;
  self.qq = nil;
  self.msn = nil;
  self.personPage = nil;
  self.comPage = nil;
  self.ePhone = nil;
  self.pimContactId = nil;
  self.lunarBirthday = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.serverId = 0;
    self.version = 0;
    self.favorite = NO;
    self.name = [Name defaultInstance];
    self.gender = GenderUnknownGender;
    self.employed = [Employed defaultInstance];
    self.birthday = @"";
    self.bloodType = BloodTypeUnknownBloodType;
    self.constellation = ConstellationUnknownConstellation;
    self.comment = @"";
    self.mobilePhone = [Phone defaultInstance];
    self.workMobilePhone = [Phone defaultInstance];
    self.telephone = [Phone defaultInstance];
    self.workTelephone = [Phone defaultInstance];
    self.homeTelephone = [Phone defaultInstance];
    self.fax = [Phone defaultInstance];
    self.homeFax = [Phone defaultInstance];
    self.workFax = [Phone defaultInstance];
    self.vpn = [Phone defaultInstance];
    self.email = [Email defaultInstance];
    self.workEmail = [Email defaultInstance];
    self.comEmail = [Email defaultInstance];
    self.workAddr = [Address defaultInstance];
    self.homeAddr = [Address defaultInstance];
    self.qq = [InstantMessage defaultInstance];
    self.msn = [InstantMessage defaultInstance];
    self.personPage = [Website defaultInstance];
    self.comPage = [Website defaultInstance];
    self.ePhone = [Phone defaultInstance];
    self.pimContactId = @"";
    self.lastSource = 0;
    self.lunarBirthday = @"";
  }
  return self;
}
static Contact* defaultContactInstance = nil;
+ (void) initialize {
  if (self == [Contact class]) {
    defaultContactInstance = [[Contact alloc] init];
  }
}
+ (Contact*) defaultInstance {
  return defaultContactInstance;
}
- (Contact*) defaultInstance {
  return defaultContactInstance;
}
- (NSArray*) groupIdList {
  return mutableGroupIdList;
}
- (int32_t) groupIdAtIndex:(int32_t) index {
  id value = [mutableGroupIdList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasServerId) {
    [output writeInt32:1 value:self.serverId];
  }
  if (self.hasVersion) {
    [output writeInt32:2 value:self.version];
  }
  if (self.hasFavorite) {
    [output writeBool:3 value:self.favorite];
  }
  if (self.hasName) {
    [output writeMessage:5 value:self.name];
  }
  if (self.hasGender) {
    [output writeEnum:6 value:self.gender];
  }
  if (self.hasEmployed) {
    [output writeMessage:7 value:self.employed];
  }
  if (self.hasBirthday) {
    [output writeString:8 value:self.birthday];
  }
  if (self.hasBloodType) {
    [output writeEnum:9 value:self.bloodType];
  }
  if (self.hasConstellation) {
    [output writeEnum:10 value:self.constellation];
  }
  if (self.hasComment) {
    [output writeString:11 value:self.comment];
  }
  if (self.mutableGroupIdList.count > 0) {
    [output writeRawVarint32:98];
    [output writeRawVarint32:groupIdMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableGroupIdList) {
    [output writeInt32NoTag:[value intValue]];
  }
  if (self.hasMobilePhone) {
    [output writeMessage:13 value:self.mobilePhone];
  }
  if (self.hasWorkMobilePhone) {
    [output writeMessage:14 value:self.workMobilePhone];
  }
  if (self.hasTelephone) {
    [output writeMessage:15 value:self.telephone];
  }
  if (self.hasWorkTelephone) {
    [output writeMessage:16 value:self.workTelephone];
  }
  if (self.hasHomeTelephone) {
    [output writeMessage:17 value:self.homeTelephone];
  }
  if (self.hasFax) {
    [output writeMessage:18 value:self.fax];
  }
  if (self.hasHomeFax) {
    [output writeMessage:19 value:self.homeFax];
  }
  if (self.hasWorkFax) {
    [output writeMessage:20 value:self.workFax];
  }
  if (self.hasVpn) {
    [output writeMessage:21 value:self.vpn];
  }
  if (self.hasEmail) {
    [output writeMessage:22 value:self.email];
  }
  if (self.hasWorkEmail) {
    [output writeMessage:23 value:self.workEmail];
  }
  if (self.hasComEmail) {
    [output writeMessage:24 value:self.comEmail];
  }
  if (self.hasWorkAddr) {
    [output writeMessage:25 value:self.workAddr];
  }
  if (self.hasHomeAddr) {
    [output writeMessage:26 value:self.homeAddr];
  }
  if (self.hasQq) {
    [output writeMessage:27 value:self.qq];
  }
  if (self.hasMsn) {
    [output writeMessage:28 value:self.msn];
  }
  if (self.hasPersonPage) {
    [output writeMessage:29 value:self.personPage];
  }
  if (self.hasComPage) {
    [output writeMessage:30 value:self.comPage];
  }
  if (self.hasEPhone) {
    [output writeMessage:31 value:self.ePhone];
  }
  if (self.hasPimContactId) {
    [output writeString:32 value:self.pimContactId];
  }
  if (self.hasLastSource) {
    [output writeInt32:33 value:self.lastSource];
  }
  if (self.hasLunarBirthday) {
    [output writeString:34 value:self.lunarBirthday];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasServerId) {
    size += computeInt32Size(1, self.serverId);
  }
  if (self.hasVersion) {
    size += computeInt32Size(2, self.version);
  }
  if (self.hasFavorite) {
    size += computeBoolSize(3, self.favorite);
  }
  if (self.hasName) {
    size += computeMessageSize(5, self.name);
  }
  if (self.hasGender) {
    size += computeEnumSize(6, self.gender);
  }
  if (self.hasEmployed) {
    size += computeMessageSize(7, self.employed);
  }
  if (self.hasBirthday) {
    size += computeStringSize(8, self.birthday);
  }
  if (self.hasBloodType) {
    size += computeEnumSize(9, self.bloodType);
  }
  if (self.hasConstellation) {
    size += computeEnumSize(10, self.constellation);
  }
  if (self.hasComment) {
    size += computeStringSize(11, self.comment);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableGroupIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableGroupIdList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    groupIdMemoizedSerializedSize = dataSize;
  }
  if (self.hasMobilePhone) {
    size += computeMessageSize(13, self.mobilePhone);
  }
  if (self.hasWorkMobilePhone) {
    size += computeMessageSize(14, self.workMobilePhone);
  }
  if (self.hasTelephone) {
    size += computeMessageSize(15, self.telephone);
  }
  if (self.hasWorkTelephone) {
    size += computeMessageSize(16, self.workTelephone);
  }
  if (self.hasHomeTelephone) {
    size += computeMessageSize(17, self.homeTelephone);
  }
  if (self.hasFax) {
    size += computeMessageSize(18, self.fax);
  }
  if (self.hasHomeFax) {
    size += computeMessageSize(19, self.homeFax);
  }
  if (self.hasWorkFax) {
    size += computeMessageSize(20, self.workFax);
  }
  if (self.hasVpn) {
    size += computeMessageSize(21, self.vpn);
  }
  if (self.hasEmail) {
    size += computeMessageSize(22, self.email);
  }
  if (self.hasWorkEmail) {
    size += computeMessageSize(23, self.workEmail);
  }
  if (self.hasComEmail) {
    size += computeMessageSize(24, self.comEmail);
  }
  if (self.hasWorkAddr) {
    size += computeMessageSize(25, self.workAddr);
  }
  if (self.hasHomeAddr) {
    size += computeMessageSize(26, self.homeAddr);
  }
  if (self.hasQq) {
    size += computeMessageSize(27, self.qq);
  }
  if (self.hasMsn) {
    size += computeMessageSize(28, self.msn);
  }
  if (self.hasPersonPage) {
    size += computeMessageSize(29, self.personPage);
  }
  if (self.hasComPage) {
    size += computeMessageSize(30, self.comPage);
  }
  if (self.hasEPhone) {
    size += computeMessageSize(31, self.ePhone);
  }
  if (self.hasPimContactId) {
    size += computeStringSize(32, self.pimContactId);
  }
  if (self.hasLastSource) {
    size += computeInt32Size(33, self.lastSource);
  }
  if (self.hasLunarBirthday) {
    size += computeStringSize(34, self.lunarBirthday);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Contact*) parseFromData:(NSData*) data {
  return (Contact*)[[[Contact builder] mergeFromData:data] build];
}
+ (Contact*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Contact*) parseFromInputStream:(NSInputStream*) input {
  return (Contact*)[[[Contact builder] mergeFromInputStream:input] build];
}
+ (Contact*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Contact*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Contact*)[[[Contact builder] mergeFromCodedInputStream:input] build];
}
+ (Contact*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Contact*)[[[Contact builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Contact_Builder*) builder {
  return [[[Contact_Builder alloc] init] autorelease];
}
+ (Contact_Builder*) builderWithPrototype:(Contact*) prototype {
  return [[Contact builder] mergeFrom:prototype];
}
- (Contact_Builder*) builder {
  return [Contact builder];
}
@end

@interface Contact_Builder()
@property (retain) Contact* result;
@end

@implementation Contact_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Contact alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Contact_Builder*) clear {
  self.result = [[[Contact alloc] init] autorelease];
  return self;
}
- (Contact_Builder*) clone {
  return [Contact builderWithPrototype:result];
}
- (Contact*) defaultInstance {
  return [Contact defaultInstance];
}
- (Contact*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Contact*) buildPartial {
  Contact* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Contact_Builder*) mergeFrom:(Contact*) other {
  if (other == [Contact defaultInstance]) {
    return self;
  }
  if (other.hasServerId) {
    [self setServerId:other.serverId];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  if (other.hasFavorite) {
    [self setFavorite:other.favorite];
  }
  if (other.hasName) {
    [self mergeName:other.name];
  }
  if (other.hasGender) {
    [self setGender:other.gender];
  }
  if (other.hasEmployed) {
    [self mergeEmployed:other.employed];
  }
  if (other.hasBirthday) {
    [self setBirthday:other.birthday];
  }
  if (other.hasBloodType) {
    [self setBloodType:other.bloodType];
  }
  if (other.hasConstellation) {
    [self setConstellation:other.constellation];
  }
  if (other.hasComment) {
    [self setComment:other.comment];
  }
  if (other.mutableGroupIdList.count > 0) {
    if (result.mutableGroupIdList == nil) {
      result.mutableGroupIdList = [NSMutableArray array];
    }
    [result.mutableGroupIdList addObjectsFromArray:other.mutableGroupIdList];
  }
  if (other.hasMobilePhone) {
    [self mergeMobilePhone:other.mobilePhone];
  }
  if (other.hasWorkMobilePhone) {
    [self mergeWorkMobilePhone:other.workMobilePhone];
  }
  if (other.hasTelephone) {
    [self mergeTelephone:other.telephone];
  }
  if (other.hasWorkTelephone) {
    [self mergeWorkTelephone:other.workTelephone];
  }
  if (other.hasHomeTelephone) {
    [self mergeHomeTelephone:other.homeTelephone];
  }
  if (other.hasFax) {
    [self mergeFax:other.fax];
  }
  if (other.hasHomeFax) {
    [self mergeHomeFax:other.homeFax];
  }
  if (other.hasWorkFax) {
    [self mergeWorkFax:other.workFax];
  }
  if (other.hasVpn) {
    [self mergeVpn:other.vpn];
  }
  if (other.hasEmail) {
    [self mergeEmail:other.email];
  }
  if (other.hasWorkEmail) {
    [self mergeWorkEmail:other.workEmail];
  }
  if (other.hasComEmail) {
    [self mergeComEmail:other.comEmail];
  }
  if (other.hasWorkAddr) {
    [self mergeWorkAddr:other.workAddr];
  }
  if (other.hasHomeAddr) {
    [self mergeHomeAddr:other.homeAddr];
  }
  if (other.hasQq) {
    [self mergeQq:other.qq];
  }
  if (other.hasMsn) {
    [self mergeMsn:other.msn];
  }
  if (other.hasPersonPage) {
    [self mergePersonPage:other.personPage];
  }
  if (other.hasComPage) {
    [self mergeComPage:other.comPage];
  }
  if (other.hasEPhone) {
    [self mergeEPhone:other.ePhone];
  }
  if (other.hasPimContactId) {
    [self setPimContactId:other.pimContactId];
  }
  if (other.hasLastSource) {
    [self setLastSource:other.lastSource];
  }
  if (other.hasLunarBirthday) {
    [self setLunarBirthday:other.lunarBirthday];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Contact_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Contact_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setServerId:[input readInt32]];
        break;
      }
      case 16: {
        [self setVersion:[input readInt32]];
        break;
      }
      case 24: {
        [self setFavorite:[input readBool]];
        break;
      }
      case 42: {
        Name_Builder* subBuilder = [Name builder];
        if (self.hasName) {
          [subBuilder mergeFrom:self.name];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setName:[subBuilder buildPartial]];
        break;
      }
      case 48: {
        int32_t value = [input readEnum];
        if (GenderIsValidValue(value)) {
          [self setGender:value];
        } else {
          [unknownFields mergeVarintField:6 value:value];
        }
        break;
      }
      case 58: {
        Employed_Builder* subBuilder = [Employed builder];
        if (self.hasEmployed) {
          [subBuilder mergeFrom:self.employed];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEmployed:[subBuilder buildPartial]];
        break;
      }
      case 66: {
        [self setBirthday:[input readString]];
        break;
      }
      case 72: {
        int32_t value = [input readEnum];
        if (BloodTypeIsValidValue(value)) {
          [self setBloodType:value];
        } else {
          [unknownFields mergeVarintField:9 value:value];
        }
        break;
      }
      case 80: {
        int32_t value = [input readEnum];
        if (ConstellationIsValidValue(value)) {
          [self setConstellation:value];
        } else {
          [unknownFields mergeVarintField:10 value:value];
        }
        break;
      }
      case 90: {
        [self setComment:[input readString]];
        break;
      }
      case 98: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addGroupId:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 106: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasMobilePhone) {
          [subBuilder mergeFrom:self.mobilePhone];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMobilePhone:[subBuilder buildPartial]];
        break;
      }
      case 114: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasWorkMobilePhone) {
          [subBuilder mergeFrom:self.workMobilePhone];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setWorkMobilePhone:[subBuilder buildPartial]];
        break;
      }
      case 122: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasTelephone) {
          [subBuilder mergeFrom:self.telephone];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setTelephone:[subBuilder buildPartial]];
        break;
      }
      case 130: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasWorkTelephone) {
          [subBuilder mergeFrom:self.workTelephone];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setWorkTelephone:[subBuilder buildPartial]];
        break;
      }
      case 138: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasHomeTelephone) {
          [subBuilder mergeFrom:self.homeTelephone];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setHomeTelephone:[subBuilder buildPartial]];
        break;
      }
      case 146: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasFax) {
          [subBuilder mergeFrom:self.fax];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setFax:[subBuilder buildPartial]];
        break;
      }
      case 154: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasHomeFax) {
          [subBuilder mergeFrom:self.homeFax];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setHomeFax:[subBuilder buildPartial]];
        break;
      }
      case 162: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasWorkFax) {
          [subBuilder mergeFrom:self.workFax];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setWorkFax:[subBuilder buildPartial]];
        break;
      }
      case 170: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasVpn) {
          [subBuilder mergeFrom:self.vpn];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setVpn:[subBuilder buildPartial]];
        break;
      }
      case 178: {
        Email_Builder* subBuilder = [Email builder];
        if (self.hasEmail) {
          [subBuilder mergeFrom:self.email];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEmail:[subBuilder buildPartial]];
        break;
      }
      case 186: {
        Email_Builder* subBuilder = [Email builder];
        if (self.hasWorkEmail) {
          [subBuilder mergeFrom:self.workEmail];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setWorkEmail:[subBuilder buildPartial]];
        break;
      }
      case 194: {
        Email_Builder* subBuilder = [Email builder];
        if (self.hasComEmail) {
          [subBuilder mergeFrom:self.comEmail];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setComEmail:[subBuilder buildPartial]];
        break;
      }
      case 202: {
        Address_Builder* subBuilder = [Address builder];
        if (self.hasWorkAddr) {
          [subBuilder mergeFrom:self.workAddr];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setWorkAddr:[subBuilder buildPartial]];
        break;
      }
      case 210: {
        Address_Builder* subBuilder = [Address builder];
        if (self.hasHomeAddr) {
          [subBuilder mergeFrom:self.homeAddr];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setHomeAddr:[subBuilder buildPartial]];
        break;
      }
      case 218: {
        InstantMessage_Builder* subBuilder = [InstantMessage builder];
        if (self.hasQq) {
          [subBuilder mergeFrom:self.qq];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setQq:[subBuilder buildPartial]];
        break;
      }
      case 226: {
        InstantMessage_Builder* subBuilder = [InstantMessage builder];
        if (self.hasMsn) {
          [subBuilder mergeFrom:self.msn];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setMsn:[subBuilder buildPartial]];
        break;
      }
      case 234: {
        Website_Builder* subBuilder = [Website builder];
        if (self.hasPersonPage) {
          [subBuilder mergeFrom:self.personPage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPersonPage:[subBuilder buildPartial]];
        break;
      }
      case 242: {
        Website_Builder* subBuilder = [Website builder];
        if (self.hasComPage) {
          [subBuilder mergeFrom:self.comPage];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setComPage:[subBuilder buildPartial]];
        break;
      }
      case 250: {
        Phone_Builder* subBuilder = [Phone builder];
        if (self.hasEPhone) {
          [subBuilder mergeFrom:self.ePhone];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setEPhone:[subBuilder buildPartial]];
        break;
      }
      case 258: {
        [self setPimContactId:[input readString]];
        break;
      }
      case 264: {
        [self setLastSource:[input readInt32]];
        break;
      }
      case 274: {
        [self setLunarBirthday:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasServerId {
  return result.hasServerId;
}
- (int32_t) serverId {
  return result.serverId;
}
- (Contact_Builder*) setServerId:(int32_t) value {
  result.hasServerId = YES;
  result.serverId = value;
  return self;
}
- (Contact_Builder*) clearServerId {
  result.hasServerId = NO;
  result.serverId = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (Contact_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (Contact_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
- (BOOL) hasFavorite {
  return result.hasFavorite;
}
- (BOOL) favorite {
  return result.favorite;
}
- (Contact_Builder*) setFavorite:(BOOL) value {
  result.hasFavorite = YES;
  result.favorite = value;
  return self;
}
- (Contact_Builder*) clearFavorite {
  result.hasFavorite = NO;
  result.favorite = NO;
  return self;
}
- (BOOL) hasName {
  return result.hasName;
}
- (Name*) name {
  return result.name;
}
- (Contact_Builder*) setName:(Name*) value {
  result.hasName = YES;
  result.name = value;
  return self;
}
- (Contact_Builder*) setNameBuilder:(Name_Builder*) builderForValue {
  return [self setName:[builderForValue build]];
}
- (Contact_Builder*) mergeName:(Name*) value {
  if (result.hasName &&
      result.name != [Name defaultInstance]) {
    result.name =
      [[[Name builderWithPrototype:result.name] mergeFrom:value] buildPartial];
  } else {
    result.name = value;
  }
  result.hasName = YES;
  return self;
}
- (Contact_Builder*) clearName {
  result.hasName = NO;
  result.name = [Name defaultInstance];
  return self;
}
- (BOOL) hasGender {
  return result.hasGender;
}
- (Gender) gender {
  return result.gender;
}
- (Contact_Builder*) setGender:(Gender) value {
  result.hasGender = YES;
  result.gender = value;
  return self;
}
- (Contact_Builder*) clearGender {
  result.hasGender = NO;
  result.gender = GenderUnknownGender;
  return self;
}
- (BOOL) hasEmployed {
  return result.hasEmployed;
}
- (Employed*) employed {
  return result.employed;
}
- (Contact_Builder*) setEmployed:(Employed*) value {
  result.hasEmployed = YES;
  result.employed = value;
  return self;
}
- (Contact_Builder*) setEmployedBuilder:(Employed_Builder*) builderForValue {
  return [self setEmployed:[builderForValue build]];
}
- (Contact_Builder*) mergeEmployed:(Employed*) value {
  if (result.hasEmployed &&
      result.employed != [Employed defaultInstance]) {
    result.employed =
      [[[Employed builderWithPrototype:result.employed] mergeFrom:value] buildPartial];
  } else {
    result.employed = value;
  }
  result.hasEmployed = YES;
  return self;
}
- (Contact_Builder*) clearEmployed {
  result.hasEmployed = NO;
  result.employed = [Employed defaultInstance];
  return self;
}
- (BOOL) hasBirthday {
  return result.hasBirthday;
}
- (NSString*) birthday {
  return result.birthday;
}
- (Contact_Builder*) setBirthday:(NSString*) value {
  result.hasBirthday = YES;
  result.birthday = value;
  return self;
}
- (Contact_Builder*) clearBirthday {
  result.hasBirthday = NO;
  result.birthday = @"";
  return self;
}
- (BOOL) hasBloodType {
  return result.hasBloodType;
}
- (BloodType) bloodType {
  return result.bloodType;
}
- (Contact_Builder*) setBloodType:(BloodType) value {
  result.hasBloodType = YES;
  result.bloodType = value;
  return self;
}
- (Contact_Builder*) clearBloodType {
  result.hasBloodType = NO;
  result.bloodType = BloodTypeUnknownBloodType;
  return self;
}
- (BOOL) hasConstellation {
  return result.hasConstellation;
}
- (Constellation) constellation {
  return result.constellation;
}
- (Contact_Builder*) setConstellation:(Constellation) value {
  result.hasConstellation = YES;
  result.constellation = value;
  return self;
}
- (Contact_Builder*) clearConstellation {
  result.hasConstellation = NO;
  result.constellation = ConstellationUnknownConstellation;
  return self;
}
- (BOOL) hasComment {
  return result.hasComment;
}
- (NSString*) comment {
  return result.comment;
}
- (Contact_Builder*) setComment:(NSString*) value {
  result.hasComment = YES;
  result.comment = value;
  return self;
}
- (Contact_Builder*) clearComment {
  result.hasComment = NO;
  result.comment = @"";
  return self;
}
- (NSArray*) groupIdList {
  if (result.mutableGroupIdList == nil) {
    return [NSArray array];
  }
  return result.mutableGroupIdList;
}
- (int32_t) groupIdAtIndex:(int32_t) index {
  return [result groupIdAtIndex:index];
}
- (Contact_Builder*) replaceGroupIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableGroupIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (Contact_Builder*) addGroupId:(int32_t) value {
  if (result.mutableGroupIdList == nil) {
    result.mutableGroupIdList = [NSMutableArray array];
  }
  [result.mutableGroupIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (Contact_Builder*) addAllGroupId:(NSArray*) values {
  if (result.mutableGroupIdList == nil) {
    result.mutableGroupIdList = [NSMutableArray array];
  }
  [result.mutableGroupIdList addObjectsFromArray:values];
  return self;
}
- (Contact_Builder*) clearGroupIdList {
  result.mutableGroupIdList = nil;
  return self;
}
- (BOOL) hasMobilePhone {
  return result.hasMobilePhone;
}
- (Phone*) mobilePhone {
  return result.mobilePhone;
}
- (Contact_Builder*) setMobilePhone:(Phone*) value {
  result.hasMobilePhone = YES;
  result.mobilePhone = value;
  return self;
}
- (Contact_Builder*) setMobilePhoneBuilder:(Phone_Builder*) builderForValue {
  return [self setMobilePhone:[builderForValue build]];
}
- (Contact_Builder*) mergeMobilePhone:(Phone*) value {
  if (result.hasMobilePhone &&
      result.mobilePhone != [Phone defaultInstance]) {
    result.mobilePhone =
      [[[Phone builderWithPrototype:result.mobilePhone] mergeFrom:value] buildPartial];
  } else {
    result.mobilePhone = value;
  }
  result.hasMobilePhone = YES;
  return self;
}
- (Contact_Builder*) clearMobilePhone {
  result.hasMobilePhone = NO;
  result.mobilePhone = [Phone defaultInstance];
  return self;
}
- (BOOL) hasWorkMobilePhone {
  return result.hasWorkMobilePhone;
}
- (Phone*) workMobilePhone {
  return result.workMobilePhone;
}
- (Contact_Builder*) setWorkMobilePhone:(Phone*) value {
  result.hasWorkMobilePhone = YES;
  result.workMobilePhone = value;
  return self;
}
- (Contact_Builder*) setWorkMobilePhoneBuilder:(Phone_Builder*) builderForValue {
  return [self setWorkMobilePhone:[builderForValue build]];
}
- (Contact_Builder*) mergeWorkMobilePhone:(Phone*) value {
  if (result.hasWorkMobilePhone &&
      result.workMobilePhone != [Phone defaultInstance]) {
    result.workMobilePhone =
      [[[Phone builderWithPrototype:result.workMobilePhone] mergeFrom:value] buildPartial];
  } else {
    result.workMobilePhone = value;
  }
  result.hasWorkMobilePhone = YES;
  return self;
}
- (Contact_Builder*) clearWorkMobilePhone {
  result.hasWorkMobilePhone = NO;
  result.workMobilePhone = [Phone defaultInstance];
  return self;
}
- (BOOL) hasTelephone {
  return result.hasTelephone;
}
- (Phone*) telephone {
  return result.telephone;
}
- (Contact_Builder*) setTelephone:(Phone*) value {
  result.hasTelephone = YES;
  result.telephone = value;
  return self;
}
- (Contact_Builder*) setTelephoneBuilder:(Phone_Builder*) builderForValue {
  return [self setTelephone:[builderForValue build]];
}
- (Contact_Builder*) mergeTelephone:(Phone*) value {
  if (result.hasTelephone &&
      result.telephone != [Phone defaultInstance]) {
    result.telephone =
      [[[Phone builderWithPrototype:result.telephone] mergeFrom:value] buildPartial];
  } else {
    result.telephone = value;
  }
  result.hasTelephone = YES;
  return self;
}
- (Contact_Builder*) clearTelephone {
  result.hasTelephone = NO;
  result.telephone = [Phone defaultInstance];
  return self;
}
- (BOOL) hasWorkTelephone {
  return result.hasWorkTelephone;
}
- (Phone*) workTelephone {
  return result.workTelephone;
}
- (Contact_Builder*) setWorkTelephone:(Phone*) value {
  result.hasWorkTelephone = YES;
  result.workTelephone = value;
  return self;
}
- (Contact_Builder*) setWorkTelephoneBuilder:(Phone_Builder*) builderForValue {
  return [self setWorkTelephone:[builderForValue build]];
}
- (Contact_Builder*) mergeWorkTelephone:(Phone*) value {
  if (result.hasWorkTelephone &&
      result.workTelephone != [Phone defaultInstance]) {
    result.workTelephone =
      [[[Phone builderWithPrototype:result.workTelephone] mergeFrom:value] buildPartial];
  } else {
    result.workTelephone = value;
  }
  result.hasWorkTelephone = YES;
  return self;
}
- (Contact_Builder*) clearWorkTelephone {
  result.hasWorkTelephone = NO;
  result.workTelephone = [Phone defaultInstance];
  return self;
}
- (BOOL) hasHomeTelephone {
  return result.hasHomeTelephone;
}
- (Phone*) homeTelephone {
  return result.homeTelephone;
}
- (Contact_Builder*) setHomeTelephone:(Phone*) value {
  result.hasHomeTelephone = YES;
  result.homeTelephone = value;
  return self;
}
- (Contact_Builder*) setHomeTelephoneBuilder:(Phone_Builder*) builderForValue {
  return [self setHomeTelephone:[builderForValue build]];
}
- (Contact_Builder*) mergeHomeTelephone:(Phone*) value {
  if (result.hasHomeTelephone &&
      result.homeTelephone != [Phone defaultInstance]) {
    result.homeTelephone =
      [[[Phone builderWithPrototype:result.homeTelephone] mergeFrom:value] buildPartial];
  } else {
    result.homeTelephone = value;
  }
  result.hasHomeTelephone = YES;
  return self;
}
- (Contact_Builder*) clearHomeTelephone {
  result.hasHomeTelephone = NO;
  result.homeTelephone = [Phone defaultInstance];
  return self;
}
- (BOOL) hasFax {
  return result.hasFax;
}
- (Phone*) fax {
  return result.fax;
}
- (Contact_Builder*) setFax:(Phone*) value {
  result.hasFax = YES;
  result.fax = value;
  return self;
}
- (Contact_Builder*) setFaxBuilder:(Phone_Builder*) builderForValue {
  return [self setFax:[builderForValue build]];
}
- (Contact_Builder*) mergeFax:(Phone*) value {
  if (result.hasFax &&
      result.fax != [Phone defaultInstance]) {
    result.fax =
      [[[Phone builderWithPrototype:result.fax] mergeFrom:value] buildPartial];
  } else {
    result.fax = value;
  }
  result.hasFax = YES;
  return self;
}
- (Contact_Builder*) clearFax {
  result.hasFax = NO;
  result.fax = [Phone defaultInstance];
  return self;
}
- (BOOL) hasHomeFax {
  return result.hasHomeFax;
}
- (Phone*) homeFax {
  return result.homeFax;
}
- (Contact_Builder*) setHomeFax:(Phone*) value {
  result.hasHomeFax = YES;
  result.homeFax = value;
  return self;
}
- (Contact_Builder*) setHomeFaxBuilder:(Phone_Builder*) builderForValue {
  return [self setHomeFax:[builderForValue build]];
}
- (Contact_Builder*) mergeHomeFax:(Phone*) value {
  if (result.hasHomeFax &&
      result.homeFax != [Phone defaultInstance]) {
    result.homeFax =
      [[[Phone builderWithPrototype:result.homeFax] mergeFrom:value] buildPartial];
  } else {
    result.homeFax = value;
  }
  result.hasHomeFax = YES;
  return self;
}
- (Contact_Builder*) clearHomeFax {
  result.hasHomeFax = NO;
  result.homeFax = [Phone defaultInstance];
  return self;
}
- (BOOL) hasWorkFax {
  return result.hasWorkFax;
}
- (Phone*) workFax {
  return result.workFax;
}
- (Contact_Builder*) setWorkFax:(Phone*) value {
  result.hasWorkFax = YES;
  result.workFax = value;
  return self;
}
- (Contact_Builder*) setWorkFaxBuilder:(Phone_Builder*) builderForValue {
  return [self setWorkFax:[builderForValue build]];
}
- (Contact_Builder*) mergeWorkFax:(Phone*) value {
  if (result.hasWorkFax &&
      result.workFax != [Phone defaultInstance]) {
    result.workFax =
      [[[Phone builderWithPrototype:result.workFax] mergeFrom:value] buildPartial];
  } else {
    result.workFax = value;
  }
  result.hasWorkFax = YES;
  return self;
}
- (Contact_Builder*) clearWorkFax {
  result.hasWorkFax = NO;
  result.workFax = [Phone defaultInstance];
  return self;
}
- (BOOL) hasVpn {
  return result.hasVpn;
}
- (Phone*) vpn {
  return result.vpn;
}
- (Contact_Builder*) setVpn:(Phone*) value {
  result.hasVpn = YES;
  result.vpn = value;
  return self;
}
- (Contact_Builder*) setVpnBuilder:(Phone_Builder*) builderForValue {
  return [self setVpn:[builderForValue build]];
}
- (Contact_Builder*) mergeVpn:(Phone*) value {
  if (result.hasVpn &&
      result.vpn != [Phone defaultInstance]) {
    result.vpn =
      [[[Phone builderWithPrototype:result.vpn] mergeFrom:value] buildPartial];
  } else {
    result.vpn = value;
  }
  result.hasVpn = YES;
  return self;
}
- (Contact_Builder*) clearVpn {
  result.hasVpn = NO;
  result.vpn = [Phone defaultInstance];
  return self;
}
- (BOOL) hasEmail {
  return result.hasEmail;
}
- (Email*) email {
  return result.email;
}
- (Contact_Builder*) setEmail:(Email*) value {
  result.hasEmail = YES;
  result.email = value;
  return self;
}
- (Contact_Builder*) setEmailBuilder:(Email_Builder*) builderForValue {
  return [self setEmail:[builderForValue build]];
}
- (Contact_Builder*) mergeEmail:(Email*) value {
  if (result.hasEmail &&
      result.email != [Email defaultInstance]) {
    result.email =
      [[[Email builderWithPrototype:result.email] mergeFrom:value] buildPartial];
  } else {
    result.email = value;
  }
  result.hasEmail = YES;
  return self;
}
- (Contact_Builder*) clearEmail {
  result.hasEmail = NO;
  result.email = [Email defaultInstance];
  return self;
}
- (BOOL) hasWorkEmail {
  return result.hasWorkEmail;
}
- (Email*) workEmail {
  return result.workEmail;
}
- (Contact_Builder*) setWorkEmail:(Email*) value {
  result.hasWorkEmail = YES;
  result.workEmail = value;
  return self;
}
- (Contact_Builder*) setWorkEmailBuilder:(Email_Builder*) builderForValue {
  return [self setWorkEmail:[builderForValue build]];
}
- (Contact_Builder*) mergeWorkEmail:(Email*) value {
  if (result.hasWorkEmail &&
      result.workEmail != [Email defaultInstance]) {
    result.workEmail =
      [[[Email builderWithPrototype:result.workEmail] mergeFrom:value] buildPartial];
  } else {
    result.workEmail = value;
  }
  result.hasWorkEmail = YES;
  return self;
}
- (Contact_Builder*) clearWorkEmail {
  result.hasWorkEmail = NO;
  result.workEmail = [Email defaultInstance];
  return self;
}
- (BOOL) hasComEmail {
  return result.hasComEmail;
}
- (Email*) comEmail {
  return result.comEmail;
}
- (Contact_Builder*) setComEmail:(Email*) value {
  result.hasComEmail = YES;
  result.comEmail = value;
  return self;
}
- (Contact_Builder*) setComEmailBuilder:(Email_Builder*) builderForValue {
  return [self setComEmail:[builderForValue build]];
}
- (Contact_Builder*) mergeComEmail:(Email*) value {
  if (result.hasComEmail &&
      result.comEmail != [Email defaultInstance]) {
    result.comEmail =
      [[[Email builderWithPrototype:result.comEmail] mergeFrom:value] buildPartial];
  } else {
    result.comEmail = value;
  }
  result.hasComEmail = YES;
  return self;
}
- (Contact_Builder*) clearComEmail {
  result.hasComEmail = NO;
  result.comEmail = [Email defaultInstance];
  return self;
}
- (BOOL) hasWorkAddr {
  return result.hasWorkAddr;
}
- (Address*) workAddr {
  return result.workAddr;
}
- (Contact_Builder*) setWorkAddr:(Address*) value {
  result.hasWorkAddr = YES;
  result.workAddr = value;
  return self;
}
- (Contact_Builder*) setWorkAddrBuilder:(Address_Builder*) builderForValue {
  return [self setWorkAddr:[builderForValue build]];
}
- (Contact_Builder*) mergeWorkAddr:(Address*) value {
  if (result.hasWorkAddr &&
      result.workAddr != [Address defaultInstance]) {
    result.workAddr =
      [[[Address builderWithPrototype:result.workAddr] mergeFrom:value] buildPartial];
  } else {
    result.workAddr = value;
  }
  result.hasWorkAddr = YES;
  return self;
}
- (Contact_Builder*) clearWorkAddr {
  result.hasWorkAddr = NO;
  result.workAddr = [Address defaultInstance];
  return self;
}
- (BOOL) hasHomeAddr {
  return result.hasHomeAddr;
}
- (Address*) homeAddr {
  return result.homeAddr;
}
- (Contact_Builder*) setHomeAddr:(Address*) value {
  result.hasHomeAddr = YES;
  result.homeAddr = value;
  return self;
}
- (Contact_Builder*) setHomeAddrBuilder:(Address_Builder*) builderForValue {
  return [self setHomeAddr:[builderForValue build]];
}
- (Contact_Builder*) mergeHomeAddr:(Address*) value {
  if (result.hasHomeAddr &&
      result.homeAddr != [Address defaultInstance]) {
    result.homeAddr =
      [[[Address builderWithPrototype:result.homeAddr] mergeFrom:value] buildPartial];
  } else {
    result.homeAddr = value;
  }
  result.hasHomeAddr = YES;
  return self;
}
- (Contact_Builder*) clearHomeAddr {
  result.hasHomeAddr = NO;
  result.homeAddr = [Address defaultInstance];
  return self;
}
- (BOOL) hasQq {
  return result.hasQq;
}
- (InstantMessage*) qq {
  return result.qq;
}
- (Contact_Builder*) setQq:(InstantMessage*) value {
  result.hasQq = YES;
  result.qq = value;
  return self;
}
- (Contact_Builder*) setQqBuilder:(InstantMessage_Builder*) builderForValue {
  return [self setQq:[builderForValue build]];
}
- (Contact_Builder*) mergeQq:(InstantMessage*) value {
  if (result.hasQq &&
      result.qq != [InstantMessage defaultInstance]) {
    result.qq =
      [[[InstantMessage builderWithPrototype:result.qq] mergeFrom:value] buildPartial];
  } else {
    result.qq = value;
  }
  result.hasQq = YES;
  return self;
}
- (Contact_Builder*) clearQq {
  result.hasQq = NO;
  result.qq = [InstantMessage defaultInstance];
  return self;
}
- (BOOL) hasMsn {
  return result.hasMsn;
}
- (InstantMessage*) msn {
  return result.msn;
}
- (Contact_Builder*) setMsn:(InstantMessage*) value {
  result.hasMsn = YES;
  result.msn = value;
  return self;
}
- (Contact_Builder*) setMsnBuilder:(InstantMessage_Builder*) builderForValue {
  return [self setMsn:[builderForValue build]];
}
- (Contact_Builder*) mergeMsn:(InstantMessage*) value {
  if (result.hasMsn &&
      result.msn != [InstantMessage defaultInstance]) {
    result.msn =
      [[[InstantMessage builderWithPrototype:result.msn] mergeFrom:value] buildPartial];
  } else {
    result.msn = value;
  }
  result.hasMsn = YES;
  return self;
}
- (Contact_Builder*) clearMsn {
  result.hasMsn = NO;
  result.msn = [InstantMessage defaultInstance];
  return self;
}
- (BOOL) hasPersonPage {
  return result.hasPersonPage;
}
- (Website*) personPage {
  return result.personPage;
}
- (Contact_Builder*) setPersonPage:(Website*) value {
  result.hasPersonPage = YES;
  result.personPage = value;
  return self;
}
- (Contact_Builder*) setPersonPageBuilder:(Website_Builder*) builderForValue {
  return [self setPersonPage:[builderForValue build]];
}
- (Contact_Builder*) mergePersonPage:(Website*) value {
  if (result.hasPersonPage &&
      result.personPage != [Website defaultInstance]) {
    result.personPage =
      [[[Website builderWithPrototype:result.personPage] mergeFrom:value] buildPartial];
  } else {
    result.personPage = value;
  }
  result.hasPersonPage = YES;
  return self;
}
- (Contact_Builder*) clearPersonPage {
  result.hasPersonPage = NO;
  result.personPage = [Website defaultInstance];
  return self;
}
- (BOOL) hasComPage {
  return result.hasComPage;
}
- (Website*) comPage {
  return result.comPage;
}
- (Contact_Builder*) setComPage:(Website*) value {
  result.hasComPage = YES;
  result.comPage = value;
  return self;
}
- (Contact_Builder*) setComPageBuilder:(Website_Builder*) builderForValue {
  return [self setComPage:[builderForValue build]];
}
- (Contact_Builder*) mergeComPage:(Website*) value {
  if (result.hasComPage &&
      result.comPage != [Website defaultInstance]) {
    result.comPage =
      [[[Website builderWithPrototype:result.comPage] mergeFrom:value] buildPartial];
  } else {
    result.comPage = value;
  }
  result.hasComPage = YES;
  return self;
}
- (Contact_Builder*) clearComPage {
  result.hasComPage = NO;
  result.comPage = [Website defaultInstance];
  return self;
}
- (BOOL) hasEPhone {
  return result.hasEPhone;
}
- (Phone*) ePhone {
  return result.ePhone;
}
- (Contact_Builder*) setEPhone:(Phone*) value {
  result.hasEPhone = YES;
  result.ePhone = value;
  return self;
}
- (Contact_Builder*) setEPhoneBuilder:(Phone_Builder*) builderForValue {
  return [self setEPhone:[builderForValue build]];
}
- (Contact_Builder*) mergeEPhone:(Phone*) value {
  if (result.hasEPhone &&
      result.ePhone != [Phone defaultInstance]) {
    result.ePhone =
      [[[Phone builderWithPrototype:result.ePhone] mergeFrom:value] buildPartial];
  } else {
    result.ePhone = value;
  }
  result.hasEPhone = YES;
  return self;
}
- (Contact_Builder*) clearEPhone {
  result.hasEPhone = NO;
  result.ePhone = [Phone defaultInstance];
  return self;
}
- (BOOL) hasPimContactId {
  return result.hasPimContactId;
}
- (NSString*) pimContactId {
  return result.pimContactId;
}
- (Contact_Builder*) setPimContactId:(NSString*) value {
  result.hasPimContactId = YES;
  result.pimContactId = value;
  return self;
}
- (Contact_Builder*) clearPimContactId {
  result.hasPimContactId = NO;
  result.pimContactId = @"";
  return self;
}
- (BOOL) hasLastSource {
  return result.hasLastSource;
}
- (int32_t) lastSource {
  return result.lastSource;
}
- (Contact_Builder*) setLastSource:(int32_t) value {
  result.hasLastSource = YES;
  result.lastSource = value;
  return self;
}
- (Contact_Builder*) clearLastSource {
  result.hasLastSource = NO;
  result.lastSource = 0;
  return self;
}
- (BOOL) hasLunarBirthday {
  return result.hasLunarBirthday;
}
- (NSString*) lunarBirthday {
  return result.lunarBirthday;
}
- (Contact_Builder*) setLunarBirthday:(NSString*) value {
  result.hasLunarBirthday = YES;
  result.lunarBirthday = value;
  return self;
}
- (Contact_Builder*) clearLunarBirthday {
  result.hasLunarBirthday = NO;
  result.lunarBirthday = @"";
  return self;
}
@end

