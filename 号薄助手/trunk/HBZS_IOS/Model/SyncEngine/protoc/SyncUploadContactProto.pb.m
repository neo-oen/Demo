// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SyncUploadContactProto.pb.h"

@implementation SyncUploadContactProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SyncUploadContactProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [ContactProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SyncUploadContactRequest ()
@property (retain) NSMutableArray* mutableContactAddList;
@property (retain) NSMutableArray* mutableContactUpdList;
@property (retain) NSMutableArray* mutableContactDelList;
@property (retain) NSMutableArray* mutableContactSyncSummaryList;
@property (retain) NSMutableArray* mutableGroupAddList;
@property (retain) NSMutableArray* mutableGroupUpdList;
@property (retain) NSMutableArray* mutableGroupDelList;
@property (retain) NSMutableArray* mutableGroupSyncSummaryList;
@property (retain) Contact* businessCard;
@property int32_t businessCardVersion;
@end

@implementation SyncUploadContactRequest

@synthesize mutableContactAddList;
@synthesize mutableContactUpdList;
@synthesize mutableContactDelList;
@synthesize mutableContactSyncSummaryList;
@synthesize mutableGroupAddList;
@synthesize mutableGroupUpdList;
@synthesize mutableGroupDelList;
@synthesize mutableGroupSyncSummaryList;
- (BOOL) hasBusinessCard {
  return !!hasBusinessCard_;
}
- (void) setHasBusinessCard:(BOOL) value {
  hasBusinessCard_ = !!value;
}
@synthesize businessCard;
- (BOOL) hasBusinessCardVersion {
  return !!hasBusinessCardVersion_;
}
- (void) setHasBusinessCardVersion:(BOOL) value {
  hasBusinessCardVersion_ = !!value;
}
@synthesize businessCardVersion;
- (void) dealloc {
  self.mutableContactAddList = nil;
  self.mutableContactUpdList = nil;
  self.mutableContactDelList = nil;
  self.mutableContactSyncSummaryList = nil;
  self.mutableGroupAddList = nil;
  self.mutableGroupUpdList = nil;
  self.mutableGroupDelList = nil;
  self.mutableGroupSyncSummaryList = nil;
  self.businessCard = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.businessCard = [Contact defaultInstance];
    self.businessCardVersion = 0;
  }
  return self;
}
static SyncUploadContactRequest* defaultSyncUploadContactRequestInstance = nil;
+ (void) initialize {
  if (self == [SyncUploadContactRequest class]) {
    defaultSyncUploadContactRequestInstance = [[SyncUploadContactRequest alloc] init];
  }
}
+ (SyncUploadContactRequest*) defaultInstance {
  return defaultSyncUploadContactRequestInstance;
}
- (SyncUploadContactRequest*) defaultInstance {
  return defaultSyncUploadContactRequestInstance;
}
- (NSArray*) contactAddList {
  return mutableContactAddList;
}
- (Contact*) contactAddAtIndex:(int32_t) index {
  id value = [mutableContactAddList objectAtIndex:index];
  return value;
}
- (NSArray*) contactUpdList {
  return mutableContactUpdList;
}
- (Contact*) contactUpdAtIndex:(int32_t) index {
  id value = [mutableContactUpdList objectAtIndex:index];
  return value;
}
- (NSArray*) contactDelList {
  return mutableContactDelList;
}
- (int32_t) contactDelAtIndex:(int32_t) index {
  id value = [mutableContactDelList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) contactSyncSummaryList {
  return mutableContactSyncSummaryList;
}
- (SyncSummary*) contactSyncSummaryAtIndex:(int32_t) index {
  id value = [mutableContactSyncSummaryList objectAtIndex:index];
  return value;
}
- (NSArray*) groupAddList {
  return mutableGroupAddList;
}
- (Group*) groupAddAtIndex:(int32_t) index {
  id value = [mutableGroupAddList objectAtIndex:index];
  return value;
}
- (NSArray*) groupUpdList {
  return mutableGroupUpdList;
}
- (Group*) groupUpdAtIndex:(int32_t) index {
  id value = [mutableGroupUpdList objectAtIndex:index];
  return value;
}
- (NSArray*) groupDelList {
  return mutableGroupDelList;
}
- (int32_t) groupDelAtIndex:(int32_t) index {
  id value = [mutableGroupDelList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) groupSyncSummaryList {
  return mutableGroupSyncSummaryList;
}
- (SyncSummary*) groupSyncSummaryAtIndex:(int32_t) index {
  id value = [mutableGroupSyncSummaryList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  for (SyncSummary* element in self.contactSyncSummaryList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (SyncSummary* element in self.groupSyncSummaryList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (Contact* element in self.contactAddList) {
    [output writeMessage:1 value:element];
  }
  for (Contact* element in self.contactUpdList) {
    [output writeMessage:2 value:element];
  }
  if (self.mutableContactDelList.count > 0) {
    [output writeRawVarint32:26];
    [output writeRawVarint32:contactDelMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableContactDelList) {
    [output writeInt32NoTag:[value intValue]];
  }
  for (SyncSummary* element in self.contactSyncSummaryList) {
    [output writeMessage:4 value:element];
  }
  for (Group* element in self.groupAddList) {
    [output writeMessage:5 value:element];
  }
  for (Group* element in self.groupUpdList) {
    [output writeMessage:6 value:element];
  }
  if (self.mutableGroupDelList.count > 0) {
    [output writeRawVarint32:58];
    [output writeRawVarint32:groupDelMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableGroupDelList) {
    [output writeInt32NoTag:[value intValue]];
  }
  for (SyncSummary* element in self.groupSyncSummaryList) {
    [output writeMessage:8 value:element];
  }
  if (self.hasBusinessCard) {
    [output writeMessage:9 value:self.businessCard];
  }
  if (self.hasBusinessCardVersion) {
    [output writeInt32:10 value:self.businessCardVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (Contact* element in self.contactAddList) {
    size += computeMessageSize(1, element);
  }
  for (Contact* element in self.contactUpdList) {
    size += computeMessageSize(2, element);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableContactDelList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableContactDelList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    contactDelMemoizedSerializedSize = dataSize;
  }
  for (SyncSummary* element in self.contactSyncSummaryList) {
    size += computeMessageSize(4, element);
  }
  for (Group* element in self.groupAddList) {
    size += computeMessageSize(5, element);
  }
  for (Group* element in self.groupUpdList) {
    size += computeMessageSize(6, element);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableGroupDelList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableGroupDelList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    groupDelMemoizedSerializedSize = dataSize;
  }
  for (SyncSummary* element in self.groupSyncSummaryList) {
    size += computeMessageSize(8, element);
  }
  if (self.hasBusinessCard) {
    size += computeMessageSize(9, self.businessCard);
  }
  if (self.hasBusinessCardVersion) {
    size += computeInt32Size(10, self.businessCardVersion);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncUploadContactRequest*) parseFromData:(NSData*) data {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromData:data] build];
}
+ (SyncUploadContactRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactRequest*) parseFromInputStream:(NSInputStream*) input {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromInputStream:input] build];
}
+ (SyncUploadContactRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromCodedInputStream:input] build];
}
+ (SyncUploadContactRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactRequest*)[[[SyncUploadContactRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactRequest_Builder*) builder {
  return [[[SyncUploadContactRequest_Builder alloc] init] autorelease];
}
+ (SyncUploadContactRequest_Builder*) builderWithPrototype:(SyncUploadContactRequest*) prototype {
  return [[SyncUploadContactRequest builder] mergeFrom:prototype];
}
- (SyncUploadContactRequest_Builder*) builder {
  return [SyncUploadContactRequest builder];
}
@end

@interface SyncUploadContactRequest_Builder()
@property (retain) SyncUploadContactRequest* result;
@end

@implementation SyncUploadContactRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncUploadContactRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncUploadContactRequest_Builder*) clear {
  self.result = [[[SyncUploadContactRequest alloc] init] autorelease];
  return self;
}
- (SyncUploadContactRequest_Builder*) clone {
  return [SyncUploadContactRequest builderWithPrototype:result];
}
- (SyncUploadContactRequest*) defaultInstance {
  return [SyncUploadContactRequest defaultInstance];
}
- (SyncUploadContactRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncUploadContactRequest*) buildPartial {
  SyncUploadContactRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncUploadContactRequest_Builder*) mergeFrom:(SyncUploadContactRequest*) other {
  if (other == [SyncUploadContactRequest defaultInstance]) {
    return self;
  }
  if (other.mutableContactAddList.count > 0) {
    if (result.mutableContactAddList == nil) {
      result.mutableContactAddList = [NSMutableArray array];
    }
    [result.mutableContactAddList addObjectsFromArray:other.mutableContactAddList];
  }
  if (other.mutableContactUpdList.count > 0) {
    if (result.mutableContactUpdList == nil) {
      result.mutableContactUpdList = [NSMutableArray array];
    }
    [result.mutableContactUpdList addObjectsFromArray:other.mutableContactUpdList];
  }
  if (other.mutableContactDelList.count > 0) {
    if (result.mutableContactDelList == nil) {
      result.mutableContactDelList = [NSMutableArray array];
    }
    [result.mutableContactDelList addObjectsFromArray:other.mutableContactDelList];
  }
  if (other.mutableContactSyncSummaryList.count > 0) {
    if (result.mutableContactSyncSummaryList == nil) {
      result.mutableContactSyncSummaryList = [NSMutableArray array];
    }
    [result.mutableContactSyncSummaryList addObjectsFromArray:other.mutableContactSyncSummaryList];
  }
  if (other.mutableGroupAddList.count > 0) {
    if (result.mutableGroupAddList == nil) {
      result.mutableGroupAddList = [NSMutableArray array];
    }
    [result.mutableGroupAddList addObjectsFromArray:other.mutableGroupAddList];
  }
  if (other.mutableGroupUpdList.count > 0) {
    if (result.mutableGroupUpdList == nil) {
      result.mutableGroupUpdList = [NSMutableArray array];
    }
    [result.mutableGroupUpdList addObjectsFromArray:other.mutableGroupUpdList];
  }
  if (other.mutableGroupDelList.count > 0) {
    if (result.mutableGroupDelList == nil) {
      result.mutableGroupDelList = [NSMutableArray array];
    }
    [result.mutableGroupDelList addObjectsFromArray:other.mutableGroupDelList];
  }
  if (other.mutableGroupSyncSummaryList.count > 0) {
    if (result.mutableGroupSyncSummaryList == nil) {
      result.mutableGroupSyncSummaryList = [NSMutableArray array];
    }
    [result.mutableGroupSyncSummaryList addObjectsFromArray:other.mutableGroupSyncSummaryList];
  }
  if (other.hasBusinessCard) {
    [self mergeBusinessCard:other.businessCard];
  }
  if (other.hasBusinessCardVersion) {
    [self setBusinessCardVersion:other.businessCardVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncUploadContactRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncUploadContactRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactAdd:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        Contact_Builder* subBuilder = [Contact builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactUpd:[subBuilder buildPartial]];
        break;
      }
      case 26: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addContactDel:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 34: {
        SyncSummary_Builder* subBuilder = [SyncSummary builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactSyncSummary:[subBuilder buildPartial]];
        break;
      }
      case 42: {
        Group_Builder* subBuilder = [Group builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupAdd:[subBuilder buildPartial]];
        break;
      }
      case 50: {
        Group_Builder* subBuilder = [Group builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupUpd:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addGroupDel:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 66: {
        SyncSummary_Builder* subBuilder = [SyncSummary builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupSyncSummary:[subBuilder buildPartial]];
        break;
      }
      case 74: {
        Contact_Builder* subBuilder = [Contact builder];
        if (self.hasBusinessCard) {
          [subBuilder mergeFrom:self.businessCard];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessCard:[subBuilder buildPartial]];
        break;
      }
      case 80: {
        [self setBusinessCardVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (NSArray*) contactAddList {
  if (result.mutableContactAddList == nil) { return [NSArray array]; }
  return result.mutableContactAddList;
}
- (Contact*) contactAddAtIndex:(int32_t) index {
  return [result contactAddAtIndex:index];
}
- (SyncUploadContactRequest_Builder*) replaceContactAddAtIndex:(int32_t) index with:(Contact*) value {
  [result.mutableContactAddList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder*) addAllContactAdd:(NSArray*) values {
  if (result.mutableContactAddList == nil) {
    result.mutableContactAddList = [NSMutableArray array];
  }
  [result.mutableContactAddList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactRequest_Builder*) clearContactAddList {
  result.mutableContactAddList = nil;
  return self;
}
- (SyncUploadContactRequest_Builder*) addContactAdd:(Contact*) value {
  if (result.mutableContactAddList == nil) {
    result.mutableContactAddList = [NSMutableArray array];
  }
  [result.mutableContactAddList addObject:value];
  return self;
}
- (NSArray*) contactUpdList {
  if (result.mutableContactUpdList == nil) { return [NSArray array]; }
  return result.mutableContactUpdList;
}
- (Contact*) contactUpdAtIndex:(int32_t) index {
  return [result contactUpdAtIndex:index];
}
- (SyncUploadContactRequest_Builder*) replaceContactUpdAtIndex:(int32_t) index with:(Contact*) value {
  [result.mutableContactUpdList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder*) addAllContactUpd:(NSArray*) values {
  if (result.mutableContactUpdList == nil) {
    result.mutableContactUpdList = [NSMutableArray array];
  }
  [result.mutableContactUpdList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactRequest_Builder*) clearContactUpdList {
  result.mutableContactUpdList = nil;
  return self;
}
- (SyncUploadContactRequest_Builder*) addContactUpd:(Contact*) value {
  if (result.mutableContactUpdList == nil) {
    result.mutableContactUpdList = [NSMutableArray array];
  }
  [result.mutableContactUpdList addObject:value];
  return self;
}
- (NSArray*) contactDelList {
  if (result.mutableContactDelList == nil) {
    return [NSArray array];
  }
  return result.mutableContactDelList;
}
- (int32_t) contactDelAtIndex:(int32_t) index {
  return [result contactDelAtIndex:index];
}
- (SyncUploadContactRequest_Builder*) replaceContactDelAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableContactDelList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactRequest_Builder*) addContactDel:(int32_t) value {
  if (result.mutableContactDelList == nil) {
    result.mutableContactDelList = [NSMutableArray array];
  }
  [result.mutableContactDelList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactRequest_Builder*) addAllContactDel:(NSArray*) values {
  if (result.mutableContactDelList == nil) {
    result.mutableContactDelList = [NSMutableArray array];
  }
  [result.mutableContactDelList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactRequest_Builder*) clearContactDelList {
  result.mutableContactDelList = nil;
  return self;
}
- (NSArray*) contactSyncSummaryList {
  if (result.mutableContactSyncSummaryList == nil) { return [NSArray array]; }
  return result.mutableContactSyncSummaryList;
}
- (SyncSummary*) contactSyncSummaryAtIndex:(int32_t) index {
  return [result contactSyncSummaryAtIndex:index];
}
- (SyncUploadContactRequest_Builder*) replaceContactSyncSummaryAtIndex:(int32_t) index with:(SyncSummary*) value {
  [result.mutableContactSyncSummaryList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder*) addAllContactSyncSummary:(NSArray*) values {
  if (result.mutableContactSyncSummaryList == nil) {
    result.mutableContactSyncSummaryList = [NSMutableArray array];
  }
  [result.mutableContactSyncSummaryList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactRequest_Builder*) clearContactSyncSummaryList {
  result.mutableContactSyncSummaryList = nil;
  return self;
}
- (SyncUploadContactRequest_Builder*) addContactSyncSummary:(SyncSummary*) value {
  if (result.mutableContactSyncSummaryList == nil) {
    result.mutableContactSyncSummaryList = [NSMutableArray array];
  }
  [result.mutableContactSyncSummaryList addObject:value];
  return self;
}
- (NSArray*) groupAddList {
  if (result.mutableGroupAddList == nil) { return [NSArray array]; }
  return result.mutableGroupAddList;
}
- (Group*) groupAddAtIndex:(int32_t) index {
  return [result groupAddAtIndex:index];
}
- (SyncUploadContactRequest_Builder*) replaceGroupAddAtIndex:(int32_t) index with:(Group*) value {
  [result.mutableGroupAddList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder*) addAllGroupAdd:(NSArray*) values {
  if (result.mutableGroupAddList == nil) {
    result.mutableGroupAddList = [NSMutableArray array];
  }
  [result.mutableGroupAddList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactRequest_Builder*) clearGroupAddList {
  result.mutableGroupAddList = nil;
  return self;
}
- (SyncUploadContactRequest_Builder*) addGroupAdd:(Group*) value {
  if (result.mutableGroupAddList == nil) {
    result.mutableGroupAddList = [NSMutableArray array];
  }
  [result.mutableGroupAddList addObject:value];
  return self;
}
- (NSArray*) groupUpdList {
  if (result.mutableGroupUpdList == nil) { return [NSArray array]; }
  return result.mutableGroupUpdList;
}
- (Group*) groupUpdAtIndex:(int32_t) index {
  return [result groupUpdAtIndex:index];
}
- (SyncUploadContactRequest_Builder*) replaceGroupUpdAtIndex:(int32_t) index with:(Group*) value {
  [result.mutableGroupUpdList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder*) addAllGroupUpd:(NSArray*) values {
  if (result.mutableGroupUpdList == nil) {
    result.mutableGroupUpdList = [NSMutableArray array];
  }
  [result.mutableGroupUpdList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactRequest_Builder*) clearGroupUpdList {
  result.mutableGroupUpdList = nil;
  return self;
}
- (SyncUploadContactRequest_Builder*) addGroupUpd:(Group*) value {
  if (result.mutableGroupUpdList == nil) {
    result.mutableGroupUpdList = [NSMutableArray array];
  }
  [result.mutableGroupUpdList addObject:value];
  return self;
}
- (NSArray*) groupDelList {
  if (result.mutableGroupDelList == nil) {
    return [NSArray array];
  }
  return result.mutableGroupDelList;
}
- (int32_t) groupDelAtIndex:(int32_t) index {
  return [result groupDelAtIndex:index];
}
- (SyncUploadContactRequest_Builder*) replaceGroupDelAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableGroupDelList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactRequest_Builder*) addGroupDel:(int32_t) value {
  if (result.mutableGroupDelList == nil) {
    result.mutableGroupDelList = [NSMutableArray array];
  }
  [result.mutableGroupDelList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactRequest_Builder*) addAllGroupDel:(NSArray*) values {
  if (result.mutableGroupDelList == nil) {
    result.mutableGroupDelList = [NSMutableArray array];
  }
  [result.mutableGroupDelList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactRequest_Builder*) clearGroupDelList {
  result.mutableGroupDelList = nil;
  return self;
}
- (NSArray*) groupSyncSummaryList {
  if (result.mutableGroupSyncSummaryList == nil) { return [NSArray array]; }
  return result.mutableGroupSyncSummaryList;
}
- (SyncSummary*) groupSyncSummaryAtIndex:(int32_t) index {
  return [result groupSyncSummaryAtIndex:index];
}
- (SyncUploadContactRequest_Builder*) replaceGroupSyncSummaryAtIndex:(int32_t) index with:(SyncSummary*) value {
  [result.mutableGroupSyncSummaryList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncUploadContactRequest_Builder*) addAllGroupSyncSummary:(NSArray*) values {
  if (result.mutableGroupSyncSummaryList == nil) {
    result.mutableGroupSyncSummaryList = [NSMutableArray array];
  }
  [result.mutableGroupSyncSummaryList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactRequest_Builder*) clearGroupSyncSummaryList {
  result.mutableGroupSyncSummaryList = nil;
  return self;
}
- (SyncUploadContactRequest_Builder*) addGroupSyncSummary:(SyncSummary*) value {
  if (result.mutableGroupSyncSummaryList == nil) {
    result.mutableGroupSyncSummaryList = [NSMutableArray array];
  }
  [result.mutableGroupSyncSummaryList addObject:value];
  return self;
}
- (BOOL) hasBusinessCard {
  return result.hasBusinessCard;
}
- (Contact*) businessCard {
  return result.businessCard;
}
- (SyncUploadContactRequest_Builder*) setBusinessCard:(Contact*) value {
  result.hasBusinessCard = YES;
  result.businessCard = value;
  return self;
}
- (SyncUploadContactRequest_Builder*) setBusinessCardBuilder:(Contact_Builder*) builderForValue {
  return [self setBusinessCard:[builderForValue build]];
}
- (SyncUploadContactRequest_Builder*) mergeBusinessCard:(Contact*) value {
  if (result.hasBusinessCard &&
      result.businessCard != [Contact defaultInstance]) {
    result.businessCard =
      [[[Contact builderWithPrototype:result.businessCard] mergeFrom:value] buildPartial];
  } else {
    result.businessCard = value;
  }
  result.hasBusinessCard = YES;
  return self;
}
- (SyncUploadContactRequest_Builder*) clearBusinessCard {
  result.hasBusinessCard = NO;
  result.businessCard = [Contact defaultInstance];
  return self;
}
- (BOOL) hasBusinessCardVersion {
  return result.hasBusinessCardVersion;
}
- (int32_t) businessCardVersion {
  return result.businessCardVersion;
}
- (SyncUploadContactRequest_Builder*) setBusinessCardVersion:(int32_t) value {
  result.hasBusinessCardVersion = YES;
  result.businessCardVersion = value;
  return self;
}
- (SyncUploadContactRequest_Builder*) clearBusinessCardVersion {
  result.hasBusinessCardVersion = NO;
  result.businessCardVersion = 0;
  return self;
}
@end

@interface SyncUploadContactResponse ()
@property int32_t contactListVersion;
@property (retain) NSString* sessionId;
@property (retain) NSMutableArray* mutableContactMappingInfoList;
@property (retain) NSMutableArray* mutableDeletedContactIdList;
@property (retain) NSMutableArray* mutableUpdatedContactIdList;
@property (retain) NSMutableArray* mutableGroupMappingInfoList;
@property (retain) NSMutableArray* mutableDeletedGroupIdList;
@property (retain) NSMutableArray* mutableUpdatedGroupIdList;
@property int32_t businessCardVersion;
@end

@implementation SyncUploadContactResponse

- (BOOL) hasContactListVersion {
  return !!hasContactListVersion_;
}
- (void) setHasContactListVersion:(BOOL) value {
  hasContactListVersion_ = !!value;
}
@synthesize contactListVersion;
- (BOOL) hasSessionId {
  return !!hasSessionId_;
}
- (void) setHasSessionId:(BOOL) value {
  hasSessionId_ = !!value;
}
@synthesize sessionId;
@synthesize mutableContactMappingInfoList;
@synthesize mutableDeletedContactIdList;
@synthesize mutableUpdatedContactIdList;
@synthesize mutableGroupMappingInfoList;
@synthesize mutableDeletedGroupIdList;
@synthesize mutableUpdatedGroupIdList;
- (BOOL) hasBusinessCardVersion {
  return !!hasBusinessCardVersion_;
}
- (void) setHasBusinessCardVersion:(BOOL) value {
  hasBusinessCardVersion_ = !!value;
}
@synthesize businessCardVersion;
- (void) dealloc {
  self.sessionId = nil;
  self.mutableContactMappingInfoList = nil;
  self.mutableDeletedContactIdList = nil;
  self.mutableUpdatedContactIdList = nil;
  self.mutableGroupMappingInfoList = nil;
  self.mutableDeletedGroupIdList = nil;
  self.mutableUpdatedGroupIdList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.contactListVersion = 0;
    self.sessionId = @"";
    self.businessCardVersion = 0;
  }
  return self;
}
static SyncUploadContactResponse* defaultSyncUploadContactResponseInstance = nil;
+ (void) initialize {
  if (self == [SyncUploadContactResponse class]) {
    defaultSyncUploadContactResponseInstance = [[SyncUploadContactResponse alloc] init];
  }
}
+ (SyncUploadContactResponse*) defaultInstance {
  return defaultSyncUploadContactResponseInstance;
}
- (SyncUploadContactResponse*) defaultInstance {
  return defaultSyncUploadContactResponseInstance;
}
- (NSArray*) contactMappingInfoList {
  return mutableContactMappingInfoList;
}
- (SyncMappingInfo*) contactMappingInfoAtIndex:(int32_t) index {
  id value = [mutableContactMappingInfoList objectAtIndex:index];
  return value;
}
- (NSArray*) deletedContactIdList {
  return mutableDeletedContactIdList;
}
- (int32_t) deletedContactIdAtIndex:(int32_t) index {
  id value = [mutableDeletedContactIdList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) updatedContactIdList {
  return mutableUpdatedContactIdList;
}
- (int32_t) updatedContactIdAtIndex:(int32_t) index {
  id value = [mutableUpdatedContactIdList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) groupMappingInfoList {
  return mutableGroupMappingInfoList;
}
- (SyncMappingInfo*) groupMappingInfoAtIndex:(int32_t) index {
  id value = [mutableGroupMappingInfoList objectAtIndex:index];
  return value;
}
- (NSArray*) deletedGroupIdList {
  return mutableDeletedGroupIdList;
}
- (int32_t) deletedGroupIdAtIndex:(int32_t) index {
  id value = [mutableDeletedGroupIdList objectAtIndex:index];
  return [value intValue];
}
- (NSArray*) updatedGroupIdList {
  return mutableUpdatedGroupIdList;
}
- (int32_t) updatedGroupIdAtIndex:(int32_t) index {
  id value = [mutableUpdatedGroupIdList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  for (SyncMappingInfo* element in self.contactMappingInfoList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  for (SyncMappingInfo* element in self.groupMappingInfoList) {
    if (!element.isInitialized) {
      return NO;
    }
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasContactListVersion) {
    [output writeInt32:1 value:self.contactListVersion];
  }
  if (self.hasSessionId) {
    [output writeString:2 value:self.sessionId];
  }
  for (SyncMappingInfo* element in self.contactMappingInfoList) {
    [output writeMessage:3 value:element];
  }
  if (self.mutableDeletedContactIdList.count > 0) {
    [output writeRawVarint32:34];
    [output writeRawVarint32:deletedContactIdMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableDeletedContactIdList) {
    [output writeInt32NoTag:[value intValue]];
  }
  if (self.mutableUpdatedContactIdList.count > 0) {
    [output writeRawVarint32:42];
    [output writeRawVarint32:updatedContactIdMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableUpdatedContactIdList) {
    [output writeInt32NoTag:[value intValue]];
  }
  for (SyncMappingInfo* element in self.groupMappingInfoList) {
    [output writeMessage:6 value:element];
  }
  if (self.mutableDeletedGroupIdList.count > 0) {
    [output writeRawVarint32:58];
    [output writeRawVarint32:deletedGroupIdMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableDeletedGroupIdList) {
    [output writeInt32NoTag:[value intValue]];
  }
  if (self.mutableUpdatedGroupIdList.count > 0) {
    [output writeRawVarint32:66];
    [output writeRawVarint32:updatedGroupIdMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableUpdatedGroupIdList) {
    [output writeInt32NoTag:[value intValue]];
  }
  if (self.hasBusinessCardVersion) {
    [output writeInt32:9 value:self.businessCardVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasContactListVersion) {
    size += computeInt32Size(1, self.contactListVersion);
  }
  if (self.hasSessionId) {
    size += computeStringSize(2, self.sessionId);
  }
  for (SyncMappingInfo* element in self.contactMappingInfoList) {
    size += computeMessageSize(3, element);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableDeletedContactIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableDeletedContactIdList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    deletedContactIdMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUpdatedContactIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableUpdatedContactIdList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    updatedContactIdMemoizedSerializedSize = dataSize;
  }
  for (SyncMappingInfo* element in self.groupMappingInfoList) {
    size += computeMessageSize(6, element);
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableDeletedGroupIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableDeletedGroupIdList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    deletedGroupIdMemoizedSerializedSize = dataSize;
  }
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableUpdatedGroupIdList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableUpdatedGroupIdList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    updatedGroupIdMemoizedSerializedSize = dataSize;
  }
  if (self.hasBusinessCardVersion) {
    size += computeInt32Size(9, self.businessCardVersion);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncUploadContactResponse*) parseFromData:(NSData*) data {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromData:data] build];
}
+ (SyncUploadContactResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactResponse*) parseFromInputStream:(NSInputStream*) input {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromInputStream:input] build];
}
+ (SyncUploadContactResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromCodedInputStream:input] build];
}
+ (SyncUploadContactResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncUploadContactResponse*)[[[SyncUploadContactResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncUploadContactResponse_Builder*) builder {
  return [[[SyncUploadContactResponse_Builder alloc] init] autorelease];
}
+ (SyncUploadContactResponse_Builder*) builderWithPrototype:(SyncUploadContactResponse*) prototype {
  return [[SyncUploadContactResponse builder] mergeFrom:prototype];
}
- (SyncUploadContactResponse_Builder*) builder {
  return [SyncUploadContactResponse builder];
}
@end

@interface SyncUploadContactResponse_Builder()
@property (retain) SyncUploadContactResponse* result;
@end

@implementation SyncUploadContactResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncUploadContactResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncUploadContactResponse_Builder*) clear {
  self.result = [[[SyncUploadContactResponse alloc] init] autorelease];
  return self;
}
- (SyncUploadContactResponse_Builder*) clone {
  return [SyncUploadContactResponse builderWithPrototype:result];
}
- (SyncUploadContactResponse*) defaultInstance {
  return [SyncUploadContactResponse defaultInstance];
}
- (SyncUploadContactResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncUploadContactResponse*) buildPartial {
  SyncUploadContactResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncUploadContactResponse_Builder*) mergeFrom:(SyncUploadContactResponse*) other {
  if (other == [SyncUploadContactResponse defaultInstance]) {
    return self;
  }
  if (other.hasContactListVersion) {
    [self setContactListVersion:other.contactListVersion];
  }
  if (other.hasSessionId) {
    [self setSessionId:other.sessionId];
  }
  if (other.mutableContactMappingInfoList.count > 0) {
    if (result.mutableContactMappingInfoList == nil) {
      result.mutableContactMappingInfoList = [NSMutableArray array];
    }
    [result.mutableContactMappingInfoList addObjectsFromArray:other.mutableContactMappingInfoList];
  }
  if (other.mutableDeletedContactIdList.count > 0) {
    if (result.mutableDeletedContactIdList == nil) {
      result.mutableDeletedContactIdList = [NSMutableArray array];
    }
    [result.mutableDeletedContactIdList addObjectsFromArray:other.mutableDeletedContactIdList];
  }
  if (other.mutableUpdatedContactIdList.count > 0) {
    if (result.mutableUpdatedContactIdList == nil) {
      result.mutableUpdatedContactIdList = [NSMutableArray array];
    }
    [result.mutableUpdatedContactIdList addObjectsFromArray:other.mutableUpdatedContactIdList];
  }
  if (other.mutableGroupMappingInfoList.count > 0) {
    if (result.mutableGroupMappingInfoList == nil) {
      result.mutableGroupMappingInfoList = [NSMutableArray array];
    }
    [result.mutableGroupMappingInfoList addObjectsFromArray:other.mutableGroupMappingInfoList];
  }
  if (other.mutableDeletedGroupIdList.count > 0) {
    if (result.mutableDeletedGroupIdList == nil) {
      result.mutableDeletedGroupIdList = [NSMutableArray array];
    }
    [result.mutableDeletedGroupIdList addObjectsFromArray:other.mutableDeletedGroupIdList];
  }
  if (other.mutableUpdatedGroupIdList.count > 0) {
    if (result.mutableUpdatedGroupIdList == nil) {
      result.mutableUpdatedGroupIdList = [NSMutableArray array];
    }
    [result.mutableUpdatedGroupIdList addObjectsFromArray:other.mutableUpdatedGroupIdList];
  }
  if (other.hasBusinessCardVersion) {
    [self setBusinessCardVersion:other.businessCardVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncUploadContactResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncUploadContactResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setContactListVersion:[input readInt32]];
        break;
      }
      case 18: {
        [self setSessionId:[input readString]];
        break;
      }
      case 26: {
        SyncMappingInfo_Builder* subBuilder = [SyncMappingInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addContactMappingInfo:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addDeletedContactId:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 42: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addUpdatedContactId:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 50: {
        SyncMappingInfo_Builder* subBuilder = [SyncMappingInfo builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addGroupMappingInfo:[subBuilder buildPartial]];
        break;
      }
      case 58: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addDeletedGroupId:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 66: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addUpdatedGroupId:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 72: {
        [self setBusinessCardVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasContactListVersion {
  return result.hasContactListVersion;
}
- (int32_t) contactListVersion {
  return result.contactListVersion;
}
- (SyncUploadContactResponse_Builder*) setContactListVersion:(int32_t) value {
  result.hasContactListVersion = YES;
  result.contactListVersion = value;
  return self;
}
- (SyncUploadContactResponse_Builder*) clearContactListVersion {
  result.hasContactListVersion = NO;
  result.contactListVersion = 0;
  return self;
}
- (BOOL) hasSessionId {
  return result.hasSessionId;
}
- (NSString*) sessionId {
  return result.sessionId;
}
- (SyncUploadContactResponse_Builder*) setSessionId:(NSString*) value {
  result.hasSessionId = YES;
  result.sessionId = value;
  return self;
}
- (SyncUploadContactResponse_Builder*) clearSessionId {
  result.hasSessionId = NO;
  result.sessionId = @"";
  return self;
}
- (NSArray*) contactMappingInfoList {
  if (result.mutableContactMappingInfoList == nil) { return [NSArray array]; }
  return result.mutableContactMappingInfoList;
}
- (SyncMappingInfo*) contactMappingInfoAtIndex:(int32_t) index {
  return [result contactMappingInfoAtIndex:index];
}
- (SyncUploadContactResponse_Builder*) replaceContactMappingInfoAtIndex:(int32_t) index with:(SyncMappingInfo*) value {
  [result.mutableContactMappingInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncUploadContactResponse_Builder*) addAllContactMappingInfo:(NSArray*) values {
  if (result.mutableContactMappingInfoList == nil) {
    result.mutableContactMappingInfoList = [NSMutableArray array];
  }
  [result.mutableContactMappingInfoList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactResponse_Builder*) clearContactMappingInfoList {
  result.mutableContactMappingInfoList = nil;
  return self;
}
- (SyncUploadContactResponse_Builder*) addContactMappingInfo:(SyncMappingInfo*) value {
  if (result.mutableContactMappingInfoList == nil) {
    result.mutableContactMappingInfoList = [NSMutableArray array];
  }
  [result.mutableContactMappingInfoList addObject:value];
  return self;
}
- (NSArray*) deletedContactIdList {
  if (result.mutableDeletedContactIdList == nil) {
    return [NSArray array];
  }
  return result.mutableDeletedContactIdList;
}
- (int32_t) deletedContactIdAtIndex:(int32_t) index {
  return [result deletedContactIdAtIndex:index];
}
- (SyncUploadContactResponse_Builder*) replaceDeletedContactIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableDeletedContactIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactResponse_Builder*) addDeletedContactId:(int32_t) value {
  if (result.mutableDeletedContactIdList == nil) {
    result.mutableDeletedContactIdList = [NSMutableArray array];
  }
  [result.mutableDeletedContactIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactResponse_Builder*) addAllDeletedContactId:(NSArray*) values {
  if (result.mutableDeletedContactIdList == nil) {
    result.mutableDeletedContactIdList = [NSMutableArray array];
  }
  [result.mutableDeletedContactIdList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactResponse_Builder*) clearDeletedContactIdList {
  result.mutableDeletedContactIdList = nil;
  return self;
}
- (NSArray*) updatedContactIdList {
  if (result.mutableUpdatedContactIdList == nil) {
    return [NSArray array];
  }
  return result.mutableUpdatedContactIdList;
}
- (int32_t) updatedContactIdAtIndex:(int32_t) index {
  return [result updatedContactIdAtIndex:index];
}
- (SyncUploadContactResponse_Builder*) replaceUpdatedContactIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableUpdatedContactIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactResponse_Builder*) addUpdatedContactId:(int32_t) value {
  if (result.mutableUpdatedContactIdList == nil) {
    result.mutableUpdatedContactIdList = [NSMutableArray array];
  }
  [result.mutableUpdatedContactIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactResponse_Builder*) addAllUpdatedContactId:(NSArray*) values {
  if (result.mutableUpdatedContactIdList == nil) {
    result.mutableUpdatedContactIdList = [NSMutableArray array];
  }
  [result.mutableUpdatedContactIdList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactResponse_Builder*) clearUpdatedContactIdList {
  result.mutableUpdatedContactIdList = nil;
  return self;
}
- (NSArray*) groupMappingInfoList {
  if (result.mutableGroupMappingInfoList == nil) { return [NSArray array]; }
  return result.mutableGroupMappingInfoList;
}
- (SyncMappingInfo*) groupMappingInfoAtIndex:(int32_t) index {
  return [result groupMappingInfoAtIndex:index];
}
- (SyncUploadContactResponse_Builder*) replaceGroupMappingInfoAtIndex:(int32_t) index with:(SyncMappingInfo*) value {
  [result.mutableGroupMappingInfoList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (SyncUploadContactResponse_Builder*) addAllGroupMappingInfo:(NSArray*) values {
  if (result.mutableGroupMappingInfoList == nil) {
    result.mutableGroupMappingInfoList = [NSMutableArray array];
  }
  [result.mutableGroupMappingInfoList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactResponse_Builder*) clearGroupMappingInfoList {
  result.mutableGroupMappingInfoList = nil;
  return self;
}
- (SyncUploadContactResponse_Builder*) addGroupMappingInfo:(SyncMappingInfo*) value {
  if (result.mutableGroupMappingInfoList == nil) {
    result.mutableGroupMappingInfoList = [NSMutableArray array];
  }
  [result.mutableGroupMappingInfoList addObject:value];
  return self;
}
- (NSArray*) deletedGroupIdList {
  if (result.mutableDeletedGroupIdList == nil) {
    return [NSArray array];
  }
  return result.mutableDeletedGroupIdList;
}
- (int32_t) deletedGroupIdAtIndex:(int32_t) index {
  return [result deletedGroupIdAtIndex:index];
}
- (SyncUploadContactResponse_Builder*) replaceDeletedGroupIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableDeletedGroupIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactResponse_Builder*) addDeletedGroupId:(int32_t) value {
  if (result.mutableDeletedGroupIdList == nil) {
    result.mutableDeletedGroupIdList = [NSMutableArray array];
  }
  [result.mutableDeletedGroupIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactResponse_Builder*) addAllDeletedGroupId:(NSArray*) values {
  if (result.mutableDeletedGroupIdList == nil) {
    result.mutableDeletedGroupIdList = [NSMutableArray array];
  }
  [result.mutableDeletedGroupIdList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactResponse_Builder*) clearDeletedGroupIdList {
  result.mutableDeletedGroupIdList = nil;
  return self;
}
- (NSArray*) updatedGroupIdList {
  if (result.mutableUpdatedGroupIdList == nil) {
    return [NSArray array];
  }
  return result.mutableUpdatedGroupIdList;
}
- (int32_t) updatedGroupIdAtIndex:(int32_t) index {
  return [result updatedGroupIdAtIndex:index];
}
- (SyncUploadContactResponse_Builder*) replaceUpdatedGroupIdAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableUpdatedGroupIdList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactResponse_Builder*) addUpdatedGroupId:(int32_t) value {
  if (result.mutableUpdatedGroupIdList == nil) {
    result.mutableUpdatedGroupIdList = [NSMutableArray array];
  }
  [result.mutableUpdatedGroupIdList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (SyncUploadContactResponse_Builder*) addAllUpdatedGroupId:(NSArray*) values {
  if (result.mutableUpdatedGroupIdList == nil) {
    result.mutableUpdatedGroupIdList = [NSMutableArray array];
  }
  [result.mutableUpdatedGroupIdList addObjectsFromArray:values];
  return self;
}
- (SyncUploadContactResponse_Builder*) clearUpdatedGroupIdList {
  result.mutableUpdatedGroupIdList = nil;
  return self;
}
- (BOOL) hasBusinessCardVersion {
  return result.hasBusinessCardVersion;
}
- (int32_t) businessCardVersion {
  return result.businessCardVersion;
}
- (SyncUploadContactResponse_Builder*) setBusinessCardVersion:(int32_t) value {
  result.hasBusinessCardVersion = YES;
  result.businessCardVersion = value;
  return self;
}
- (SyncUploadContactResponse_Builder*) clearBusinessCardVersion {
  result.hasBusinessCardVersion = NO;
  result.businessCardVersion = 0;
  return self;
}
@end

@interface SyncMappingInfo ()
@property int32_t tempServerId;
@property int32_t serverId;
@property int32_t version;
@end

@implementation SyncMappingInfo

- (BOOL) hasTempServerId {
  return !!hasTempServerId_;
}
- (void) setHasTempServerId:(BOOL) value {
  hasTempServerId_ = !!value;
}
@synthesize tempServerId;
- (BOOL) hasServerId {
  return !!hasServerId_;
}
- (void) setHasServerId:(BOOL) value {
  hasServerId_ = !!value;
}
@synthesize serverId;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.tempServerId = 0;
    self.serverId = 0;
    self.version = 0;
  }
  return self;
}
static SyncMappingInfo* defaultSyncMappingInfoInstance = nil;
+ (void) initialize {
  if (self == [SyncMappingInfo class]) {
    defaultSyncMappingInfoInstance = [[SyncMappingInfo alloc] init];
  }
}
+ (SyncMappingInfo*) defaultInstance {
  return defaultSyncMappingInfoInstance;
}
- (SyncMappingInfo*) defaultInstance {
  return defaultSyncMappingInfoInstance;
}
- (BOOL) isInitialized {
  if (!self.hasTempServerId) {
    return NO;
  }
  if (!self.hasServerId) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTempServerId) {
    [output writeInt32:1 value:self.tempServerId];
  }
  if (self.hasServerId) {
    [output writeInt32:2 value:self.serverId];
  }
  if (self.hasVersion) {
    [output writeInt32:3 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasTempServerId) {
    size += computeInt32Size(1, self.tempServerId);
  }
  if (self.hasServerId) {
    size += computeInt32Size(2, self.serverId);
  }
  if (self.hasVersion) {
    size += computeInt32Size(3, self.version);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncMappingInfo*) parseFromData:(NSData*) data {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromData:data] build];
}
+ (SyncMappingInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncMappingInfo*) parseFromInputStream:(NSInputStream*) input {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromInputStream:input] build];
}
+ (SyncMappingInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncMappingInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromCodedInputStream:input] build];
}
+ (SyncMappingInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncMappingInfo*)[[[SyncMappingInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncMappingInfo_Builder*) builder {
  return [[[SyncMappingInfo_Builder alloc] init] autorelease];
}
+ (SyncMappingInfo_Builder*) builderWithPrototype:(SyncMappingInfo*) prototype {
  return [[SyncMappingInfo builder] mergeFrom:prototype];
}
- (SyncMappingInfo_Builder*) builder {
  return [SyncMappingInfo builder];
}
@end

@interface SyncMappingInfo_Builder()
@property (retain) SyncMappingInfo* result;
@end

@implementation SyncMappingInfo_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncMappingInfo alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncMappingInfo_Builder*) clear {
  self.result = [[[SyncMappingInfo alloc] init] autorelease];
  return self;
}
- (SyncMappingInfo_Builder*) clone {
  return [SyncMappingInfo builderWithPrototype:result];
}
- (SyncMappingInfo*) defaultInstance {
  return [SyncMappingInfo defaultInstance];
}
- (SyncMappingInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncMappingInfo*) buildPartial {
  SyncMappingInfo* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncMappingInfo_Builder*) mergeFrom:(SyncMappingInfo*) other {
  if (other == [SyncMappingInfo defaultInstance]) {
    return self;
  }
  if (other.hasTempServerId) {
    [self setTempServerId:other.tempServerId];
  }
  if (other.hasServerId) {
    [self setServerId:other.serverId];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncMappingInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncMappingInfo_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setTempServerId:[input readInt32]];
        break;
      }
      case 16: {
        [self setServerId:[input readInt32]];
        break;
      }
      case 24: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasTempServerId {
  return result.hasTempServerId;
}
- (int32_t) tempServerId {
  return result.tempServerId;
}
- (SyncMappingInfo_Builder*) setTempServerId:(int32_t) value {
  result.hasTempServerId = YES;
  result.tempServerId = value;
  return self;
}
- (SyncMappingInfo_Builder*) clearTempServerId {
  result.hasTempServerId = NO;
  result.tempServerId = 0;
  return self;
}
- (BOOL) hasServerId {
  return result.hasServerId;
}
- (int32_t) serverId {
  return result.serverId;
}
- (SyncMappingInfo_Builder*) setServerId:(int32_t) value {
  result.hasServerId = YES;
  result.serverId = value;
  return self;
}
- (SyncMappingInfo_Builder*) clearServerId {
  result.hasServerId = NO;
  result.serverId = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (SyncMappingInfo_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (SyncMappingInfo_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
@end

@interface SyncSummary ()
@property int32_t id;
@property int32_t version;
@end

@implementation SyncSummary

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasVersion {
  return !!hasVersion_;
}
- (void) setHasVersion:(BOOL) value {
  hasVersion_ = !!value;
}
@synthesize version;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.version = 0;
  }
  return self;
}
static SyncSummary* defaultSyncSummaryInstance = nil;
+ (void) initialize {
  if (self == [SyncSummary class]) {
    defaultSyncSummaryInstance = [[SyncSummary alloc] init];
  }
}
+ (SyncSummary*) defaultInstance {
  return defaultSyncSummaryInstance;
}
- (SyncSummary*) defaultInstance {
  return defaultSyncSummaryInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasVersion) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasVersion) {
    [output writeInt32:2 value:self.version];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasVersion) {
    size += computeInt32Size(2, self.version);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (SyncSummary*) parseFromData:(NSData*) data {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromData:data] build];
}
+ (SyncSummary*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SyncSummary*) parseFromInputStream:(NSInputStream*) input {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromInputStream:input] build];
}
+ (SyncSummary*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromCodedInputStream:input] build];
}
+ (SyncSummary*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SyncSummary*)[[[SyncSummary builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SyncSummary_Builder*) builder {
  return [[[SyncSummary_Builder alloc] init] autorelease];
}
+ (SyncSummary_Builder*) builderWithPrototype:(SyncSummary*) prototype {
  return [[SyncSummary builder] mergeFrom:prototype];
}
- (SyncSummary_Builder*) builder {
  return [SyncSummary builder];
}
@end

@interface SyncSummary_Builder()
@property (retain) SyncSummary* result;
@end

@implementation SyncSummary_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[SyncSummary alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (SyncSummary_Builder*) clear {
  self.result = [[[SyncSummary alloc] init] autorelease];
  return self;
}
- (SyncSummary_Builder*) clone {
  return [SyncSummary builderWithPrototype:result];
}
- (SyncSummary*) defaultInstance {
  return [SyncSummary defaultInstance];
}
- (SyncSummary*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SyncSummary*) buildPartial {
  SyncSummary* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (SyncSummary_Builder*) mergeFrom:(SyncSummary*) other {
  if (other == [SyncSummary defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasVersion) {
    [self setVersion:other.version];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SyncSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SyncSummary_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 16: {
        [self setVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (SyncSummary_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (SyncSummary_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasVersion {
  return result.hasVersion;
}
- (int32_t) version {
  return result.version;
}
- (SyncSummary_Builder*) setVersion:(int32_t) value {
  result.hasVersion = YES;
  result.version = value;
  return self;
}
- (SyncSummary_Builder*) clearVersion {
  result.hasVersion = NO;
  result.version = 0;
  return self;
}
@end

