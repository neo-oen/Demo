// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "DownloadPortraitProto.pb.h"

@implementation DownloadPortraitProtoRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [DownloadPortraitProtoRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [BaseTypeProtoRoot registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface DownloadPortraitRequest ()
@property (retain) NSMutableArray* mutableSidList;
@property BOOL isRequestBusinessCardPortrait;
@end

@implementation DownloadPortraitRequest

@synthesize mutableSidList;
- (BOOL) hasIsRequestBusinessCardPortrait {
  return !!hasIsRequestBusinessCardPortrait_;
}
- (void) setHasIsRequestBusinessCardPortrait:(BOOL) value {
  hasIsRequestBusinessCardPortrait_ = !!value;
}
- (BOOL) isRequestBusinessCardPortrait {
  return !!isRequestBusinessCardPortrait_;
}
- (void) setIsRequestBusinessCardPortrait:(BOOL) value {
  isRequestBusinessCardPortrait_ = !!value;
}
- (void) dealloc {
  self.mutableSidList = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.isRequestBusinessCardPortrait = NO;
  }
  return self;
}
static DownloadPortraitRequest* defaultDownloadPortraitRequestInstance = nil;
+ (void) initialize {
  if (self == [DownloadPortraitRequest class]) {
    defaultDownloadPortraitRequestInstance = [[DownloadPortraitRequest alloc] init];
  }
}
+ (DownloadPortraitRequest*) defaultInstance {
  return defaultDownloadPortraitRequestInstance;
}
- (DownloadPortraitRequest*) defaultInstance {
  return defaultDownloadPortraitRequestInstance;
}
- (NSArray*) sidList {
  return mutableSidList;
}
- (int32_t) sidAtIndex:(int32_t) index {
  id value = [mutableSidList objectAtIndex:index];
  return [value intValue];
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.mutableSidList.count > 0) {
    [output writeRawVarint32:10];
    [output writeRawVarint32:sidMemoizedSerializedSize];
  }
  for (NSNumber* value in self.mutableSidList) {
    [output writeInt32NoTag:[value intValue]];
  }
  if (self.hasIsRequestBusinessCardPortrait) {
    [output writeBool:2 value:self.isRequestBusinessCardPortrait];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  {
    int32_t dataSize = 0;
    for (NSNumber* value in self.mutableSidList) {
      dataSize += computeInt32SizeNoTag([value intValue]);
    }
    size += dataSize;
    if (self.mutableSidList.count > 0) {
      size += 1;
      size += computeInt32SizeNoTag(dataSize);
    }
    sidMemoizedSerializedSize = dataSize;
  }
  if (self.hasIsRequestBusinessCardPortrait) {
    size += computeBoolSize(2, self.isRequestBusinessCardPortrait);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DownloadPortraitRequest*) parseFromData:(NSData*) data {
  return (DownloadPortraitRequest*)[[[DownloadPortraitRequest builder] mergeFromData:data] build];
}
+ (DownloadPortraitRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitRequest*)[[[DownloadPortraitRequest builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitRequest*) parseFromInputStream:(NSInputStream*) input {
  return (DownloadPortraitRequest*)[[[DownloadPortraitRequest builder] mergeFromInputStream:input] build];
}
+ (DownloadPortraitRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitRequest*)[[[DownloadPortraitRequest builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DownloadPortraitRequest*)[[[DownloadPortraitRequest builder] mergeFromCodedInputStream:input] build];
}
+ (DownloadPortraitRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitRequest*)[[[DownloadPortraitRequest builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitRequest_Builder*) builder {
  return [[[DownloadPortraitRequest_Builder alloc] init] autorelease];
}
+ (DownloadPortraitRequest_Builder*) builderWithPrototype:(DownloadPortraitRequest*) prototype {
  return [[DownloadPortraitRequest builder] mergeFrom:prototype];
}
- (DownloadPortraitRequest_Builder*) builder {
  return [DownloadPortraitRequest builder];
}
@end

@interface DownloadPortraitRequest_Builder()
@property (retain) DownloadPortraitRequest* result;
@end

@implementation DownloadPortraitRequest_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DownloadPortraitRequest alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DownloadPortraitRequest_Builder*) clear {
  self.result = [[[DownloadPortraitRequest alloc] init] autorelease];
  return self;
}
- (DownloadPortraitRequest_Builder*) clone {
  return [DownloadPortraitRequest builderWithPrototype:result];
}
- (DownloadPortraitRequest*) defaultInstance {
  return [DownloadPortraitRequest defaultInstance];
}
- (DownloadPortraitRequest*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DownloadPortraitRequest*) buildPartial {
  DownloadPortraitRequest* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DownloadPortraitRequest_Builder*) mergeFrom:(DownloadPortraitRequest*) other {
  if (other == [DownloadPortraitRequest defaultInstance]) {
    return self;
  }
  if (other.mutableSidList.count > 0) {
    if (result.mutableSidList == nil) {
      result.mutableSidList = [NSMutableArray array];
    }
    [result.mutableSidList addObjectsFromArray:other.mutableSidList];
  }
  if (other.hasIsRequestBusinessCardPortrait) {
    [self setIsRequestBusinessCardPortrait:other.isRequestBusinessCardPortrait];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DownloadPortraitRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DownloadPortraitRequest_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        int32_t length = [input readRawVarint32];
        int32_t limit = [input pushLimit:length];
        while (input.bytesUntilLimit > 0) {
          [self addSid:[input readInt32]];
        }
        [input popLimit:limit];
        break;
      }
      case 16: {
        [self setIsRequestBusinessCardPortrait:[input readBool]];
        break;
      }
    }
  }
}
- (NSArray*) sidList {
  if (result.mutableSidList == nil) {
    return [NSArray array];
  }
  return result.mutableSidList;
}
- (int32_t) sidAtIndex:(int32_t) index {
  return [result sidAtIndex:index];
}
- (DownloadPortraitRequest_Builder*) replaceSidAtIndex:(int32_t) index with:(int32_t) value {
  [result.mutableSidList replaceObjectAtIndex:index withObject:[NSNumber numberWithInt:value]];
  return self;
}
- (DownloadPortraitRequest_Builder*) addSid:(int32_t) value {
  if (result.mutableSidList == nil) {
    result.mutableSidList = [NSMutableArray array];
  }
  [result.mutableSidList addObject:[NSNumber numberWithInt:value]];
  return self;
}
- (DownloadPortraitRequest_Builder*) addAllSid:(NSArray*) values {
  if (result.mutableSidList == nil) {
    result.mutableSidList = [NSMutableArray array];
  }
  [result.mutableSidList addObjectsFromArray:values];
  return self;
}
- (DownloadPortraitRequest_Builder*) clearSidList {
  result.mutableSidList = nil;
  return self;
}
- (BOOL) hasIsRequestBusinessCardPortrait {
  return result.hasIsRequestBusinessCardPortrait;
}
- (BOOL) isRequestBusinessCardPortrait {
  return result.isRequestBusinessCardPortrait;
}
- (DownloadPortraitRequest_Builder*) setIsRequestBusinessCardPortrait:(BOOL) value {
  result.hasIsRequestBusinessCardPortrait = YES;
  result.isRequestBusinessCardPortrait = value;
  return self;
}
- (DownloadPortraitRequest_Builder*) clearIsRequestBusinessCardPortrait {
  result.hasIsRequestBusinessCardPortrait = NO;
  result.isRequestBusinessCardPortrait = NO;
  return self;
}
@end

@interface DownloadPortraitData ()
@property (retain) PortraitData* portraitData;
@property int32_t portraitVersion;
@end

@implementation DownloadPortraitData

- (BOOL) hasPortraitData {
  return !!hasPortraitData_;
}
- (void) setHasPortraitData:(BOOL) value {
  hasPortraitData_ = !!value;
}
@synthesize portraitData;
- (BOOL) hasPortraitVersion {
  return !!hasPortraitVersion_;
}
- (void) setHasPortraitVersion:(BOOL) value {
  hasPortraitVersion_ = !!value;
}
@synthesize portraitVersion;
- (void) dealloc {
  self.portraitData = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.portraitData = [PortraitData defaultInstance];
    self.portraitVersion = 0;
  }
  return self;
}
static DownloadPortraitData* defaultDownloadPortraitDataInstance = nil;
+ (void) initialize {
  if (self == [DownloadPortraitData class]) {
    defaultDownloadPortraitDataInstance = [[DownloadPortraitData alloc] init];
  }
}
+ (DownloadPortraitData*) defaultInstance {
  return defaultDownloadPortraitDataInstance;
}
- (DownloadPortraitData*) defaultInstance {
  return defaultDownloadPortraitDataInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasPortraitData) {
    [output writeMessage:1 value:self.portraitData];
  }
  if (self.hasPortraitVersion) {
    [output writeInt32:2 value:self.portraitVersion];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasPortraitData) {
    size += computeMessageSize(1, self.portraitData);
  }
  if (self.hasPortraitVersion) {
    size += computeInt32Size(2, self.portraitVersion);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DownloadPortraitData*) parseFromData:(NSData*) data {
  return (DownloadPortraitData*)[[[DownloadPortraitData builder] mergeFromData:data] build];
}
+ (DownloadPortraitData*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitData*)[[[DownloadPortraitData builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitData*) parseFromInputStream:(NSInputStream*) input {
  return (DownloadPortraitData*)[[[DownloadPortraitData builder] mergeFromInputStream:input] build];
}
+ (DownloadPortraitData*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitData*)[[[DownloadPortraitData builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitData*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DownloadPortraitData*)[[[DownloadPortraitData builder] mergeFromCodedInputStream:input] build];
}
+ (DownloadPortraitData*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitData*)[[[DownloadPortraitData builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitData_Builder*) builder {
  return [[[DownloadPortraitData_Builder alloc] init] autorelease];
}
+ (DownloadPortraitData_Builder*) builderWithPrototype:(DownloadPortraitData*) prototype {
  return [[DownloadPortraitData builder] mergeFrom:prototype];
}
- (DownloadPortraitData_Builder*) builder {
  return [DownloadPortraitData builder];
}
@end

@interface DownloadPortraitData_Builder()
@property (retain) DownloadPortraitData* result;
@end

@implementation DownloadPortraitData_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DownloadPortraitData alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DownloadPortraitData_Builder*) clear {
  self.result = [[[DownloadPortraitData alloc] init] autorelease];
  return self;
}
- (DownloadPortraitData_Builder*) clone {
  return [DownloadPortraitData builderWithPrototype:result];
}
- (DownloadPortraitData*) defaultInstance {
  return [DownloadPortraitData defaultInstance];
}
- (DownloadPortraitData*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DownloadPortraitData*) buildPartial {
  DownloadPortraitData* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DownloadPortraitData_Builder*) mergeFrom:(DownloadPortraitData*) other {
  if (other == [DownloadPortraitData defaultInstance]) {
    return self;
  }
  if (other.hasPortraitData) {
    [self mergePortraitData:other.portraitData];
  }
  if (other.hasPortraitVersion) {
    [self setPortraitVersion:other.portraitVersion];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DownloadPortraitData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DownloadPortraitData_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        PortraitData_Builder* subBuilder = [PortraitData builder];
        if (self.hasPortraitData) {
          [subBuilder mergeFrom:self.portraitData];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setPortraitData:[subBuilder buildPartial]];
        break;
      }
      case 16: {
        [self setPortraitVersion:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasPortraitData {
  return result.hasPortraitData;
}
- (PortraitData*) portraitData {
  return result.portraitData;
}
- (DownloadPortraitData_Builder*) setPortraitData:(PortraitData*) value {
  result.hasPortraitData = YES;
  result.portraitData = value;
  return self;
}
- (DownloadPortraitData_Builder*) setPortraitDataBuilder:(PortraitData_Builder*) builderForValue {
  return [self setPortraitData:[builderForValue build]];
}
- (DownloadPortraitData_Builder*) mergePortraitData:(PortraitData*) value {
  if (result.hasPortraitData &&
      result.portraitData != [PortraitData defaultInstance]) {
    result.portraitData =
      [[[PortraitData builderWithPrototype:result.portraitData] mergeFrom:value] buildPartial];
  } else {
    result.portraitData = value;
  }
  result.hasPortraitData = YES;
  return self;
}
- (DownloadPortraitData_Builder*) clearPortraitData {
  result.hasPortraitData = NO;
  result.portraitData = [PortraitData defaultInstance];
  return self;
}
- (BOOL) hasPortraitVersion {
  return result.hasPortraitVersion;
}
- (int32_t) portraitVersion {
  return result.portraitVersion;
}
- (DownloadPortraitData_Builder*) setPortraitVersion:(int32_t) value {
  result.hasPortraitVersion = YES;
  result.portraitVersion = value;
  return self;
}
- (DownloadPortraitData_Builder*) clearPortraitVersion {
  result.hasPortraitVersion = NO;
  result.portraitVersion = 0;
  return self;
}
@end

@interface DownloadPortraitResponse ()
@property (retain) NSMutableArray* mutablePortraitList;
@property (retain) DownloadPortraitData* businessCardPortrait;
@end

@implementation DownloadPortraitResponse

@synthesize mutablePortraitList;
- (BOOL) hasBusinessCardPortrait {
  return !!hasBusinessCardPortrait_;
}
- (void) setHasBusinessCardPortrait:(BOOL) value {
  hasBusinessCardPortrait_ = !!value;
}
@synthesize businessCardPortrait;
- (void) dealloc {
  self.mutablePortraitList = nil;
  self.businessCardPortrait = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.businessCardPortrait = [DownloadPortraitData defaultInstance];
  }
  return self;
}
static DownloadPortraitResponse* defaultDownloadPortraitResponseInstance = nil;
+ (void) initialize {
  if (self == [DownloadPortraitResponse class]) {
    defaultDownloadPortraitResponseInstance = [[DownloadPortraitResponse alloc] init];
  }
}
+ (DownloadPortraitResponse*) defaultInstance {
  return defaultDownloadPortraitResponseInstance;
}
- (DownloadPortraitResponse*) defaultInstance {
  return defaultDownloadPortraitResponseInstance;
}
- (NSArray*) portraitList {
  return mutablePortraitList;
}
- (DownloadPortraitData*) portraitAtIndex:(int32_t) index {
  id value = [mutablePortraitList objectAtIndex:index];
  return value;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  for (DownloadPortraitData* element in self.portraitList) {
    [output writeMessage:1 value:element];
  }
  if (self.hasBusinessCardPortrait) {
    [output writeMessage:2 value:self.businessCardPortrait];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  for (DownloadPortraitData* element in self.portraitList) {
    size += computeMessageSize(1, element);
  }
  if (self.hasBusinessCardPortrait) {
    size += computeMessageSize(2, self.businessCardPortrait);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (DownloadPortraitResponse*) parseFromData:(NSData*) data {
  return (DownloadPortraitResponse*)[[[DownloadPortraitResponse builder] mergeFromData:data] build];
}
+ (DownloadPortraitResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitResponse*)[[[DownloadPortraitResponse builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitResponse*) parseFromInputStream:(NSInputStream*) input {
  return (DownloadPortraitResponse*)[[[DownloadPortraitResponse builder] mergeFromInputStream:input] build];
}
+ (DownloadPortraitResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitResponse*)[[[DownloadPortraitResponse builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (DownloadPortraitResponse*)[[[DownloadPortraitResponse builder] mergeFromCodedInputStream:input] build];
}
+ (DownloadPortraitResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (DownloadPortraitResponse*)[[[DownloadPortraitResponse builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (DownloadPortraitResponse_Builder*) builder {
  return [[[DownloadPortraitResponse_Builder alloc] init] autorelease];
}
+ (DownloadPortraitResponse_Builder*) builderWithPrototype:(DownloadPortraitResponse*) prototype {
  return [[DownloadPortraitResponse builder] mergeFrom:prototype];
}
- (DownloadPortraitResponse_Builder*) builder {
  return [DownloadPortraitResponse builder];
}
@end

@interface DownloadPortraitResponse_Builder()
@property (retain) DownloadPortraitResponse* result;
@end

@implementation DownloadPortraitResponse_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[DownloadPortraitResponse alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (DownloadPortraitResponse_Builder*) clear {
  self.result = [[[DownloadPortraitResponse alloc] init] autorelease];
  return self;
}
- (DownloadPortraitResponse_Builder*) clone {
  return [DownloadPortraitResponse builderWithPrototype:result];
}
- (DownloadPortraitResponse*) defaultInstance {
  return [DownloadPortraitResponse defaultInstance];
}
- (DownloadPortraitResponse*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (DownloadPortraitResponse*) buildPartial {
  DownloadPortraitResponse* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (DownloadPortraitResponse_Builder*) mergeFrom:(DownloadPortraitResponse*) other {
  if (other == [DownloadPortraitResponse defaultInstance]) {
    return self;
  }
  if (other.mutablePortraitList.count > 0) {
    if (result.mutablePortraitList == nil) {
      result.mutablePortraitList = [NSMutableArray array];
    }
    [result.mutablePortraitList addObjectsFromArray:other.mutablePortraitList];
  }
  if (other.hasBusinessCardPortrait) {
    [self mergeBusinessCardPortrait:other.businessCardPortrait];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (DownloadPortraitResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (DownloadPortraitResponse_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        DownloadPortraitData_Builder* subBuilder = [DownloadPortraitData builder];
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self addPortrait:[subBuilder buildPartial]];
        break;
      }
      case 18: {
        DownloadPortraitData_Builder* subBuilder = [DownloadPortraitData builder];
        if (self.hasBusinessCardPortrait) {
          [subBuilder mergeFrom:self.businessCardPortrait];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setBusinessCardPortrait:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (NSArray*) portraitList {
  if (result.mutablePortraitList == nil) { return [NSArray array]; }
  return result.mutablePortraitList;
}
- (DownloadPortraitData*) portraitAtIndex:(int32_t) index {
  return [result portraitAtIndex:index];
}
- (DownloadPortraitResponse_Builder*) replacePortraitAtIndex:(int32_t) index with:(DownloadPortraitData*) value {
  [result.mutablePortraitList replaceObjectAtIndex:index withObject:value];
  return self;
}
- (DownloadPortraitResponse_Builder*) addAllPortrait:(NSArray*) values {
  if (result.mutablePortraitList == nil) {
    result.mutablePortraitList = [NSMutableArray array];
  }
  [result.mutablePortraitList addObjectsFromArray:values];
  return self;
}
- (DownloadPortraitResponse_Builder*) clearPortraitList {
  result.mutablePortraitList = nil;
  return self;
}
- (DownloadPortraitResponse_Builder*) addPortrait:(DownloadPortraitData*) value {
  if (result.mutablePortraitList == nil) {
    result.mutablePortraitList = [NSMutableArray array];
  }
  [result.mutablePortraitList addObject:value];
  return self;
}
- (BOOL) hasBusinessCardPortrait {
  return result.hasBusinessCardPortrait;
}
- (DownloadPortraitData*) businessCardPortrait {
  return result.businessCardPortrait;
}
- (DownloadPortraitResponse_Builder*) setBusinessCardPortrait:(DownloadPortraitData*) value {
  result.hasBusinessCardPortrait = YES;
  result.businessCardPortrait = value;
  return self;
}
- (DownloadPortraitResponse_Builder*) setBusinessCardPortraitBuilder:(DownloadPortraitData_Builder*) builderForValue {
  return [self setBusinessCardPortrait:[builderForValue build]];
}
- (DownloadPortraitResponse_Builder*) mergeBusinessCardPortrait:(DownloadPortraitData*) value {
  if (result.hasBusinessCardPortrait &&
      result.businessCardPortrait != [DownloadPortraitData defaultInstance]) {
    result.businessCardPortrait =
      [[[DownloadPortraitData builderWithPrototype:result.businessCardPortrait] mergeFrom:value] buildPartial];
  } else {
    result.businessCardPortrait = value;
  }
  result.hasBusinessCardPortrait = YES;
  return self;
}
- (DownloadPortraitResponse_Builder*) clearBusinessCardPortrait {
  result.hasBusinessCardPortrait = NO;
  result.businessCardPortrait = [DownloadPortraitData defaultInstance];
  return self;
}
@end

